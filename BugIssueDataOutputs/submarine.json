[
    {
        "url": "https://api.github.com/repos/apache/submarine/issues/1120",
        "repository_url": "https://api.github.com/repos/apache/submarine",
        "labels_url": "https://api.github.com/repos/apache/submarine/issues/1120/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/submarine/issues/1120/comments",
        "events_url": "https://api.github.com/repos/apache/submarine/issues/1120/events",
        "html_url": "https://github.com/apache/submarine/issues/1120",
        "id": 2196606503,
        "node_id": "I_kwDODHwXyM6C7Y4n",
        "number": 1120,
        "title": "Hard-coded JWT Key Vulnerability",
        "user": {
            "login": "laiyousin",
            "id": 68462169,
            "node_id": "MDQ6VXNlcjY4NDYyMTY5",
            "avatar_url": "https://avatars.githubusercontent.com/u/68462169?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/laiyousin",
            "html_url": "https://github.com/laiyousin",
            "followers_url": "https://api.github.com/users/laiyousin/followers",
            "following_url": "https://api.github.com/users/laiyousin/following{/other_user}",
            "gists_url": "https://api.github.com/users/laiyousin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/laiyousin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/laiyousin/subscriptions",
            "organizations_url": "https://api.github.com/users/laiyousin/orgs",
            "repos_url": "https://api.github.com/users/laiyousin/repos",
            "events_url": "https://api.github.com/users/laiyousin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/laiyousin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-03-20T03:41:07Z",
        "updated_at": "2024-03-20T03:41:07Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "A hard-coded JWT (JSON Web Token) key vulnerability has been discovered, specifically within `org.apache.submarine.commons.utils.SubmarineConfVars.ConfVars#SUBMARINE_AUTH_DEFAULT_SECRET`, where the key is hardcoded as `SUBMARINE_SECRET_12345678901234567890`. It will pose a significant security risk by allowing attackers to generate unauthorized JWT tokens, potentially enabling them to bypass authentication mechanisms and access sensitive data and functionalities.\r\n\r\n![image](https://github.com/apache/submarine/assets/68462169/8d6d94f0-1a0b-42e9-aa6d-97a4d004f02c)\r\n",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/apache/submarine/issues/1120/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/submarine/issues/1120/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/apache/submarine/issues/1119",
        "repository_url": "https://api.github.com/repos/apache/submarine",
        "labels_url": "https://api.github.com/repos/apache/submarine/issues/1119/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/submarine/issues/1119/comments",
        "events_url": "https://api.github.com/repos/apache/submarine/issues/1119/events",
        "html_url": "https://github.com/apache/submarine/issues/1119",
        "id": 2151119114,
        "node_id": "I_kwDODHwXyM6AN3kK",
        "number": 1119,
        "title": "submarine uses a non OSS friendly version of org.json jar",
        "user": {
            "login": "pjfanning",
            "id": 11783444,
            "node_id": "MDQ6VXNlcjExNzgzNDQ0",
            "avatar_url": "https://avatars.githubusercontent.com/u/11783444?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pjfanning",
            "html_url": "https://github.com/pjfanning",
            "followers_url": "https://api.github.com/users/pjfanning/followers",
            "following_url": "https://api.github.com/users/pjfanning/following{/other_user}",
            "gists_url": "https://api.github.com/users/pjfanning/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pjfanning/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pjfanning/subscriptions",
            "organizations_url": "https://api.github.com/users/pjfanning/orgs",
            "repos_url": "https://api.github.com/users/pjfanning/repos",
            "events_url": "https://api.github.com/users/pjfanning/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pjfanning/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-02-23T13:40:35Z",
        "updated_at": "2024-03-12T03:44:06Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "https://github.com/apache/submarine/blob/246ecee0706cad8cfa6a66006a7005c67ae235da/pom.xml#L135\r\n\r\nSee https://www.apache.org/legal/resolved.html (JSON license section)\r\n\r\nCould you upgrade to a newer version? And these versions have security fixes too.\r\n\r\nSince late 2022, this jar is now properly in the public domain.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/apache/submarine/issues/1119/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/submarine/issues/1119/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/apache/submarine/issues/1075",
        "repository_url": "https://api.github.com/repos/apache/submarine",
        "labels_url": "https://api.github.com/repos/apache/submarine/issues/1075/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/submarine/issues/1075/comments",
        "events_url": "https://api.github.com/repos/apache/submarine/issues/1075/events",
        "html_url": "https://github.com/apache/submarine/issues/1075",
        "id": 1771418191,
        "node_id": "I_kwDODHwXyM5plbJP",
        "number": 1075,
        "title": "helm install submarine ./helm-charts/submarine error",
        "user": {
            "login": "TaiJuWu",
            "id": 33004323,
            "node_id": "MDQ6VXNlcjMzMDA0MzIz",
            "avatar_url": "https://avatars.githubusercontent.com/u/33004323?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TaiJuWu",
            "html_url": "https://github.com/TaiJuWu",
            "followers_url": "https://api.github.com/users/TaiJuWu/followers",
            "following_url": "https://api.github.com/users/TaiJuWu/following{/other_user}",
            "gists_url": "https://api.github.com/users/TaiJuWu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TaiJuWu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TaiJuWu/subscriptions",
            "organizations_url": "https://api.github.com/users/TaiJuWu/orgs",
            "repos_url": "https://api.github.com/users/TaiJuWu/repos",
            "events_url": "https://api.github.com/users/TaiJuWu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TaiJuWu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-23T12:57:43Z",
        "updated_at": "2023-07-04T09:24:01Z",
        "closed_at": "2023-07-04T09:24:00Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I followed quickstart (https://submarine.apache.org/docs/gettingStarted/quickstart)\r\nAt step 2: helm install submarine ./helm-charts/submarine\r\n\r\nThe error shows:\r\nError: INSTALLATION FAILED: An error occurred while checking for chart dependencies. You may need to run `helm dependency \r\nbuild` to fetch missing dependencies: found in Chart.yaml, but missing in charts/ directory: seldon-core-operato\r\n\r\nAfter run `helm dependency build` also show:\r\nContents of linked file included and used\r\nError: Chart.yaml file is missing",
        "closed_by": {
            "login": "TaiJuWu",
            "id": 33004323,
            "node_id": "MDQ6VXNlcjMzMDA0MzIz",
            "avatar_url": "https://avatars.githubusercontent.com/u/33004323?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TaiJuWu",
            "html_url": "https://github.com/TaiJuWu",
            "followers_url": "https://api.github.com/users/TaiJuWu/followers",
            "following_url": "https://api.github.com/users/TaiJuWu/following{/other_user}",
            "gists_url": "https://api.github.com/users/TaiJuWu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TaiJuWu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TaiJuWu/subscriptions",
            "organizations_url": "https://api.github.com/users/TaiJuWu/orgs",
            "repos_url": "https://api.github.com/users/TaiJuWu/repos",
            "events_url": "https://api.github.com/users/TaiJuWu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TaiJuWu/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/apache/submarine/issues/1075/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/submarine/issues/1075/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/apache/submarine/issues/1068",
        "repository_url": "https://api.github.com/repos/apache/submarine",
        "labels_url": "https://api.github.com/repos/apache/submarine/issues/1068/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/submarine/issues/1068/comments",
        "events_url": "https://api.github.com/repos/apache/submarine/issues/1068/events",
        "html_url": "https://github.com/apache/submarine/issues/1068",
        "id": 1743243670,
        "node_id": "I_kwDODHwXyM5n58mW",
        "number": 1068,
        "title": "Quickstart \u90e8\u7f72\u5b8c\u6210\u540e\uff0c\u5728\u6267\u884c\u670d\u52a1\u8f6c\u53d1\u65f6\uff0c\u4f7f\u7528\u6d4f\u89c8\u5668\u8bbf\u95ee\u5de5\u4f5c\u53f0\uff0c\u4e00\u76f4\u663e\u793a\u7a7a\u767d\u9875\u9762",
        "user": {
            "login": "gzg1500521074",
            "id": 24455273,
            "node_id": "MDQ6VXNlcjI0NDU1Mjcz",
            "avatar_url": "https://avatars.githubusercontent.com/u/24455273?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gzg1500521074",
            "html_url": "https://github.com/gzg1500521074",
            "followers_url": "https://api.github.com/users/gzg1500521074/followers",
            "following_url": "https://api.github.com/users/gzg1500521074/following{/other_user}",
            "gists_url": "https://api.github.com/users/gzg1500521074/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gzg1500521074/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gzg1500521074/subscriptions",
            "organizations_url": "https://api.github.com/users/gzg1500521074/orgs",
            "repos_url": "https://api.github.com/users/gzg1500521074/repos",
            "events_url": "https://api.github.com/users/gzg1500521074/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gzg1500521074/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-06T07:18:41Z",
        "updated_at": "2023-06-06T08:50:13Z",
        "closed_at": "2023-06-06T08:50:13Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Quickstart \u90e8\u7f72\u5b8c\u6210\u540e\uff0c\u5728\u6267\u884c\u670d\u52a1\u8f6c\u53d1\u65f6\uff0c\u4f7f\u7528\u6d4f\u89c8\u5668\u8bbf\u95ee\u5de5\u4f5c\u53f0\uff0c\u4e00\u76f4\u663e\u793a\u7a7a\u767d\u9875\u9762\uff0c\u63a7\u5236\u53f0\u62a5\u8d85\u65f6\u9519\u8bef\uff0c\u8fd9\u4e2a\u5927\u6982\u662f\u4ec0\u4e48\u539f\u56e0\u9020\u6210\u7684\u5440\uff0c\u8c22\u8c22\u3002\r\n\u90e8\u7f72\u73af\u5883\uff1a\u963f\u91cc\u4e91\r\n\u64cd\u4f5c\u7cfb\u7edf\uff1acentos 7.9\r\n\u90e8\u7f72\u547d\u4ee4\uff1aminikube start --force --driver=docker --cpus 8 --memory 8192 --image-mirror-country='cn' --image-repository='auto' --listen-address='0.0.0.0'  --kubernetes-version v1.24.12\r\n\r\n![image](https://github.com/apache/submarine/assets/24455273/04b42f24-1ff4-4796-b6be-86dcdf5db0e5)\r\n![image](https://github.com/apache/submarine/assets/24455273/c64cc055-0773-4136-9642-f122d0ab0884)\r\n\r\n",
        "closed_by": {
            "login": "gzg1500521074",
            "id": 24455273,
            "node_id": "MDQ6VXNlcjI0NDU1Mjcz",
            "avatar_url": "https://avatars.githubusercontent.com/u/24455273?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gzg1500521074",
            "html_url": "https://github.com/gzg1500521074",
            "followers_url": "https://api.github.com/users/gzg1500521074/followers",
            "following_url": "https://api.github.com/users/gzg1500521074/following{/other_user}",
            "gists_url": "https://api.github.com/users/gzg1500521074/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gzg1500521074/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gzg1500521074/subscriptions",
            "organizations_url": "https://api.github.com/users/gzg1500521074/orgs",
            "repos_url": "https://api.github.com/users/gzg1500521074/repos",
            "events_url": "https://api.github.com/users/gzg1500521074/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gzg1500521074/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/apache/submarine/issues/1068/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/submarine/issues/1068/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/apache/submarine/issues/1066",
        "repository_url": "https://api.github.com/repos/apache/submarine",
        "labels_url": "https://api.github.com/repos/apache/submarine/issues/1066/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/submarine/issues/1066/comments",
        "events_url": "https://api.github.com/repos/apache/submarine/issues/1066/events",
        "html_url": "https://github.com/apache/submarine/issues/1066",
        "id": 1741615621,
        "node_id": "I_kwDODHwXyM5nzvIF",
        "number": 1066,
        "title": "\u5feb\u901f\u793a\u4f8b\u4e0d\u80fd\u6b63\u5e38\u542f\u52a8\u8fd0\u884c",
        "user": {
            "login": "gzg1500521074",
            "id": 24455273,
            "node_id": "MDQ6VXNlcjI0NDU1Mjcz",
            "avatar_url": "https://avatars.githubusercontent.com/u/24455273?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gzg1500521074",
            "html_url": "https://github.com/gzg1500521074",
            "followers_url": "https://api.github.com/users/gzg1500521074/followers",
            "following_url": "https://api.github.com/users/gzg1500521074/following{/other_user}",
            "gists_url": "https://api.github.com/users/gzg1500521074/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gzg1500521074/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gzg1500521074/subscriptions",
            "organizations_url": "https://api.github.com/users/gzg1500521074/orgs",
            "repos_url": "https://api.github.com/users/gzg1500521074/repos",
            "events_url": "https://api.github.com/users/gzg1500521074/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gzg1500521074/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-05T11:55:57Z",
        "updated_at": "2023-06-06T03:45:51Z",
        "closed_at": "2023-06-06T03:45:51Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "\u5f53\u6211\u6267\u884c \"kubectl apply -f submarine-cloud-v2/artifacts/examples/example-submarine.yaml\" \u65f6\uff0c\u62a5\u4e86\u5982\u4e0b\u9519\u8bef\uff0c\u8bf7\u770b\u622a\u56fe\u3002\r\n\r\n<img width=\"1435\" alt=\"image\" src=\"https://github.com/apache/submarine/assets/24455273/5ba5548f-7b39-4480-b4a8-4a48bdb8cddb\">\r\n",
        "closed_by": {
            "login": "gzg1500521074",
            "id": 24455273,
            "node_id": "MDQ6VXNlcjI0NDU1Mjcz",
            "avatar_url": "https://avatars.githubusercontent.com/u/24455273?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gzg1500521074",
            "html_url": "https://github.com/gzg1500521074",
            "followers_url": "https://api.github.com/users/gzg1500521074/followers",
            "following_url": "https://api.github.com/users/gzg1500521074/following{/other_user}",
            "gists_url": "https://api.github.com/users/gzg1500521074/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gzg1500521074/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gzg1500521074/subscriptions",
            "organizations_url": "https://api.github.com/users/gzg1500521074/orgs",
            "repos_url": "https://api.github.com/users/gzg1500521074/repos",
            "events_url": "https://api.github.com/users/gzg1500521074/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gzg1500521074/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/apache/submarine/issues/1066/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/submarine/issues/1066/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/apache/submarine/issues/1046",
        "repository_url": "https://api.github.com/repos/apache/submarine",
        "labels_url": "https://api.github.com/repos/apache/submarine/issues/1046/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/submarine/issues/1046/comments",
        "events_url": "https://api.github.com/repos/apache/submarine/issues/1046/events",
        "html_url": "https://github.com/apache/submarine/issues/1046",
        "id": 1590630351,
        "node_id": "I_kwDODHwXyM5ezxfP",
        "number": 1046,
        "title": "CICD in submarine-workbench section always failed",
        "user": {
            "login": "cdmikechen",
            "id": 12069428,
            "node_id": "MDQ6VXNlcjEyMDY5NDI4",
            "avatar_url": "https://avatars.githubusercontent.com/u/12069428?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cdmikechen",
            "html_url": "https://github.com/cdmikechen",
            "followers_url": "https://api.github.com/users/cdmikechen/followers",
            "following_url": "https://api.github.com/users/cdmikechen/following{/other_user}",
            "gists_url": "https://api.github.com/users/cdmikechen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cdmikechen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cdmikechen/subscriptions",
            "organizations_url": "https://api.github.com/users/cdmikechen/orgs",
            "repos_url": "https://api.github.com/users/cdmikechen/repos",
            "events_url": "https://api.github.com/users/cdmikechen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cdmikechen/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-02-19T10:04:51Z",
        "updated_at": "2023-03-06T09:47:52Z",
        "closed_at": "2023-03-06T09:47:36Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "All current cicd checks in `submarine-workbench` are exceptions. We may need to clarify the exact cause\r\n\r\nlinks: https://github.com/apache/submarine/actions/runs/4215322557/jobs/7316376427\r\n\r\n<img width=\"1337\" alt=\"image\" src=\"https://user-images.githubusercontent.com/12069428/219941328-b55b5698-de13-49f0-bdd6-78e3a2b4297e.png\">\r\n",
        "closed_by": {
            "login": "cdmikechen",
            "id": 12069428,
            "node_id": "MDQ6VXNlcjEyMDY5NDI4",
            "avatar_url": "https://avatars.githubusercontent.com/u/12069428?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cdmikechen",
            "html_url": "https://github.com/cdmikechen",
            "followers_url": "https://api.github.com/users/cdmikechen/followers",
            "following_url": "https://api.github.com/users/cdmikechen/following{/other_user}",
            "gists_url": "https://api.github.com/users/cdmikechen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cdmikechen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cdmikechen/subscriptions",
            "organizations_url": "https://api.github.com/users/cdmikechen/orgs",
            "repos_url": "https://api.github.com/users/cdmikechen/repos",
            "events_url": "https://api.github.com/users/cdmikechen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cdmikechen/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/apache/submarine/issues/1046/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/submarine/issues/1046/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/apache/submarine/issues/1034",
        "repository_url": "https://api.github.com/repos/apache/submarine",
        "labels_url": "https://api.github.com/repos/apache/submarine/issues/1034/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/submarine/issues/1034/comments",
        "events_url": "https://api.github.com/repos/apache/submarine/issues/1034/events",
        "html_url": "https://github.com/apache/submarine/issues/1034",
        "id": 1519396223,
        "node_id": "I_kwDODHwXyM5akCV_",
        "number": 1034,
        "title": "How to use OIDC classes ",
        "user": {
            "login": "mousumi16",
            "id": 25654181,
            "node_id": "MDQ6VXNlcjI1NjU0MTgx",
            "avatar_url": "https://avatars.githubusercontent.com/u/25654181?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mousumi16",
            "html_url": "https://github.com/mousumi16",
            "followers_url": "https://api.github.com/users/mousumi16/followers",
            "following_url": "https://api.github.com/users/mousumi16/following{/other_user}",
            "gists_url": "https://api.github.com/users/mousumi16/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mousumi16/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mousumi16/subscriptions",
            "organizations_url": "https://api.github.com/users/mousumi16/orgs",
            "repos_url": "https://api.github.com/users/mousumi16/repos",
            "events_url": "https://api.github.com/users/mousumi16/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mousumi16/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-01-04T18:22:16Z",
        "updated_at": "2023-01-09T05:35:31Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "@cdmikechen \r\nPlease give a sample code on how to use the newly added OIDC feature in apache submarine.\r\n    claimsMap.put(\"jti\", sysUser.getId());\r\n        // TODO(cdmikechen) By default the simple token is used,\r\n        //  in other cases such as ldap it may need to be returned as an interface\r\n        String token = SimpleLoginConfig.getJwtGenerator().generate(claimsMap);\r\n        \r\n        sysUser.setToken(token);\r\n\r\nthe above code comment is added with OIDC feature. What does this mean and how the OIDC login is going to work?\r\nwhere to provide the client id n secret details to connect to Keycloak ?\r\n\r\nPlease guide on this.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/apache/submarine/issues/1034/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/submarine/issues/1034/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/apache/submarine/issues/1008",
        "repository_url": "https://api.github.com/repos/apache/submarine",
        "labels_url": "https://api.github.com/repos/apache/submarine/issues/1008/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/submarine/issues/1008/comments",
        "events_url": "https://api.github.com/repos/apache/submarine/issues/1008/events",
        "html_url": "https://github.com/apache/submarine/issues/1008",
        "id": 1402303345,
        "node_id": "I_kwDODHwXyM5TlXNx",
        "number": 1008,
        "title": "The problem with `tf.compat.v1.disable_v2_behavior`",
        "user": {
            "login": "huang06",
            "id": 20633863,
            "node_id": "MDQ6VXNlcjIwNjMzODYz",
            "avatar_url": "https://avatars.githubusercontent.com/u/20633863?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/huang06",
            "html_url": "https://github.com/huang06",
            "followers_url": "https://api.github.com/users/huang06/followers",
            "following_url": "https://api.github.com/users/huang06/following{/other_user}",
            "gists_url": "https://api.github.com/users/huang06/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/huang06/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/huang06/subscriptions",
            "organizations_url": "https://api.github.com/users/huang06/orgs",
            "repos_url": "https://api.github.com/users/huang06/repos",
            "events_url": "https://api.github.com/users/huang06/events{/privacy}",
            "received_events_url": "https://api.github.com/users/huang06/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4043458049,
                "node_id": "LA_kwDODHwXyM7xAkYB",
                "url": "https://api.github.com/repos/apache/submarine/labels/python",
                "name": "python",
                "color": "2b67c6",
                "default": false,
                "description": "Pull requests that update Python code"
            }
        ],
        "state": "open",
        "locked": true,
        "assignee": {
            "login": "KUAN-HSUN-LI",
            "id": 38066413,
            "node_id": "MDQ6VXNlcjM4MDY2NDEz",
            "avatar_url": "https://avatars.githubusercontent.com/u/38066413?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/KUAN-HSUN-LI",
            "html_url": "https://github.com/KUAN-HSUN-LI",
            "followers_url": "https://api.github.com/users/KUAN-HSUN-LI/followers",
            "following_url": "https://api.github.com/users/KUAN-HSUN-LI/following{/other_user}",
            "gists_url": "https://api.github.com/users/KUAN-HSUN-LI/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/KUAN-HSUN-LI/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/KUAN-HSUN-LI/subscriptions",
            "organizations_url": "https://api.github.com/users/KUAN-HSUN-LI/orgs",
            "repos_url": "https://api.github.com/users/KUAN-HSUN-LI/repos",
            "events_url": "https://api.github.com/users/KUAN-HSUN-LI/events{/privacy}",
            "received_events_url": "https://api.github.com/users/KUAN-HSUN-LI/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "KUAN-HSUN-LI",
                "id": 38066413,
                "node_id": "MDQ6VXNlcjM4MDY2NDEz",
                "avatar_url": "https://avatars.githubusercontent.com/u/38066413?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/KUAN-HSUN-LI",
                "html_url": "https://github.com/KUAN-HSUN-LI",
                "followers_url": "https://api.github.com/users/KUAN-HSUN-LI/followers",
                "following_url": "https://api.github.com/users/KUAN-HSUN-LI/following{/other_user}",
                "gists_url": "https://api.github.com/users/KUAN-HSUN-LI/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/KUAN-HSUN-LI/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/KUAN-HSUN-LI/subscriptions",
                "organizations_url": "https://api.github.com/users/KUAN-HSUN-LI/orgs",
                "repos_url": "https://api.github.com/users/KUAN-HSUN-LI/repos",
                "events_url": "https://api.github.com/users/KUAN-HSUN-LI/events{/privacy}",
                "received_events_url": "https://api.github.com/users/KUAN-HSUN-LI/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2022-10-09T15:07:59Z",
        "updated_at": "2022-10-11T12:47:39Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## Description\r\n\r\nWhen importing some `tensorflow_v2` modules, the subsequent TF2 functions cannot work properly.\r\n\r\nI found out that some modules call the `tensorflow.disable_v2_behavior` function when they are imported. It will disable the subsequent TF2 behaviors.\r\n\r\n```text\r\ncd submarine-sdk/pysubmarine/submarine\r\n\r\n$ grep -rnH 'disable_v2_behavior'\r\nml/tensorflow_v2/layers/core.py:20:tf.compat.v1.disable_v2_behavior()\r\nutils/tf_utils_v2.py:26:    tf.compat.v1.disable_v2_behavior()\r\nutils/tf_utils_v2.py:57:        tf.compat.v1.disable_v2_behavior()\r\n```\r\n\r\nFurthermore, without the `tensorflow.disable_v2_behavior`, the tests still work as usual. Maybe the `disable_v2_behavior` is not necessary to the tf2 modules.\r\n\r\nIn summary, We should remove the `tf.compat.v1.disable_v2_behavior` statements to avoid the similar problem.\r\n\r\n## How to reproduce the TF2 error\r\n\r\nCreate Python venv.\r\n\r\n```bash\r\ncd submarine-sdk/pysubmarine\r\npython3 -m venv .venv\r\nsource .venv/bin/activate\r\npython3 -m pip install -e .[tf2]\r\n```\r\n\r\nCreate `demo.py` and copy the following Python code into it.\r\n\r\n```python\r\n# demo.py\r\nimport tensorflow as tf\r\n\r\nfrom submarine.ml.tensorflow_v2.model import DeepFM   # call `tf.compat.v1.disable_v2_behavior` function\r\n\r\n\r\nclass LinearNNModel(tf.keras.Model):\r\n    def __init__(self):\r\n        super().__init__()\r\n        self.dense1 = tf.keras.layers.Dense(1, activation=tf.nn.relu)  # One in and one out\r\n\r\n    def call(self, x):\r\n        y_pred = self.dense1(x)\r\n        return y_pred\r\n\r\n\r\nmodel = LinearNNModel()\r\ninput_arr = tf.random.uniform((1, 5))\r\nmodel(input_arr)\r\n\r\nmodel.save('sample-model')\r\n```\r\n\r\nRunning the Python code. the error message shows that the TF2 function cannot work properly.\r\n\r\n```bash\r\n$ python3 demo.py\r\n\r\n...\r\nTraceback (most recent call last):\r\n  File \"/home/tom/huang06/submarine/submarine-sdk/pysubmarine/demo.py\", line 21, in <module>\r\n    model.save('sample-model')\r\n  File \"/home/tom/huang06/submarine/submarine-sdk/pysubmarine/.venv/lib/python3.10/site-packages/keras/utils/traceback_utils.py\", line 67, in error_handler\r\n    raise e.with_traceback(filtered_tb) from None\r\n  File \"/home/tom/huang06/submarine/submarine-sdk/pysubmarine/.venv/lib/python3.10/site-packages/keras/saving/save.py\", line 142, in save_model\r\n    raise NotImplementedError(\r\nNotImplementedError: Saving the model to HDF5 format requires the model to be a Functional model or a Sequential model. It does not work for subclassed models, because such models are defined via the body of a Python method, which isn't safely serializable. Consider saving to the Tensorflow SavedModel format (by setting save_format=\"tf\") or using `save_weights`.\r\n```\r\n\r\n",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/apache/submarine/issues/1008/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/submarine/issues/1008/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/apache/submarine/issues/1004",
        "repository_url": "https://api.github.com/repos/apache/submarine",
        "labels_url": "https://api.github.com/repos/apache/submarine/issues/1004/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/submarine/issues/1004/comments",
        "events_url": "https://api.github.com/repos/apache/submarine/issues/1004/events",
        "html_url": "https://github.com/apache/submarine/issues/1004",
        "id": 1398738457,
        "node_id": "I_kwDODHwXyM5TXw4Z",
        "number": 1004,
        "title": "Migration plan for submarine-operator-v3",
        "user": {
            "login": "cdmikechen",
            "id": 12069428,
            "node_id": "MDQ6VXNlcjEyMDY5NDI4",
            "avatar_url": "https://avatars.githubusercontent.com/u/12069428?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cdmikechen",
            "html_url": "https://github.com/cdmikechen",
            "followers_url": "https://api.github.com/users/cdmikechen/followers",
            "following_url": "https://api.github.com/users/cdmikechen/following{/other_user}",
            "gists_url": "https://api.github.com/users/cdmikechen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cdmikechen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cdmikechen/subscriptions",
            "organizations_url": "https://api.github.com/users/cdmikechen/orgs",
            "repos_url": "https://api.github.com/users/cdmikechen/repos",
            "events_url": "https://api.github.com/users/cdmikechen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cdmikechen/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4074245419,
                "node_id": "LA_kwDODHwXyM7y2A0r",
                "url": "https://api.github.com/repos/apache/submarine/labels/go",
                "name": "go",
                "color": "16e2e2",
                "default": false,
                "description": "Pull requests that update Go code"
            }
        ],
        "state": "open",
        "locked": true,
        "assignee": {
            "login": "MortalHappiness",
            "id": 47914085,
            "node_id": "MDQ6VXNlcjQ3OTE0MDg1",
            "avatar_url": "https://avatars.githubusercontent.com/u/47914085?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MortalHappiness",
            "html_url": "https://github.com/MortalHappiness",
            "followers_url": "https://api.github.com/users/MortalHappiness/followers",
            "following_url": "https://api.github.com/users/MortalHappiness/following{/other_user}",
            "gists_url": "https://api.github.com/users/MortalHappiness/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MortalHappiness/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MortalHappiness/subscriptions",
            "organizations_url": "https://api.github.com/users/MortalHappiness/orgs",
            "repos_url": "https://api.github.com/users/MortalHappiness/repos",
            "events_url": "https://api.github.com/users/MortalHappiness/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MortalHappiness/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "MortalHappiness",
                "id": 47914085,
                "node_id": "MDQ6VXNlcjQ3OTE0MDg1",
                "avatar_url": "https://avatars.githubusercontent.com/u/47914085?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/MortalHappiness",
                "html_url": "https://github.com/MortalHappiness",
                "followers_url": "https://api.github.com/users/MortalHappiness/followers",
                "following_url": "https://api.github.com/users/MortalHappiness/following{/other_user}",
                "gists_url": "https://api.github.com/users/MortalHappiness/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/MortalHappiness/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MortalHappiness/subscriptions",
                "organizations_url": "https://api.github.com/users/MortalHappiness/orgs",
                "repos_url": "https://api.github.com/users/MortalHappiness/repos",
                "events_url": "https://api.github.com/users/MortalHappiness/events{/privacy}",
                "received_events_url": "https://api.github.com/users/MortalHappiness/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2022-10-06T03:54:59Z",
        "updated_at": "2022-10-06T04:02:15Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "We have done a lot of refactoring work on `submarine-cloud-v3` so far, but there doesn't seem to be a switchover of deployments at the moment.\r\nI would like to know if `submarine-cloud-v3` is ready for actual deployment? I have some jira issues that will require changes to the operator codes, and [k8s support upgrades](https://issues.apache.org/jira/browse/SUBMARINE-1327) will also involve adaptations to the operator section.\r\n\r\n\r\n\r\n\r\n\r\n",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/apache/submarine/issues/1004/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/submarine/issues/1004/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/apache/submarine/issues/1003",
        "repository_url": "https://api.github.com/repos/apache/submarine",
        "labels_url": "https://api.github.com/repos/apache/submarine/issues/1003/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/submarine/issues/1003/comments",
        "events_url": "https://api.github.com/repos/apache/submarine/issues/1003/events",
        "html_url": "https://github.com/apache/submarine/issues/1003",
        "id": 1397844083,
        "node_id": "I_kwDODHwXyM5TUWhz",
        "number": 1003,
        "title": "Optimising the cicd process",
        "user": {
            "login": "cdmikechen",
            "id": 12069428,
            "node_id": "MDQ6VXNlcjEyMDY5NDI4",
            "avatar_url": "https://avatars.githubusercontent.com/u/12069428?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cdmikechen",
            "html_url": "https://github.com/cdmikechen",
            "followers_url": "https://api.github.com/users/cdmikechen/followers",
            "following_url": "https://api.github.com/users/cdmikechen/following{/other_user}",
            "gists_url": "https://api.github.com/users/cdmikechen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cdmikechen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cdmikechen/subscriptions",
            "organizations_url": "https://api.github.com/users/cdmikechen/orgs",
            "repos_url": "https://api.github.com/users/cdmikechen/repos",
            "events_url": "https://api.github.com/users/cdmikechen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cdmikechen/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1564932565,
                "node_id": "MDU6TGFiZWwxNTY0OTMyNTY1",
                "url": "https://api.github.com/repos/apache/submarine/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "open",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2022-10-05T13:59:41Z",
        "updated_at": "2022-10-06T04:02:33Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "The current submarine cicd process involves support for multiple languages and multiple language versions, which makes the entire github workflow take a very long time to process a PR check task. \r\nThe languages and versions involved are as follows:\r\n* python: `3.7` `3.8` `3.9` `3.10`\r\n* k8s: `1.18.20` `1.19.16` `1.20.15` `1.21.10`\r\n* java: `1.8`\r\n* go: `1.17.2` \r\n* angular: `~8.2.9`\r\n\r\nMeanwhile, the code coverage checks are only handled for some java codes. For the go, python and angular sections I think we should add/refine to codecov later.\r\n\r\nTo do this, I created an issue on jira to manage and track related content https://issues.apache.org/jira/browse/SUBMARINE-1336 .\r\n",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/apache/submarine/issues/1003/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/submarine/issues/1003/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/apache/submarine/issues/983",
        "repository_url": "https://api.github.com/repos/apache/submarine",
        "labels_url": "https://api.github.com/repos/apache/submarine/issues/983/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/submarine/issues/983/comments",
        "events_url": "https://api.github.com/repos/apache/submarine/issues/983/events",
        "html_url": "https://github.com/apache/submarine/issues/983",
        "id": 1315658861,
        "node_id": "I_kwDODHwXyM5Oa1xt",
        "number": 983,
        "title": "Combine k8s and database transactions",
        "user": {
            "login": "cdmikechen",
            "id": 12069428,
            "node_id": "MDQ6VXNlcjEyMDY5NDI4",
            "avatar_url": "https://avatars.githubusercontent.com/u/12069428?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cdmikechen",
            "html_url": "https://github.com/cdmikechen",
            "followers_url": "https://api.github.com/users/cdmikechen/followers",
            "following_url": "https://api.github.com/users/cdmikechen/following{/other_user}",
            "gists_url": "https://api.github.com/users/cdmikechen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cdmikechen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cdmikechen/subscriptions",
            "organizations_url": "https://api.github.com/users/cdmikechen/orgs",
            "repos_url": "https://api.github.com/users/cdmikechen/repos",
            "events_url": "https://api.github.com/users/cdmikechen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cdmikechen/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1564932565,
                "node_id": "MDU6TGFiZWwxNTY0OTMyNTY1",
                "url": "https://api.github.com/repos/apache/submarine/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 1644464627,
                "node_id": "MDU6TGFiZWwxNjQ0NDY0NjI3",
                "url": "https://api.github.com/repos/apache/submarine/labels/java",
                "name": "java",
                "color": "ffa221",
                "default": false,
                "description": "Pull requests that update Java code"
            }
        ],
        "state": "open",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2022-07-23T13:26:43Z",
        "updated_at": "2022-10-06T12:51:07Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "The current k8s and database transactions are separate, which will result in situations where a commit/processing failure of k8s will not trigger a rollback of a database transaction. \r\nWe need to design a unified transaction management or processing logic to ensure submarine-server to be able to handle exceptions and transaction rollbacks correctly.\r\n\r\nFor example, by using the `@Transactional`, or by putting the relevant operations codes/methods into one of our transaction services.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/apache/submarine/issues/983/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/submarine/issues/983/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/apache/submarine/issues/980",
        "repository_url": "https://api.github.com/repos/apache/submarine",
        "labels_url": "https://api.github.com/repos/apache/submarine/issues/980/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/submarine/issues/980/comments",
        "events_url": "https://api.github.com/repos/apache/submarine/issues/980/events",
        "html_url": "https://github.com/apache/submarine/issues/980",
        "id": 1310300694,
        "node_id": "I_kwDODHwXyM5OGZoW",
        "number": 980,
        "title": "how to run it on yarn ",
        "user": {
            "login": "tonywang-sh",
            "id": 731029,
            "node_id": "MDQ6VXNlcjczMTAyOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/731029?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tonywang-sh",
            "html_url": "https://github.com/tonywang-sh",
            "followers_url": "https://api.github.com/users/tonywang-sh/followers",
            "following_url": "https://api.github.com/users/tonywang-sh/following{/other_user}",
            "gists_url": "https://api.github.com/users/tonywang-sh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tonywang-sh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tonywang-sh/subscriptions",
            "organizations_url": "https://api.github.com/users/tonywang-sh/orgs",
            "repos_url": "https://api.github.com/users/tonywang-sh/repos",
            "events_url": "https://api.github.com/users/tonywang-sh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tonywang-sh/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 12,
        "created_at": "2022-07-20T02:10:27Z",
        "updated_at": "2022-07-25T12:40:12Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I didn't find submarine usage guide for running on yarn. Whether its ver 0.7 does support to run task on yarn? Any guide documents? Thanks.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/apache/submarine/issues/980/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/submarine/issues/980/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/apache/submarine/issues/977",
        "repository_url": "https://api.github.com/repos/apache/submarine",
        "labels_url": "https://api.github.com/repos/apache/submarine/issues/977/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/submarine/issues/977/comments",
        "events_url": "https://api.github.com/repos/apache/submarine/issues/977/events",
        "html_url": "https://github.com/apache/submarine/issues/977",
        "id": 1299720098,
        "node_id": "I_kwDODHwXyM5NeCei",
        "number": 977,
        "title": "Can't build helm chart submarine from quick start guide ",
        "user": {
            "login": "Mentalsupernova",
            "id": 20616460,
            "node_id": "MDQ6VXNlcjIwNjE2NDYw",
            "avatar_url": "https://avatars.githubusercontent.com/u/20616460?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Mentalsupernova",
            "html_url": "https://github.com/Mentalsupernova",
            "followers_url": "https://api.github.com/users/Mentalsupernova/followers",
            "following_url": "https://api.github.com/users/Mentalsupernova/following{/other_user}",
            "gists_url": "https://api.github.com/users/Mentalsupernova/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Mentalsupernova/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Mentalsupernova/subscriptions",
            "organizations_url": "https://api.github.com/users/Mentalsupernova/orgs",
            "repos_url": "https://api.github.com/users/Mentalsupernova/repos",
            "events_url": "https://api.github.com/users/Mentalsupernova/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Mentalsupernova/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2022-07-09T16:39:31Z",
        "updated_at": "2022-10-23T15:44:57Z",
        "closed_at": "2022-07-09T16:43:33Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "W0709 19:38:47.901294   57381 warnings.go:70] apiextensions.k8s.io/v1beta1 CustomResourceDefinition is deprecated in v1.16+, unavailable in v1.22+; use apiextensions.k8s.io/v1 CustomResourceDefinition\r\nError: INSTALLATION FAILED: unable to build kubernetes objects from release manifest: resource mapping not found for name: \"submarine-gateway\" namespace: \"\" from \"\": no matches for kind \"Gateway\" in version \"networking.istio.io/v1alpha3\"\r\nensure CRDs are installed first\r\n",
        "closed_by": {
            "login": "Mentalsupernova",
            "id": 20616460,
            "node_id": "MDQ6VXNlcjIwNjE2NDYw",
            "avatar_url": "https://avatars.githubusercontent.com/u/20616460?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Mentalsupernova",
            "html_url": "https://github.com/Mentalsupernova",
            "followers_url": "https://api.github.com/users/Mentalsupernova/followers",
            "following_url": "https://api.github.com/users/Mentalsupernova/following{/other_user}",
            "gists_url": "https://api.github.com/users/Mentalsupernova/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Mentalsupernova/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Mentalsupernova/subscriptions",
            "organizations_url": "https://api.github.com/users/Mentalsupernova/orgs",
            "repos_url": "https://api.github.com/users/Mentalsupernova/repos",
            "events_url": "https://api.github.com/users/Mentalsupernova/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Mentalsupernova/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/apache/submarine/issues/977/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/submarine/issues/977/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/apache/submarine/issues/956",
        "repository_url": "https://api.github.com/repos/apache/submarine",
        "labels_url": "https://api.github.com/repos/apache/submarine/issues/956/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/submarine/issues/956/comments",
        "events_url": "https://api.github.com/repos/apache/submarine/issues/956/events",
        "html_url": "https://github.com/apache/submarine/issues/956",
        "id": 1236272052,
        "node_id": "I_kwDODHwXyM5JsAO0",
        "number": 956,
        "title": "[DESIGN] Add k8s mock client and server test case",
        "user": {
            "login": "cdmikechen",
            "id": 12069428,
            "node_id": "MDQ6VXNlcjEyMDY5NDI4",
            "avatar_url": "https://avatars.githubusercontent.com/u/12069428?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cdmikechen",
            "html_url": "https://github.com/cdmikechen",
            "followers_url": "https://api.github.com/users/cdmikechen/followers",
            "following_url": "https://api.github.com/users/cdmikechen/following{/other_user}",
            "gists_url": "https://api.github.com/users/cdmikechen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cdmikechen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cdmikechen/subscriptions",
            "organizations_url": "https://api.github.com/users/cdmikechen/orgs",
            "repos_url": "https://api.github.com/users/cdmikechen/repos",
            "events_url": "https://api.github.com/users/cdmikechen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cdmikechen/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2022-05-15T12:17:24Z",
        "updated_at": "2022-08-13T09:19:50Z",
        "closed_at": "2022-08-13T09:19:50Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "At present, submarine's tests on k8s services are mainly in `submarine-k8s` packages. Because k8s service is a complex service composition, it is difficult to write unit tests of many k8s related functions (like `submarine-server-submitter` package)  in a simple way.\r\n\r\nI think that since most of the methods in `submarine-server-submitter` package are processed by k8s API similar to CRUD, it should be necessary to keep/create enough test cases to test and verify these methods. I have just search some k8s client related test cases informations. In fact, I think the main problem is how to support a mock server, so that we can break away from the constraints of k8s and write test cases freely.\r\nI think in this issue https://github.com/kubernetes-client/java/issues/1842 we can get some inspiration. Most of k8s apis can simulate the return messages based on the http request, so we can refer to the methods mentioned in it to change the existing test cases.\r\n\r\n### Mock Client and Server\r\n\r\nI've write a test case about how to test k8s client by a mock client and server ([WireMockRule](https://wiremock.org/)). The core of the whole test case is to use fake message to response the client request.\r\nIt refers to [k8s java official test case](https://github.com/kubernetes-client/java/blob/master/extended/src/test/java/io/kubernetes/client/extended/kubectl/KubectlApplyTest.java)\r\n\r\nThe following codes can be found in <https://github.com/shangyuantech/submarine/blob/SUBMARINE-1174/submarine-server/server-submitter/submitter-k8s/src/test/java/org/apache/submarine/server/submitter/k8s/SubmitterK8sMockApiTest.java>\r\n```java\r\npublic class SubmitterK8sMockApiTest {\r\n\r\n  private K8sClient k8sClient;\r\n\r\n  @Rule\r\n  public WireMockRule wireMockRule = K8sMockClient.getWireMockRule();\r\n\r\n  @Before\r\n  public void setup() throws IOException {\r\n    this.k8sClient = new K8sMockClient(post(urlPathEqualTo(\"/api/v1/namespaces/foo/configmaps\"))\r\n            .withHeader(\"Content-Type\", new EqualToPattern(\"application/json; charset=UTF-8\"))\r\n            .willReturn(\r\n                    aResponse()\r\n                            .withStatus(200)\r\n                            .withBody(\"{\\\"metadata\\\":{\\\"name\\\":\\\"bar\\\",\\\"namespace\\\":\\\"foo\\\"}}\")));\r\n  }\r\n\r\n  @Test\r\n  public void testApplyConfigMap() {\r\n    V1ConfigMap configMap = new V1ConfigMap()\r\n            .apiVersion(\"v1\")\r\n            .metadata(new V1ObjectMeta().namespace(\"foo\").name(\"bar\"))\r\n            .data(Collections.singletonMap(\"key1\", \"value1\"));\r\n\r\n    KubernetesApiResponse<V1ConfigMap> configMapResp = k8sClient.getConfigMapClient().create(configMap);\r\n    V1ConfigMap rtnConfigmap = configMapResp.getObject();\r\n\r\n    assertNotNull(rtnConfigmap);\r\n    assertEquals(rtnConfigmap.getMetadata().getNamespace(), \"foo\");\r\n    assertEquals(rtnConfigmap.getMetadata().getName(), \"bar\");\r\n  }\r\n}\r\n```\r\n\r\nIn this case, I create a `K8sMockClient`. In this class I did some initialization of URL and WireMockRule for the client.\r\nThe following codes can be found in <https://github.com/shangyuantech/submarine/blob/SUBMARINE-1174/submarine-server/server-submitter/submitter-k8s/src/test/java/org/apache/submarine/server/submitter/k8s/client/K8sMockClient.java>\r\n```java\r\nprivate static String getResourceFileContent(String resource) {\r\n    File file = new File(Objects.requireNonNull(\r\n            K8sMockClient.class.getClassLoader().getResource(resource)).getPath()\r\n    );\r\n    try {\r\n      return new String(Files.readAllBytes(Paths.get(file.toString())));\r\n    } catch (IOException e) {\r\n      e.printStackTrace();\r\n      return null;\r\n    }\r\n  }\r\n\r\n  private static final String DISCOVERY_API = getResourceFileContent(\"client/discovery-api.json\");\r\n  private static final String DISCOVERY_APIV1 = getResourceFileContent(\"client/discovery-api-v1.json\");\r\n  private static final String DISCOVERY_APIS = getResourceFileContent(\"client/discovery-apis.json\");\r\n\r\n  private static final WireMockRule wireMockRule = new WireMockRule(8384);\r\n\r\n  public static WireMockRule getWireMockRule() {\r\n    return wireMockRule;\r\n  }\r\n\r\n  public K8sMockClient() throws IOException {\r\n    apiClient = new ClientBuilder().setBasePath(\"http://localhost:\" + 8384).build();\r\n    wireMockRule.stubFor(\r\n            get(urlPathEqualTo(\"/api\"))\r\n                    .willReturn(\r\n                            aResponse()\r\n                                    .withStatus(200)\r\n                                    .withBody(DISCOVERY_API)));\r\n    wireMockRule.stubFor(\r\n            get(urlPathEqualTo(\"/apis\"))\r\n                    .willReturn(\r\n                            aResponse()\r\n                                    .withStatus(200)\r\n                                    .withBody(DISCOVERY_APIS)));\r\n    wireMockRule.stubFor(\r\n            get(urlPathEqualTo(\"/api/v1\"))\r\n                    .willReturn(\r\n                            aResponse()\r\n                                    .withStatus(200)\r\n                                    .withBody(DISCOVERY_APIV1)));\r\n    coreApi = new CoreV1Api();\r\n    appsV1Api = new AppsV1Api();\r\n    customObjectsApi = new CustomObjectsApi();\r\n    configMapClient =\r\n            new GenericKubernetesApi<>(\r\n                    V1ConfigMap.class, V1ConfigMapList.class,\r\n                    \"\", \"v1\", \"configmaps\", apiClient);\r\n  }\r\n\r\n  public K8sMockClient(MappingBuilder... mappingBuilders) throws IOException {\r\n    this();\r\n    addMappingBuilders(mappingBuilders);\r\n  }\r\n\r\n  public void addMappingBuilders(MappingBuilder... mappingBuilders) {\r\n    // add MappingBuilder to WireMockRule\r\n    for (MappingBuilder mappingBuilder : mappingBuilders) {\r\n      wireMockRule.stubFor(mappingBuilder);\r\n    }\r\n  }\r\n```\r\n\r\nWhen we add a new test case, we can first confirm the response information (usually the JSON information of the resource) according to the resources we need, and then define and register the URL, RequestMethod, ResponseCode and ResponseBody into WireMockRule.",
        "closed_by": {
            "login": "cdmikechen",
            "id": 12069428,
            "node_id": "MDQ6VXNlcjEyMDY5NDI4",
            "avatar_url": "https://avatars.githubusercontent.com/u/12069428?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cdmikechen",
            "html_url": "https://github.com/cdmikechen",
            "followers_url": "https://api.github.com/users/cdmikechen/followers",
            "following_url": "https://api.github.com/users/cdmikechen/following{/other_user}",
            "gists_url": "https://api.github.com/users/cdmikechen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cdmikechen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cdmikechen/subscriptions",
            "organizations_url": "https://api.github.com/users/cdmikechen/orgs",
            "repos_url": "https://api.github.com/users/cdmikechen/repos",
            "events_url": "https://api.github.com/users/cdmikechen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cdmikechen/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/apache/submarine/issues/956/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/submarine/issues/956/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/apache/submarine/issues/955",
        "repository_url": "https://api.github.com/repos/apache/submarine",
        "labels_url": "https://api.github.com/repos/apache/submarine/issues/955/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/submarine/issues/955/comments",
        "events_url": "https://api.github.com/repos/apache/submarine/issues/955/events",
        "html_url": "https://github.com/apache/submarine/issues/955",
        "id": 1230874276,
        "node_id": "I_kwDODHwXyM5JXaak",
        "number": 955,
        "title": "[DESIGN] Submarine CLI need to support k8s native connection",
        "user": {
            "login": "cdmikechen",
            "id": 12069428,
            "node_id": "MDQ6VXNlcjEyMDY5NDI4",
            "avatar_url": "https://avatars.githubusercontent.com/u/12069428?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cdmikechen",
            "html_url": "https://github.com/cdmikechen",
            "followers_url": "https://api.github.com/users/cdmikechen/followers",
            "following_url": "https://api.github.com/users/cdmikechen/following{/other_user}",
            "gists_url": "https://api.github.com/users/cdmikechen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cdmikechen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cdmikechen/subscriptions",
            "organizations_url": "https://api.github.com/users/cdmikechen/orgs",
            "repos_url": "https://api.github.com/users/cdmikechen/repos",
            "events_url": "https://api.github.com/users/cdmikechen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cdmikechen/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2022-05-10T09:27:07Z",
        "updated_at": "2022-05-15T11:58:13Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "`Submarine CL`I currently only supports connection based on REST. \r\nIf we have connected remote k8s cluster or deployed a local minikube, we should be able to directly access the submarine server through k8s client for data interaction.\r\n\r\nFor example. We deploy submarine by a CR with submarine operator, so `Submarine CLI` can get the deployment / pod information of submarine server through submarine customized resources. In this way, we can get relevant information about submarine/notebook in a more cloud native way.\r\n\r\n## Config\r\nThis is submarine client config by using `submarine config list `\r\n```json\r\n{                                                          \r\n   \"connection\": {                                          \r\n     \"hostname\": \"localhost\",                               \r\n     \"port\": 32080                                          \r\n   }                                                         \r\n} \r\n```\r\nWe can change this config `Native Mode` like this:\r\n```json\r\n{\r\n  \"type\": \"native\",\r\n  \"connection\": {\r\n    \"operator\": \"submarine-example\"\r\n  }\r\n}\r\n```\r\nor\r\n```\r\nTYPE:     native\r\nCURRENT   CONNECTION            NAMESPACE\r\n*         submarine-example-1   default\r\n          submarine-example-2   test\r\n```\r\n\r\nIf we have just one submarine server by oprator, we can set this CR default.\r\n\r\n## Design\r\nThe design idea is very simple ~\r\nData interaction based on native mode can directly call k8s client API to execute commands in pod. We can use java command (like submarine-k8s-submmiter jars)/ REST to get any information we want in pod.\r\n",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/apache/submarine/issues/955/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/submarine/issues/955/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/apache/submarine/issues/927",
        "repository_url": "https://api.github.com/repos/apache/submarine",
        "labels_url": "https://api.github.com/repos/apache/submarine/issues/927/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/submarine/issues/927/comments",
        "events_url": "https://api.github.com/repos/apache/submarine/issues/927/events",
        "html_url": "https://github.com/apache/submarine/issues/927",
        "id": 1204409179,
        "node_id": "I_kwDODHwXyM5HydNb",
        "number": 927,
        "title": "how run it by source code",
        "user": {
            "login": "wyyg66666666",
            "id": 7277012,
            "node_id": "MDQ6VXNlcjcyNzcwMTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7277012?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wyyg66666666",
            "html_url": "https://github.com/wyyg66666666",
            "followers_url": "https://api.github.com/users/wyyg66666666/followers",
            "following_url": "https://api.github.com/users/wyyg66666666/following{/other_user}",
            "gists_url": "https://api.github.com/users/wyyg66666666/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wyyg66666666/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wyyg66666666/subscriptions",
            "organizations_url": "https://api.github.com/users/wyyg66666666/orgs",
            "repos_url": "https://api.github.com/users/wyyg66666666/repos",
            "events_url": "https://api.github.com/users/wyyg66666666/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wyyg66666666/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2022-04-14T11:26:15Z",
        "updated_at": "2022-05-10T05:26:20Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "how run it by source code  ,not docker  ,not minikube.\r\ni develop by IDE idea   ,i want run it by IDE ,which service should run \r\n![image](https://user-images.githubusercontent.com/7277012/163381745-6da36778-8484-4d13-8246-f0cc91b7e435.png)\r\n",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/apache/submarine/issues/927/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/submarine/issues/927/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/apache/submarine/issues/923",
        "repository_url": "https://api.github.com/repos/apache/submarine",
        "labels_url": "https://api.github.com/repos/apache/submarine/issues/923/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/submarine/issues/923/comments",
        "events_url": "https://api.github.com/repos/apache/submarine/issues/923/events",
        "html_url": "https://github.com/apache/submarine/issues/923",
        "id": 1195675581,
        "node_id": "I_kwDODHwXyM5HRI-9",
        "number": 923,
        "title": "https://submarine.apache.org/ should not show the master branch documentation?",
        "user": {
            "login": "xunliu",
            "id": 3677382,
            "node_id": "MDQ6VXNlcjM2NzczODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3677382?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xunliu",
            "html_url": "https://github.com/xunliu",
            "followers_url": "https://api.github.com/users/xunliu/followers",
            "following_url": "https://api.github.com/users/xunliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/xunliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xunliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xunliu/subscriptions",
            "organizations_url": "https://api.github.com/users/xunliu/orgs",
            "repos_url": "https://api.github.com/users/xunliu/repos",
            "events_url": "https://api.github.com/users/xunliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xunliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": true,
        "assignee": {
            "login": "pingsutw",
            "id": 37936015,
            "node_id": "MDQ6VXNlcjM3OTM2MDE1",
            "avatar_url": "https://avatars.githubusercontent.com/u/37936015?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pingsutw",
            "html_url": "https://github.com/pingsutw",
            "followers_url": "https://api.github.com/users/pingsutw/followers",
            "following_url": "https://api.github.com/users/pingsutw/following{/other_user}",
            "gists_url": "https://api.github.com/users/pingsutw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pingsutw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pingsutw/subscriptions",
            "organizations_url": "https://api.github.com/users/pingsutw/orgs",
            "repos_url": "https://api.github.com/users/pingsutw/repos",
            "events_url": "https://api.github.com/users/pingsutw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pingsutw/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "pingsutw",
                "id": 37936015,
                "node_id": "MDQ6VXNlcjM3OTM2MDE1",
                "avatar_url": "https://avatars.githubusercontent.com/u/37936015?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/pingsutw",
                "html_url": "https://github.com/pingsutw",
                "followers_url": "https://api.github.com/users/pingsutw/followers",
                "following_url": "https://api.github.com/users/pingsutw/following{/other_user}",
                "gists_url": "https://api.github.com/users/pingsutw/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/pingsutw/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pingsutw/subscriptions",
                "organizations_url": "https://api.github.com/users/pingsutw/orgs",
                "repos_url": "https://api.github.com/users/pingsutw/repos",
                "events_url": "https://api.github.com/users/pingsutw/events{/privacy}",
                "received_events_url": "https://api.github.com/users/pingsutw/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2022-04-07T08:11:31Z",
        "updated_at": "2022-04-07T18:33:15Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "I see that https://submarine.apache.org/ is showing the documentation of the previous version (0.6), \r\nthe slack information in the 0.6 documentation is wrong\uff08https://submarine.apache.org/docs/community/README/\uff09, \r\nand the master branch doc is correct\uff08https://submarine.apache.org/docs/next/community/README/#communicating\uff09.\r\n\r\nSo, should I show the master branch documentation?",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/apache/submarine/issues/923/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/submarine/issues/923/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/apache/submarine/issues/920",
        "repository_url": "https://api.github.com/repos/apache/submarine",
        "labels_url": "https://api.github.com/repos/apache/submarine/issues/920/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/submarine/issues/920/comments",
        "events_url": "https://api.github.com/repos/apache/submarine/issues/920/events",
        "html_url": "https://github.com/apache/submarine/issues/920",
        "id": 1191721953,
        "node_id": "I_kwDODHwXyM5HCDvh",
        "number": 920,
        "title": "submarine-security[release-0.6.0] can not manager different users with different databases or tables priviledge",
        "user": {
            "login": "pklcoder",
            "id": 19402018,
            "node_id": "MDQ6VXNlcjE5NDAyMDE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/19402018?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pklcoder",
            "html_url": "https://github.com/pklcoder",
            "followers_url": "https://api.github.com/users/pklcoder/followers",
            "following_url": "https://api.github.com/users/pklcoder/following{/other_user}",
            "gists_url": "https://api.github.com/users/pklcoder/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pklcoder/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pklcoder/subscriptions",
            "organizations_url": "https://api.github.com/users/pklcoder/orgs",
            "repos_url": "https://api.github.com/users/pklcoder/repos",
            "events_url": "https://api.github.com/users/pklcoder/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pklcoder/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2022-04-04T12:36:28Z",
        "updated_at": "2022-04-04T12:36:28Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "In release-0.6.0 ,submarine-security can not realize control  priviledge of  different users(except spark) with different databases or tables  when we use spark-thrift to connect the hive.\r\n\r\nI  once tried to modify the source code of submarine-security/spark-security but it did not work.\r\nThe file i   once tried to modify  is \\submarine\\submarine-security\\spark-security\\src\\main\\scala\\org\\apache\\submarine\\spark\\security\\RangerSparkAuthorizer.scala\r\n\r\nCan anyone give some advices to me,thansk.\r\nrelease-0.6.0  information as below\r\n[submarine-security/spark-security](https://github.com/apache/submarine/tree/rel/release-0.6.0/submarine-security/spark-security)",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/apache/submarine/issues/920/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/submarine/issues/920/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/apache/submarine/issues/895",
        "repository_url": "https://api.github.com/repos/apache/submarine",
        "labels_url": "https://api.github.com/repos/apache/submarine/issues/895/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/submarine/issues/895/comments",
        "events_url": "https://api.github.com/repos/apache/submarine/issues/895/events",
        "html_url": "https://github.com/apache/submarine/issues/895",
        "id": 1160370884,
        "node_id": "I_kwDODHwXyM5FKdrE",
        "number": 895,
        "title": "[DESIGN] Add a CRD to install and control jupyter image in k8s ",
        "user": {
            "login": "cdmikechen",
            "id": 12069428,
            "node_id": "MDQ6VXNlcjEyMDY5NDI4",
            "avatar_url": "https://avatars.githubusercontent.com/u/12069428?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cdmikechen",
            "html_url": "https://github.com/cdmikechen",
            "followers_url": "https://api.github.com/users/cdmikechen/followers",
            "following_url": "https://api.github.com/users/cdmikechen/following{/other_user}",
            "gists_url": "https://api.github.com/users/cdmikechen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cdmikechen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cdmikechen/subscriptions",
            "organizations_url": "https://api.github.com/users/cdmikechen/orgs",
            "repos_url": "https://api.github.com/users/cdmikechen/repos",
            "events_url": "https://api.github.com/users/cdmikechen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cdmikechen/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2022-03-05T14:52:57Z",
        "updated_at": "2022-05-15T11:58:51Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "At present, the juypter image size is very large, so that when users deploy juypter service in a new k8s cluster or node, there will be a long waiting process.\r\nThis issue is mainly to discuss the design idea of building an operator based on CRD that can connect with existing submarine services and has certain controllability / predictability. Based on a new CRD, we can automatically call the image pull action in every suitable node before the juypter service is deployed, so that every node in k8s has the corresponding image.\r\n\r\nIn this case, we need to create a CRD which contains a list of images to be obtained, the refresh time, and the pull secret key of each image (if necessary). Examples of CRD are as follows:\r\n```yaml\r\napiVersion: org.apache.submarine/v1\r\nkind: JupyterImagePuller\r\nmetadata:\r\n  name: example-image-puller\r\n  namespace: submarine\r\nspec:\r\n  images: # the list of images to pre-pull\r\n    - name: jupyter # environment name\r\n      image: apache/submarine:jupyter-notebook-0.7.0 # image name\r\n    - name: jupyter-gpu\r\n      image: xxx.harbor.com/5000/apache/submarine:jupyter-notebook-gpu-0.7.0\r\n      auth: # docker registry authentication\r\n        username: xxxx\r\n        password: xxxx\r\n        email: xxxx@email.com # Optional\r\n    - name: jupyter \r\n      image: apache/submarine:jupyter-notebook-0.7.0-chinese\r\n      auth: \r\n        secret: xxxx # If there is already a specified secret, we can fill in the secret name \r\n  nodeSelector: {} # node selector applied to pods created by the daemonset\r\n  refreshHours: '2' # number of hours between health checks\r\nstatus:\r\n  images:\r\n    - name: apache/submarine:jupyter-notebook-0.7.0\r\n      state: success/failure/pulling\r\n      message: Reasons for pull failure ...\r\n      digest: sha256:f04468d5ec5bdcda7a6ebdd65b20a7b363f348f1caef915df4a6cc8d1eb09029\r\n      nodes:\r\n        - worker1.xxxx.com\r\n```\r\n\r\nEvery time submarine updates the environments, it will update the image list in CRD. After reading the spec of CRD and triggering the addition / modification, the operator can create a `DaemonSet` in the specified namespace (with nodeSelector). The `DaemonSet` will contain N (images list size) containers which can pull every image by CRD. \r\nThis operation will modify the entrypiont script in the docker image and output words like \"Pulling complete\", so it's a lightweight task.\r\n```yaml\r\nspec:\r\n initContainers:\r\n    - name: image-pull-{image-name}\r\n      command:\r\n        - /bin/sh\r\n        - -c\r\n        - echo \"Pulling complete\"\r\n```\r\n\r\n###  Docker image registry authorization\r\nDocker authentication should be provided in `environment`. We should consider some private clouds or private image registry (like harbor). In some cases, we need to provide the docker authentication for downloading.\r\nWe can support users to directly enter the user name and password or use the authentication information already on k8s's `Secret`.\r\n\r\n```json\r\n{\r\n  \"name\": \"notebook-gpu-env\",\r\n  \"dockerImage\": \"apache/submarine:jupyter-notebook-gpu-0.7.0\",\r\n  \"dockerAuthSpec\": {\r\n    \"type\": \"password\",\r\n    \"username\": \"xxxx\",\r\n    \"password\": \"xxxx\",\r\n    \"email\": null\r\n  }\r\n} \r\n```\r\n\r\n### Image nodeSelector\r\nAt present, this chapter mainly considers GPU image. We need to consider that some k8s GPU resources may only exist on some exclusive nodes. Therefore, we need to add a `nodeselector` to the deployment of pod. Meanwhile, the `environment` also needs to add `nodeselector`. In this way, the GPU image pod can be deployed on the correct node.\r\n\r\n\r\n### Docker image version update strategy\r\nBuild a `ConfigMap` to save the image and tag information.\r\nWhen the refresh hour is reached, the updated image will be compared with the latest tag / hash to distinguish whether there is an image update. If there is an update, a new pull operation is automatically triggered.\r\n\r\n```yaml\r\nkind: ConfigMap\r\napiVersion: v1\r\nmetadata:\r\n  name: submarine-image-pull-operator-records\r\n  namespace: submarine\r\ndata:\r\n  images.list: |-\r\n    apache/submarine:jupyter-notebook-0.7.0@sha256:f04468d5ec5bdcda7a6ebdd65b20a7b363f348f1caef915df4a6cc8d1eb09029\r\n    xxx.harbor.com/5000/apache/submarine:jupyter-notebook-gpu-0.7.0@sha256:1ccc0a0ca577e5fb5a0bdf2150a1a9f842f47c8865e861fa0062c5d343eb8cac\r\n\r\n```\r\n\r\nIt should be noted that there may be jupyter and jupyter-gpu images under each tenant. Since the repeated image pull operation will not bring too much additional burden, we allow different tenants to have the same image resources.\r\n\r\n---\r\n\r\nThere are still some contents to be designed, which will be explained later.\r\n- TODO 1: How to init/replace docker image name and authorization when deploy a new submarine service.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/apache/submarine/issues/895/reactions",
            "total_count": 4,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 2,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/submarine/issues/895/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/apache/submarine/issues/892",
        "repository_url": "https://api.github.com/repos/apache/submarine",
        "labels_url": "https://api.github.com/repos/apache/submarine/issues/892/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/submarine/issues/892/comments",
        "events_url": "https://api.github.com/repos/apache/submarine/issues/892/events",
        "html_url": "https://github.com/apache/submarine/issues/892",
        "id": 1155369633,
        "node_id": "I_kwDODHwXyM5E3Yqh",
        "number": 892,
        "title": "[DESIGN] Submarine can support a service to customize new images for jupyter notebook/ experiment",
        "user": {
            "login": "cdmikechen",
            "id": 12069428,
            "node_id": "MDQ6VXNlcjEyMDY5NDI4",
            "avatar_url": "https://avatars.githubusercontent.com/u/12069428?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cdmikechen",
            "html_url": "https://github.com/cdmikechen",
            "followers_url": "https://api.github.com/users/cdmikechen/followers",
            "following_url": "https://api.github.com/users/cdmikechen/following{/other_user}",
            "gists_url": "https://api.github.com/users/cdmikechen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cdmikechen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cdmikechen/subscriptions",
            "organizations_url": "https://api.github.com/users/cdmikechen/orgs",
            "repos_url": "https://api.github.com/users/cdmikechen/repos",
            "events_url": "https://api.github.com/users/cdmikechen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cdmikechen/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2022-03-01T13:56:11Z",
        "updated_at": "2022-07-23T13:20:51Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "At present, the jupyter image is relatively large, if the user wants to add some dependencies about jupyter or Python based on the existing image, it is very troublesome. \r\nI think submarine can provide a service similar to S2i (source to image) or using [buildah](https://github.com/containers/buildah), which directly builds a new image based on the existing jupyter image and registers it in submarine's environment. In this way, users can easily use the package they want to develop on the new notebook service.\r\n\r\nThe specific details will be discussed later ..\r\n\r\n",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/apache/submarine/issues/892/reactions",
            "total_count": 2,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/submarine/issues/892/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/apache/submarine/issues/865",
        "repository_url": "https://api.github.com/repos/apache/submarine",
        "labels_url": "https://api.github.com/repos/apache/submarine/issues/865/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/submarine/issues/865/comments",
        "events_url": "https://api.github.com/repos/apache/submarine/issues/865/events",
        "html_url": "https://github.com/apache/submarine/issues/865",
        "id": 1099831729,
        "node_id": "I_kwDODHwXyM5Bjhmx",
        "number": 865,
        "title": "how to authorize SparkSQL with submarine/spark-security?",
        "user": {
            "login": "turtoise",
            "id": 19393229,
            "node_id": "MDQ6VXNlcjE5MzkzMjI5",
            "avatar_url": "https://avatars.githubusercontent.com/u/19393229?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/turtoise",
            "html_url": "https://github.com/turtoise",
            "followers_url": "https://api.github.com/users/turtoise/followers",
            "following_url": "https://api.github.com/users/turtoise/following{/other_user}",
            "gists_url": "https://api.github.com/users/turtoise/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/turtoise/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/turtoise/subscriptions",
            "organizations_url": "https://api.github.com/users/turtoise/orgs",
            "repos_url": "https://api.github.com/users/turtoise/repos",
            "events_url": "https://api.github.com/users/turtoise/events{/privacy}",
            "received_events_url": "https://api.github.com/users/turtoise/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2022-01-12T03:18:32Z",
        "updated_at": "2022-01-13T06:10:06Z",
        "closed_at": "2022-01-13T06:10:06Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Here is my question,I was using spark security plugin to authorize SparkSQL,but when i execute command \"show tables \" or any sql command ,it report below errors:\r\n\r\n22/01/11 10:23:26 WARN PolicyRefresher: cache file does not exist or not readable '/etc/ranger/sparkServer/policycache/sparkSql_sparkServer.json'\r\n![image](https://user-images.githubusercontent.com/19393229/149057311-2efc7f71-5e3f-4be5-9e73-fa26ad92c429.png)\r\n\r\n\r\nI have no idea why would this happen even though i configured a sparkService in hive in ranger?\r\n\r\n![image](https://user-images.githubusercontent.com/19393229/149055545-ccc914c2-071c-4f53-aa6e-c22c4ae5ad72.png)\r\n\r\n![image](https://user-images.githubusercontent.com/19393229/149056311-edacb93b-e4ee-4739-91ab-da0aa3dd56d1.png)\r\n\r\nAny sugestions could give me  and will be appreciated\uff01\r\n",
        "closed_by": {
            "login": "turtoise",
            "id": 19393229,
            "node_id": "MDQ6VXNlcjE5MzkzMjI5",
            "avatar_url": "https://avatars.githubusercontent.com/u/19393229?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/turtoise",
            "html_url": "https://github.com/turtoise",
            "followers_url": "https://api.github.com/users/turtoise/followers",
            "following_url": "https://api.github.com/users/turtoise/following{/other_user}",
            "gists_url": "https://api.github.com/users/turtoise/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/turtoise/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/turtoise/subscriptions",
            "organizations_url": "https://api.github.com/users/turtoise/orgs",
            "repos_url": "https://api.github.com/users/turtoise/repos",
            "events_url": "https://api.github.com/users/turtoise/events{/privacy}",
            "received_events_url": "https://api.github.com/users/turtoise/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/apache/submarine/issues/865/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/submarine/issues/865/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/apache/submarine/issues/862",
        "repository_url": "https://api.github.com/repos/apache/submarine",
        "labels_url": "https://api.github.com/repos/apache/submarine/issues/862/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/submarine/issues/862/comments",
        "events_url": "https://api.github.com/repos/apache/submarine/issues/862/events",
        "html_url": "https://github.com/apache/submarine/issues/862",
        "id": 1094103546,
        "node_id": "I_kwDODHwXyM5BNrH6",
        "number": 862,
        "title": "[Submarine Spark Security]\"select\" contains \"insert\"",
        "user": {
            "login": "XuankuF",
            "id": 28747492,
            "node_id": "MDQ6VXNlcjI4NzQ3NDky",
            "avatar_url": "https://avatars.githubusercontent.com/u/28747492?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/XuankuF",
            "html_url": "https://github.com/XuankuF",
            "followers_url": "https://api.github.com/users/XuankuF/followers",
            "following_url": "https://api.github.com/users/XuankuF/following{/other_user}",
            "gists_url": "https://api.github.com/users/XuankuF/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/XuankuF/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/XuankuF/subscriptions",
            "organizations_url": "https://api.github.com/users/XuankuF/orgs",
            "repos_url": "https://api.github.com/users/XuankuF/repos",
            "events_url": "https://api.github.com/users/XuankuF/events{/privacy}",
            "received_events_url": "https://api.github.com/users/XuankuF/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2022-01-05T08:31:59Z",
        "updated_at": "2022-01-19T01:17:58Z",
        "closed_at": "2022-01-19T01:17:58Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "In ranger, give the user only \"select\" permission on a table and the user will hive \"insert\" permission. This means that the user's insert operation on the table will be successful.",
        "closed_by": {
            "login": "XuankuF",
            "id": 28747492,
            "node_id": "MDQ6VXNlcjI4NzQ3NDky",
            "avatar_url": "https://avatars.githubusercontent.com/u/28747492?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/XuankuF",
            "html_url": "https://github.com/XuankuF",
            "followers_url": "https://api.github.com/users/XuankuF/followers",
            "following_url": "https://api.github.com/users/XuankuF/following{/other_user}",
            "gists_url": "https://api.github.com/users/XuankuF/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/XuankuF/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/XuankuF/subscriptions",
            "organizations_url": "https://api.github.com/users/XuankuF/orgs",
            "repos_url": "https://api.github.com/users/XuankuF/repos",
            "events_url": "https://api.github.com/users/XuankuF/events{/privacy}",
            "received_events_url": "https://api.github.com/users/XuankuF/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/apache/submarine/issues/862/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/submarine/issues/862/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/apache/submarine/issues/853",
        "repository_url": "https://api.github.com/repos/apache/submarine",
        "labels_url": "https://api.github.com/repos/apache/submarine/issues/853/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/submarine/issues/853/comments",
        "events_url": "https://api.github.com/repos/apache/submarine/issues/853/events",
        "html_url": "https://github.com/apache/submarine/issues/853",
        "id": 1091076754,
        "node_id": "I_kwDODHwXyM5BCIKS",
        "number": 853,
        "title": "[DESIGN] Submarine can provide the function of notebook startup and shutdown",
        "user": {
            "login": "cdmikechen",
            "id": 12069428,
            "node_id": "MDQ6VXNlcjEyMDY5NDI4",
            "avatar_url": "https://avatars.githubusercontent.com/u/12069428?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cdmikechen",
            "html_url": "https://github.com/cdmikechen",
            "followers_url": "https://api.github.com/users/cdmikechen/followers",
            "following_url": "https://api.github.com/users/cdmikechen/following{/other_user}",
            "gists_url": "https://api.github.com/users/cdmikechen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cdmikechen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cdmikechen/subscriptions",
            "organizations_url": "https://api.github.com/users/cdmikechen/orgs",
            "repos_url": "https://api.github.com/users/cdmikechen/repos",
            "events_url": "https://api.github.com/users/cdmikechen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cdmikechen/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2021-12-30T12:30:57Z",
        "updated_at": "2022-05-15T11:58:27Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "\u7531\u4e8e\u7bc7\u5e45\u95ee\u9898\uff0c\u8003\u8651\u5230\u82f1\u6587\u53ef\u80fd\u4e0d\u4e00\u5b9a\u80fd\u8868\u8fbe\u6e05\u695a\u5f88\u591a\u6267\u884c\u7684\u7ec6\u8282\uff0c\u6682\u65f6\u4ee5\u4e2d\u6587\u8fdb\u884c\u63cf\u8ff0\u3002\r\n\r\n\u76ee\u524d\u7684 Submarine \u6bcf\u6b21\u521b\u5efa\u4e00\u4e2a\u65b0\u7684 NoteBook \u90fd\u4f1a\u5728 K8s \u7684CRD\u8d44\u6e90\u4e0a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5b9e\u4f8b\u3002\u57fa\u4e8e `notebook-controller` \u7684\u670d\u52a1\u53d1\u73b0\u7684\u673a\u5236\uff0c\u4f1a\u521b\u5efa\u4e00\u4e2a Jupyter \u7684 Statefuleset \u8d44\u6e90\u548c Service \u8d44\u6e90\u3002\u8fd9\u662f\u4e00\u4e2a\u6b63\u5e38\u7684\u5904\u7406\u6d41\u7a0b\uff0c\u7528\u6237\u5728 NoteBook \u542f\u52a8\u540e\u53ef\u5728 Submarine \u4e0a\u70b9\u51fb\u540d\u79f0\u8bbf\u95ee\u8fd9\u4e2a\u5b9e\u4f8b\u3002\r\n\u4f46\u662f\u6bcf\u4e00\u4e2a\u5b9e\u4f8b\u5728\u4e0d\u540c\u7684\u4f7f\u7528\u8005\u521b\u5efa\u5e76\u4f7f\u7528\u540e\u5e76\u4e0d\u662f\u4e00\u76f4\u5728\u8fd0\u884c\u4ee3\u7801\u7684\uff0c\u5f88\u591a\u60c5\u51b5\u4e0b\u5728\u6267\u884c\u4e86\u4e00\u4e2aidea\u6216\u8005\u9a8c\u8bc1\u4e86\u4e00\u4e9b\u9884\u60f3\u7684\u60c5\u666f\u548c\u6570\u636e\u540e\uff0c\u8fd9\u4e2a NoteBook \u5b9e\u4f8b\u5c31\u4f1a\u88ab\u6401\u7f6e\u3002\u867d\u7136\u7528\u6237\u7a0d\u540e\u9000\u51fa\u4e86 Submarine\uff0c\u4f46\u662f\u8fd9\u4e2a\u5b9e\u4f8b\u4ecd\u7136\u5b58\u5728\uff0c\u8fd9\u5bf9\u4e8e\u96c6\u7fa4\u6765\u8bb2\u5c31\u662f\u4e00\u4e2a\u88ab\u5360\u7528\u7684\u65e0\u7528\u7684 Pod\u3002\r\n\r\n\u6211\u76ee\u524d\u7684\u8003\u8651\u662f\u5e0c\u671b Submarine \u80fd\u63d0\u4f9b\u4e00\u4e2a\u9488\u5bf9 NoteBook \u542f\u52a8\u548c\u505c\u6b62\u7684\u529f\u80fd\uff0c\u8fd9\u4e2a\u529f\u80fd\u4f1a\u5206\u4e3a2\u4e2a\u90e8\u5206\u6765\u5b9e\u73b0\u3002\r\n1. \u5728\u76ee\u524d NoteBook \u529f\u80fd\u7684\u5217\u8868\u64cd\u4f5c\u90e8\u5206\u6dfb\u52a0 `\u542f\u52a8/\u505c\u6b62` \u6309\u94ae\u3002\u7528\u6237\u5728\u786e\u8ba4\u4e0d\u4f7f\u7528\u8be5 NoteBook \u65f6\u5019\u53ef\u5173\u95ed Pod\uff0c\u4f46\u662f\u76f8\u5173\u7684 workspace \u7b49\u8d44\u6e90\u4e0d\u8fdb\u884c\u56de\u6536\uff1b\u518d\u6b21\u542f\u7528\u540e\u53ef\u7ee7\u627f\u539f\u6765\u7684\u8d44\u6e90\u91cd\u542f\u670d\u52a1\u3002\r\n2. \u786e\u8ba4\u4e00\u79cd\u81ea\u52a8\u505c\u6b62\u7684\u673a\u5236\uff0c\u5728\u7528\u6237\u6307\u5b9a\u65f6\u95f4\u4e0d\u64cd\u4f5c\u540e\uff0cSubmarine \u81ea\u52a8\u505c\u6b62\u8be5\u5b9e\u4f8b\u3002\u5728\u7528\u6237\u518d\u6b21\u9700\u8981\u65f6\u53ef\u518d\u542f\u52a8 NoteBook\u3002\r\n\r\n\u9488\u5bf9 1 \u65b9\u6848\uff0c\u53ef\u5982\u63cf\u8ff0\u4e2d\u63d0\u5230\u7684\u6dfb\u52a0 `\u542f\u52a8/\u505c\u6b62` \u6309\u94ae\uff0c\u8ba9\u7528\u6237\u81ea\u884c\u63a7\u5236\u3002\r\n\u9488\u5bf9 2 \u65b9\u6848\uff0c\u76ee\u524d\u5df2\u77e5\u7684\u6761\u4ef6\u4e0b\uff0c\u53ef\u57fa\u4e8e Jupyter \u7684 metric \u6307\u6807\u5229\u7528 Promethues \u8fdb\u884c\u91c7\u96c6\uff0c\u7136\u540e Submarine \u670d\u52a1\u4f1a\u8f6e\u8be2\u6307\u6807\u60c5\u51b5\uff0c\u9488\u5bf9\u6307\u5b9a\u65f6\u957f\uff08\u5047\u5b9a\u4e3a30\u5206\u949f\uff09\u6ca1\u6709\u8fc7\u6267\u884c\u7684 Pod \u505a\u8d44\u6e90\u56de\u6536\u3002\u6211\u5728\u81ea\u5df1\u7684\u6d4b\u8bd5\u73af\u5883\u4e0b\u9488\u5bf9\u65e2\u6709\u7684 Jupyter \u670d\u52a1\u505a\u4e86\u5982\u4e0b\u7684\u6d4b\u8bd5\u548c\u65b9\u6848\u9a8c\u8bc1\uff1a\r\n\r\nJupyter \u5bb9\u5668\u57fa\u4e8e `notebook-controller` \u505a\u5b9a\u5236\u5316\u8d44\u6e90\u6ce8\u518c\uff0c\u4f46\u662f `Service` \u7f3a\u5c11 `lables`\uff0c\u6682\u65e0\u6cd5\u4f7f\u7528 `Promethues Operator` \u7684 `ServiceMonitor` \u505a\u670d\u52a1\u53d1\u73b0\uff0c\u6545\u4f7f\u7528 `PodMonitor`\u505a\u9a8c\u8bc1\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u521b\u5efa\u4e86\u4e00\u4e2a\u540d\u79f0\u4e3a `test` \u7684 NoteBook \u5b9e\u4f8b\u3002`PodMonitor` \u7684\u63cf\u8ff0\u6587\u4ef6\u5982\u4e0b\uff1a\r\n\r\n```yaml\r\napiVersion: monitoring.coreos.com/v1\r\nkind: PodMonitor\r\nmetadata:\r\n  name: notebook-test\r\n  namespace: submarine\r\n  labels:\r\n    k8s-app-pod: 'true'\r\nspec: \r\n  podMetricsEndpoints:\r\n    - path: /notebook/submarine/test/metrics\r\n      port: notebook-port\r\n  namespaceSelector:\r\n    matchNames:\r\n      - submarine\r\n  selector:\r\n    matchLabels:\r\n      statefulset: test\r\n```\r\n![Xnip2021-12-30_20-32-16](https://user-images.githubusercontent.com/12069428/147752407-0135bf64-bd99-4558-8346-5f3885ea857d.jpg)\r\n\r\n\u5982\u56fe\u53ef\u4ee5\u770b\u5230\uff0c\u91c7\u96c6\u7684\u6307\u6807\u5185\uff0c`kernel_currently_running_total{type=\"python3\"}` \u8d44\u6e90\u53ef\u4ee5\u4f5c\u4e3a\u7cfb\u7edf\u8fd0\u884c\u65f6\u7684\u4e00\u4e2a\u5224\u65ad\u3002\r\n\u540c\u65f6\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u6dfb\u52a0\u72ec\u7acb\u7684 `Service` \u505a\u5230\u76f8\u540c\u7684\u6548\u679c\uff1a\r\n```yaml\r\nkind: Service\r\napiVersion: v1\r\nmetadata:\r\n  name: notebook-test-metric\r\n  namespace: submarine\r\n  labels:\r\n    statefulset: test\r\nspec:\r\n  ports:\r\n    - name: http-test\r\n      protocol: TCP\r\n      port: 8888\r\n      targetPort: 8888\r\n  selector:\r\n    statefulset: test\r\n  type: ClusterIP\r\n```\r\n```yaml\r\napiVersion: monitoring.coreos.com/v1\r\nkind: ServiceMonitor\r\nmetadata:\r\n  name: notebook-test\r\n  namespace: submarine\r\n  labels:\r\n    k8s-app-service: 'true'\r\nspec:\r\n  endpoints:\r\n    - path: /notebook/submarine/test/metrics\r\n      port: http-test\r\n  namespaceSelector:\r\n    matchNames:\r\n      - submarine\r\n  selector:\r\n    matchLabels:\r\n      statefulset: test\r\n```\r\n\u57fa\u4e8e\u670d\u52a1\u53d1\u73b0\u540e\u7684 Promethues \u6307\u6807\u5982\u4e0b\u5982\u6240\u793a\uff1a\r\n![Xnip2021-12-30_20-33-44](https://user-images.githubusercontent.com/12069428/147752525-757ef9f9-5afa-4735-aa18-18390c4ac0f4.jpg)\r\n\r\n\r\n",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/apache/submarine/issues/853/reactions",
            "total_count": 3,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/submarine/issues/853/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/apache/submarine/issues/838",
        "repository_url": "https://api.github.com/repos/apache/submarine",
        "labels_url": "https://api.github.com/repos/apache/submarine/issues/838/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/submarine/issues/838/comments",
        "events_url": "https://api.github.com/repos/apache/submarine/issues/838/events",
        "html_url": "https://github.com/apache/submarine/issues/838",
        "id": 1082942924,
        "node_id": "I_kwDODHwXyM5AjGXM",
        "number": 838,
        "title": "[Submarine Spark Security] when run sql have expression will return \u201dUnresolvedAttribute.exprId\u201c error",
        "user": {
            "login": "Junyewu",
            "id": 26737832,
            "node_id": "MDQ6VXNlcjI2NzM3ODMy",
            "avatar_url": "https://avatars.githubusercontent.com/u/26737832?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Junyewu",
            "html_url": "https://github.com/Junyewu",
            "followers_url": "https://api.github.com/users/Junyewu/followers",
            "following_url": "https://api.github.com/users/Junyewu/following{/other_user}",
            "gists_url": "https://api.github.com/users/Junyewu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Junyewu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Junyewu/subscriptions",
            "organizations_url": "https://api.github.com/users/Junyewu/orgs",
            "repos_url": "https://api.github.com/users/Junyewu/repos",
            "events_url": "https://api.github.com/users/Junyewu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Junyewu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2021-12-17T06:50:54Z",
        "updated_at": "2022-03-06T10:06:06Z",
        "closed_at": "2022-03-06T10:06:06Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "env: \r\nspark-3.1.1\r\nranger-2.1\r\nsubmarine-security-0.6.0\r\n\r\nsql code:\r\n```\r\nspark-sql> create or replace temporary view user_city_temp as \r\nselect id,case when if(city_zip_active >0,city_zip_active,if(city_zip_check >0 ,city_zip_check,city_zip_phone)) in ('0100','0200','0300','0400') then if(city_zip_active >0,city_zip_active,if(city_zip_check >0 ,city_zip_check,city_zip_phone)) else 'other' end as city from user_city;\r\n\r\ncolum_name           type\r\ncity_zip_phone\tint\tNULL\r\ncity_zip_check\tint\tNULL\r\ncity_zip_active\tint\tNULL\r\n```\r\n\r\nit will return a error\r\n```\r\norg.apache.spark.sql.catalyst.analysis.UnresolvedException: Invalid call to exprId on unresolved object, tree: 'city_zip_active\r\n\tat org.apache.spark.sql.catalyst.analysis.UnresolvedAttribute.exprId(unresolved.scala:157)\r\n\tat org.apache.spark.sql.catalyst.optimizer.SubmarineDataMaskingExtension$$anonfun$collectAllAliases$1$$anonfun$applyOrElse$2.$anonfun$applyOrElse$3(SubmarineDataMaskingExtension.scala:191)\r\n\tat scala.collection.mutable.HashMap.getOrElseUpdate(HashMap.scala:86)\r\n\tat org.apache.spark.sql.catalyst.optimizer.SubmarineDataMaskingExtension$$anonfun$collectAllAliases$1$$anonfun$applyOrElse$2.applyOrElse(SubmarineDataMaskingExtension.scala:191)\r\n\tat org.apache.spark.sql.catalyst.optimizer.SubmarineDataMaskingExtension$$anonfun$collectAllAliases$1$$anonfun$applyOrElse$2.applyOrElse(SubmarineDataMaskingExtension.scala:189)\r\n\tat org.apache.spark.sql.catalyst.trees.TreeNode.$anonfun$transformUp$2(TreeNode.scala:352)\r\n```\r\n\r\nit is ok  run in spark-3.1.1 with not spark-security\r\n",
        "closed_by": {
            "login": "xunliu",
            "id": 3677382,
            "node_id": "MDQ6VXNlcjM2NzczODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3677382?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xunliu",
            "html_url": "https://github.com/xunliu",
            "followers_url": "https://api.github.com/users/xunliu/followers",
            "following_url": "https://api.github.com/users/xunliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/xunliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xunliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xunliu/subscriptions",
            "organizations_url": "https://api.github.com/users/xunliu/orgs",
            "repos_url": "https://api.github.com/users/xunliu/repos",
            "events_url": "https://api.github.com/users/xunliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xunliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/apache/submarine/issues/838/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/submarine/issues/838/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/apache/submarine/issues/803",
        "repository_url": "https://api.github.com/repos/apache/submarine",
        "labels_url": "https://api.github.com/repos/apache/submarine/issues/803/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/submarine/issues/803/comments",
        "events_url": "https://api.github.com/repos/apache/submarine/issues/803/events",
        "html_url": "https://github.com/apache/submarine/issues/803",
        "id": 1057193614,
        "node_id": "I_kwDODHwXyM4_A36O",
        "number": 803,
        "title": "[Submarine Spark Security] Permission denied: user [xxx] does not have [USE] privilege on [spark_catalog] ",
        "user": {
            "login": "ethanzhou8109",
            "id": 18547443,
            "node_id": "MDQ6VXNlcjE4NTQ3NDQz",
            "avatar_url": "https://avatars.githubusercontent.com/u/18547443?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ethanzhou8109",
            "html_url": "https://github.com/ethanzhou8109",
            "followers_url": "https://api.github.com/users/ethanzhou8109/followers",
            "following_url": "https://api.github.com/users/ethanzhou8109/following{/other_user}",
            "gists_url": "https://api.github.com/users/ethanzhou8109/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ethanzhou8109/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ethanzhou8109/subscriptions",
            "organizations_url": "https://api.github.com/users/ethanzhou8109/orgs",
            "repos_url": "https://api.github.com/users/ethanzhou8109/repos",
            "events_url": "https://api.github.com/users/ethanzhou8109/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ethanzhou8109/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2021-11-18T10:33:58Z",
        "updated_at": "2021-11-22T05:48:23Z",
        "closed_at": "2021-11-22T05:48:23Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "we use Submarine Spark Security to enable to enable kyuubi acl, and we build with -Pspark3.1 on v0.6.0 like https://github.com/apache/submarine/issues/774, but when we submit sqls we always enconter errors bellow, like issue: https://github.com/apache/submarine/issues/533\r\nour spark version is 3.1.2 and ranger version is 2.1, when we try to add policy to spark_catalog and it doesn't work\r\n```\r\n21/11/18 18:22:49 WARN service.ThriftFrontendService: Error executing statement:\r\norg.apache.kyuubi.KyuubiSQLException: Error operating EXECUTE_STATEMENT: org.apache.submarine.spark.security.SparkAccessControlException: Permission denied: user [xxx] does not have [USE] privilege on [spark_catalog]\r\n        at org.apache.submarine.spark.security.RangerSparkAuthorizer$.$anonfun$checkPrivileges$3(RangerSparkAuthorizer.scala:126)\r\n        at org.apache.submarine.spark.security.RangerSparkAuthorizer$.$anonfun$checkPrivileges$3$adapted(RangerSparkAuthorizer.scala:100)\r\n        at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)\r\n        at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)\r\n        at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)\r\n        at org.apache.submarine.spark.security.RangerSparkAuthorizer$.checkPrivileges(RangerSparkAuthorizer.scala:100)\r\n        at org.apache.spark.sql.catalyst.optimizer.SubmarineSparkRangerAuthorizationExtension.apply(SubmarineSparkRangerAuthorizationExtension.scala:65)\r\n        at org.apache.spark.sql.catalyst.optimizer.SubmarineSparkRangerAuthorizationExtension.apply(SubmarineSparkRangerAuthorizationExtension.scala:40)\r\n        at org.apache.spark.sql.catalyst.rules.RuleExecutor.$anonfun$execute$2(RuleExecutor.scala:216)\r\n        at scala.collection.LinearSeqOptimized.foldLeft(LinearSeqOptimized.scala:126)\r\n        at scala.collection.LinearSeqOptimized.foldLeft$(LinearSeqOptimized.scala:122)\r\n        at scala.collection.immutable.List.foldLeft(List.scala:89)\r\n        at org.apache.spark.sql.catalyst.rules.RuleExecutor.$anonfun$execute$1(RuleExecutor.scala:213)\r\n        at org.apache.spark.sql.catalyst.rules.RuleExecutor.$anonfun$execute$1$adapted(RuleExecutor.scala:205)\r\n        at scala.collection.immutable.List.foreach(List.scala:392)\r\n        at org.apache.spark.sql.catalyst.rules.RuleExecutor.execute(RuleExecutor.scala:205)\r\n        at org.apache.spark.sql.catalyst.rules.RuleExecutor.$anonfun$executeAndTrack$1(RuleExecutor.scala:183)\r\n        at org.apache.spark.sql.catalyst.QueryPlanningTracker$.withTracker(QueryPlanningTracker.scala:88)\r\n        at org.apache.spark.sql.catalyst.rules.RuleExecutor.executeAndTrack(RuleExecutor.scala:183)\r\n        at org.apache.spark.sql.execution.QueryExecution.$anonfun$optimizedPlan$1(QueryExecution.scala:87)\r\n        at org.apache.spark.sql.catalyst.QueryPlanningTracker.measurePhase(QueryPlanningTracker.scala:111)\r\n        at org.apache.spark.sql.execution.QueryExecution.$anonfun$executePhase$1(QueryExecution.scala:143)\r\n        at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:775)\r\n        at org.apache.spark.sql.execution.QueryExecution.executePhase(QueryExecution.scala:143)\r\n        at org.apache.spark.sql.execution.QueryExecution.optimizedPlan$lzycompute(QueryExecution.scala:84)\r\n        at org.apache.spark.sql.execution.QueryExecution.optimizedPlan(QueryExecution.scala:84)\r\n        at org.apache.spark.sql.execution.QueryExecution.assertOptimized(QueryExecution.scala:95)\r\n        at org.apache.spark.sql.execution.QueryExecution.executedPlan$lzycompute(QueryExecution.scala:113)\r\n        at org.apache.spark.sql.execution.QueryExecution.executedPlan(QueryExecution.scala:110)\r\n        at org.apache.spark.sql.execution.QueryExecution.$anonfun$simpleString$2(QueryExecution.scala:161)\r\n        at org.apache.spark.sql.execution.ExplainUtils$.processPlan(ExplainUtils.scala:115)\r\n        at org.apache.spark.sql.execution.QueryExecution.simpleString(QueryExecution.scala:161)\r\n        at org.apache.spark.sql.execution.QueryExecution.org$apache$spark$sql$execution$QueryExecution$$explainString(QueryExecution.scala:206)\r\n        at org.apache.spark.sql.execution.QueryExecution.explainString(QueryExecution.scala:175)\r\n        at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$5(SQLExecution.scala:98)\r\n        at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:163)\r\n        at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:90)\r\n        at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:775)\r\n        at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:64)\r\n        at org.apache.spark.sql.Dataset.withAction(Dataset.scala:3685)\r\n        at org.apache.spark.sql.Dataset.<init>(Dataset.scala:228)\r\n        at org.apache.spark.sql.Dataset$.$anonfun$ofRows$2(Dataset.scala:99)\r\n        at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:775)\r\n        at org.apache.spark.sql.Dataset$.ofRows(Dataset.scala:96)\r\n        at org.apache.spark.sql.SparkSession.$anonfun$sql$1(SparkSession.scala:618)\r\n        at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:775)\r\n        at org.apache.spark.sql.SparkSession.sql(SparkSession.scala:613)\r\n        at org.apache.kyuubi.engine.spark.operation.ExecuteStatement.$anonfun$executeStatement$1(ExecuteStatement.scala:92)\r\n        at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)\r\n        at org.apache.kyuubi.engine.spark.operation.ExecuteStatement.withLocalProperties(ExecuteStatement.scala:143)\r\n        at org.apache.kyuubi.engine.spark.operation.ExecuteStatement.org$apache$kyuubi$engine$spark$operation$ExecuteStatement$$executeStatement(ExecuteStatement.scala:86)\r\n        at org.apache.kyuubi.engine.spark.operation.ExecuteStatement.runInternal(ExecuteStatement.scala:129)\r\n        at org.apache.kyuubi.operation.AbstractOperation.run(AbstractOperation.scala:129)\r\n        at org.apache.kyuubi.session.AbstractSession.runOperation(AbstractSession.scala:95)\r\n        at org.apache.kyuubi.engine.spark.session.SparkSessionImpl.runOperation(SparkSessionImpl.scala:44)\r\n        at org.apache.kyuubi.session.AbstractSession.$anonfun$executeStatement$1(AbstractSession.scala:123)\r\n        at org.apache.kyuubi.session.AbstractSession.withAcquireRelease(AbstractSession.scala:78)\r\n        at org.apache.kyuubi.session.AbstractSession.executeStatement(AbstractSession.scala:120)\r\n        at org.apache.kyuubi.service.AbstractBackendService.executeStatement(AbstractBackendService.scala:61)\r\n        at org.apache.kyuubi.service.ThriftFrontendService.ExecuteStatement(ThriftFrontendService.scala:256)\r\n        at org.apache.hive.service.rpc.thrift.TCLIService$Processor$ExecuteStatement.getResult(TCLIService.java:1557)\r\n        at org.apache.hive.service.rpc.thrift.TCLIService$Processor$ExecuteStatement.getResult(TCLIService.java:1542)\r\n        at org.apache.thrift.ProcessFunction.process(ProcessFunction.java:38)\r\n        at org.apache.thrift.TBaseProcessor.process(TBaseProcessor.java:39)\r\n        at org.apache.kyuubi.service.authentication.TSetIpAddressProcessor.process(TSetIpAddressProcessor.scala:36)\r\n        at org.apache.thrift.server.TThreadPoolServer$WorkerProcess.run(TThreadPoolServer.java:310)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n        at java.lang.Thread.run(Thread.java:748)\r\n        \r\n        at org.apache.kyuubi.KyuubiSQLException$.apply(KyuubiSQLException.scala:68)\r\n        at org.apache.kyuubi.engine.spark.operation.SparkOperation$$anonfun$onError$1.applyOrElse(SparkOperation.scala:97)\r\n        at org.apache.kyuubi.engine.spark.operation.SparkOperation$$anonfun$onError$1.applyOrElse(SparkOperation.scala:81)\r\n        at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)\r\n        at org.apache.kyuubi.engine.spark.operation.ExecuteStatement.$anonfun$executeStatement$1(ExecuteStatement.scala:100)\r\n        at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)\r\n        at org.apache.kyuubi.engine.spark.operation.ExecuteStatement.withLocalProperties(ExecuteStatement.scala:143)\r\n        at org.apache.kyuubi.engine.spark.operation.ExecuteStatement.org$apache$kyuubi$engine$spark$operation$ExecuteStatement$$executeStatement(ExecuteStatement.scala:86)\r\n        at org.apache.kyuubi.engine.spark.operation.ExecuteStatement.runInternal(ExecuteStatement.scala:129)\r\n        at org.apache.kyuubi.operation.AbstractOperation.run(AbstractOperation.scala:129)\r\n        at org.apache.kyuubi.session.AbstractSession.runOperation(AbstractSession.scala:95)\r\n        at org.apache.kyuubi.engine.spark.session.SparkSessionImpl.runOperation(SparkSessionImpl.scala:44)\r\n        at org.apache.kyuubi.session.AbstractSession.$anonfun$executeStatement$1(AbstractSession.scala:123)\r\n        at org.apache.kyuubi.session.AbstractSession.withAcquireRelease(AbstractSession.scala:78)\r\n        at org.apache.kyuubi.session.AbstractSession.executeStatement(AbstractSession.scala:120)\r\n        at org.apache.kyuubi.service.AbstractBackendService.executeStatement(AbstractBackendService.scala:61)\r\n        at org.apache.kyuubi.service.ThriftFrontendService.ExecuteStatement(ThriftFrontendService.scala:256)\r\n        at org.apache.hive.service.rpc.thrift.TCLIService$Processor$ExecuteStatement.getResult(TCLIService.java:1557)\r\n        at org.apache.hive.service.rpc.thrift.TCLIService$Processor$ExecuteStatement.getResult(TCLIService.java:1542)\r\n        at org.apache.thrift.ProcessFunction.process(ProcessFunction.java:38)\r\n        at org.apache.thrift.TBaseProcessor.process(TBaseProcessor.java:39)\r\n        at org.apache.kyuubi.service.authentication.TSetIpAddressProcessor.process(TSetIpAddressProcessor.scala:36)\r\n        at org.apache.thrift.server.TThreadPoolServer$WorkerProcess.run(TThreadPoolServer.java:310)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n        at java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.submarine.spark.security.SparkAccessControlException: Permission denied: user [xxx] does not have [USE] privilege on [spark_catalog]\r\n        at org.apache.submarine.spark.security.RangerSparkAuthorizer$.$anonfun$checkPrivileges$3(RangerSparkAuthorizer.scala:126)\r\n        at org.apache.submarine.spark.security.RangerSparkAuthorizer$.$anonfun$checkPrivileges$3$adapted(RangerSparkAuthorizer.scala:100)\r\n        at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)\r\n        at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)\r\n        at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)\r\n        at org.apache.submarine.spark.security.RangerSparkAuthorizer$.checkPrivileges(RangerSparkAuthorizer.scala:100)\r\n        at org.apache.spark.sql.catalyst.optimizer.SubmarineSparkRangerAuthorizationExtension.apply(SubmarineSparkRangerAuthorizationExtension.scala:65)\r\n        at org.apache.spark.sql.catalyst.optimizer.SubmarineSparkRangerAuthorizationExtension.apply(SubmarineSparkRangerAuthorizationExtension.scala:40)\r\n        at org.apache.spark.sql.catalyst.rules.RuleExecutor.$anonfun$execute$2(RuleExecutor.scala:216)\r\n        at scala.collection.LinearSeqOptimized.foldLeft(LinearSeqOptimized.scala:126)\r\n        at scala.collection.LinearSeqOptimized.foldLeft$(LinearSeqOptimized.scala:122)\r\n        at scala.collection.immutable.List.foldLeft(List.scala:89)\r\n        at org.apache.spark.sql.catalyst.rules.RuleExecutor.$anonfun$execute$1(RuleExecutor.scala:213)\r\n        at org.apache.spark.sql.catalyst.rules.RuleExecutor.$anonfun$execute$1$adapted(RuleExecutor.scala:205)\r\n        at scala.collection.immutable.List.foreach(List.scala:392)\r\n        at org.apache.spark.sql.catalyst.rules.RuleExecutor.execute(RuleExecutor.scala:205)\r\n        at org.apache.spark.sql.catalyst.rules.RuleExecutor.$anonfun$executeAndTrack$1(RuleExecutor.scala:183)\r\n        at org.apache.spark.sql.catalyst.QueryPlanningTracker$.withTracker(QueryPlanningTracker.scala:88)\r\n        at org.apache.spark.sql.catalyst.rules.RuleExecutor.executeAndTrack(RuleExecutor.scala:183)\r\n        at org.apache.spark.sql.execution.QueryExecution.$anonfun$optimizedPlan$1(QueryExecution.scala:87)\r\n        at org.apache.spark.sql.catalyst.QueryPlanningTracker.measurePhase(QueryPlanningTracker.scala:111)\r\n        at org.apache.spark.sql.execution.QueryExecution.$anonfun$executePhase$1(QueryExecution.scala:143)\r\n        at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:775)\r\n        at org.apache.spark.sql.execution.QueryExecution.executePhase(QueryExecution.scala:143)\r\n        at org.apache.spark.sql.execution.QueryExecution.optimizedPlan$lzycompute(QueryExecution.scala:84)\r\n        at org.apache.spark.sql.execution.QueryExecution.optimizedPlan(QueryExecution.scala:84)\r\n        at org.apache.spark.sql.execution.QueryExecution.assertOptimized(QueryExecution.scala:95)\r\n        at org.apache.spark.sql.execution.QueryExecution.executedPlan$lzycompute(QueryExecution.scala:113)\r\n        at org.apache.spark.sql.execution.QueryExecution.executedPlan(QueryExecution.scala:110)\r\n        at org.apache.spark.sql.execution.QueryExecution.$anonfun$simpleString$2(QueryExecution.scala:161)\r\n        at org.apache.spark.sql.execution.ExplainUtils$.processPlan(ExplainUtils.scala:115)\r\n        at org.apache.spark.sql.execution.QueryExecution.simpleString(QueryExecution.scala:161)\r\n        at org.apache.spark.sql.execution.QueryExecution.org$apache$spark$sql$execution$QueryExecution$$explainString(QueryExecution.scala:206)\r\n        at org.apache.spark.sql.execution.QueryExecution.explainString(QueryExecution.scala:175)\r\n        at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$5(SQLExecution.scala:98)\r\n        at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:163)\r\n        at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:90)\r\n        at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:775)\r\n        at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:64)\r\n        at org.apache.spark.sql.Dataset.withAction(Dataset.scala:3685)\r\n        at org.apache.spark.sql.Dataset.<init>(Dataset.scala:228)\r\n        at org.apache.spark.sql.Dataset$.$anonfun$ofRows$2(Dataset.scala:99)\r\n        at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:775)\r\n        at org.apache.spark.sql.Dataset$.ofRows(Dataset.scala:96)\r\n        at org.apache.spark.sql.SparkSession.$anonfun$sql$1(SparkSession.scala:618)\r\n        at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:775)\r\n        at org.apache.spark.sql.SparkSession.sql(SparkSession.scala:613)\r\n        at org.apache.kyuubi.engine.spark.operation.ExecuteStatement.$anonfun$executeStatement$1(ExecuteStatement.scala:92)\r\n```",
        "closed_by": {
            "login": "ethanzhou8109",
            "id": 18547443,
            "node_id": "MDQ6VXNlcjE4NTQ3NDQz",
            "avatar_url": "https://avatars.githubusercontent.com/u/18547443?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ethanzhou8109",
            "html_url": "https://github.com/ethanzhou8109",
            "followers_url": "https://api.github.com/users/ethanzhou8109/followers",
            "following_url": "https://api.github.com/users/ethanzhou8109/following{/other_user}",
            "gists_url": "https://api.github.com/users/ethanzhou8109/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ethanzhou8109/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ethanzhou8109/subscriptions",
            "organizations_url": "https://api.github.com/users/ethanzhou8109/orgs",
            "repos_url": "https://api.github.com/users/ethanzhou8109/repos",
            "events_url": "https://api.github.com/users/ethanzhou8109/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ethanzhou8109/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/apache/submarine/issues/803/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/submarine/issues/803/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/apache/submarine/issues/795",
        "repository_url": "https://api.github.com/repos/apache/submarine",
        "labels_url": "https://api.github.com/repos/apache/submarine/issues/795/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/submarine/issues/795/comments",
        "events_url": "https://api.github.com/repos/apache/submarine/issues/795/events",
        "html_url": "https://github.com/apache/submarine/issues/795",
        "id": 1049491139,
        "node_id": "I_kwDODHwXyM4-jfbD",
        "number": 795,
        "title": "[Submarine Spark Security] Different masking policies for different tables fail in the case of union",
        "user": {
            "login": "qiuliang988",
            "id": 67689926,
            "node_id": "MDQ6VXNlcjY3Njg5OTI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/67689926?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/qiuliang988",
            "html_url": "https://github.com/qiuliang988",
            "followers_url": "https://api.github.com/users/qiuliang988/followers",
            "following_url": "https://api.github.com/users/qiuliang988/following{/other_user}",
            "gists_url": "https://api.github.com/users/qiuliang988/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/qiuliang988/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/qiuliang988/subscriptions",
            "organizations_url": "https://api.github.com/users/qiuliang988/orgs",
            "repos_url": "https://api.github.com/users/qiuliang988/repos",
            "events_url": "https://api.github.com/users/qiuliang988/events{/privacy}",
            "received_events_url": "https://api.github.com/users/qiuliang988/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2021-11-10T07:35:43Z",
        "updated_at": "2022-03-06T10:05:44Z",
        "closed_at": "2022-03-06T10:05:44Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hi, We ran into a problem with Submarine's Spark Security for Column Masking\r\nFor example, \r\nselect col_1, col_2 from tbl_1 union select col_3, col_4 from tbl_2\r\nIf masking policies for col_2 and col_4 are different, col_4 will use col_2's policy instead of its own\r\nbecause col_4 is not in \"plan.output\"\r\n![image](https://user-images.githubusercontent.com/67689926/141068525-6bb2f58e-3b57-40ed-b91a-f14c618e05c3.png)",
        "closed_by": {
            "login": "xunliu",
            "id": 3677382,
            "node_id": "MDQ6VXNlcjM2NzczODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3677382?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xunliu",
            "html_url": "https://github.com/xunliu",
            "followers_url": "https://api.github.com/users/xunliu/followers",
            "following_url": "https://api.github.com/users/xunliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/xunliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xunliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xunliu/subscriptions",
            "organizations_url": "https://api.github.com/users/xunliu/orgs",
            "repos_url": "https://api.github.com/users/xunliu/repos",
            "events_url": "https://api.github.com/users/xunliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xunliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/apache/submarine/issues/795/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/submarine/issues/795/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/apache/submarine/issues/789",
        "repository_url": "https://api.github.com/repos/apache/submarine",
        "labels_url": "https://api.github.com/repos/apache/submarine/issues/789/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/submarine/issues/789/comments",
        "events_url": "https://api.github.com/repos/apache/submarine/issues/789/events",
        "html_url": "https://github.com/apache/submarine/issues/789",
        "id": 1039021451,
        "node_id": "I_kwDODHwXyM497jWL",
        "number": 789,
        "title": "Spark security does not use the beeline connected user.",
        "user": {
            "login": "sananguliyev",
            "id": 5057582,
            "node_id": "MDQ6VXNlcjUwNTc1ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5057582?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sananguliyev",
            "html_url": "https://github.com/sananguliyev",
            "followers_url": "https://api.github.com/users/sananguliyev/followers",
            "following_url": "https://api.github.com/users/sananguliyev/following{/other_user}",
            "gists_url": "https://api.github.com/users/sananguliyev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sananguliyev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sananguliyev/subscriptions",
            "organizations_url": "https://api.github.com/users/sananguliyev/orgs",
            "repos_url": "https://api.github.com/users/sananguliyev/repos",
            "events_url": "https://api.github.com/users/sananguliyev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sananguliyev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2021-10-28T23:06:28Z",
        "updated_at": "2022-03-06T10:06:25Z",
        "closed_at": "2022-03-06T10:06:25Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I am using ranger 2.1 and spark 3.1.\r\n\r\nI use (e.g. user: root) spark submit for running  HiveThriftServer2. After successful submit I use the beeline to connect to thriftserver but it does not use the user (e.g.user: test) which I connected while making connection with beeline. \r\n\r\nExpected result: spark security should check permissions for user `test` which I used for beeline connection\r\nActual: spark security is using `root` which I have executed the the spark submit for running thrift server. I can change it with --proxy-user option but it will still use the same user for all connection.\r\n",
        "closed_by": {
            "login": "xunliu",
            "id": 3677382,
            "node_id": "MDQ6VXNlcjM2NzczODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3677382?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xunliu",
            "html_url": "https://github.com/xunliu",
            "followers_url": "https://api.github.com/users/xunliu/followers",
            "following_url": "https://api.github.com/users/xunliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/xunliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xunliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xunliu/subscriptions",
            "organizations_url": "https://api.github.com/users/xunliu/orgs",
            "repos_url": "https://api.github.com/users/xunliu/repos",
            "events_url": "https://api.github.com/users/xunliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xunliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/apache/submarine/issues/789/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/submarine/issues/789/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/apache/submarine/issues/783",
        "repository_url": "https://api.github.com/repos/apache/submarine",
        "labels_url": "https://api.github.com/repos/apache/submarine/issues/783/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/submarine/issues/783/comments",
        "events_url": "https://api.github.com/repos/apache/submarine/issues/783/events",
        "html_url": "https://github.com/apache/submarine/issues/783",
        "id": 1031214903,
        "node_id": "I_kwDODHwXyM49dxc3",
        "number": 783,
        "title": "spark security doesn't work when set hive.server2.enable.doAs as false",
        "user": {
            "login": "chenghm",
            "id": 3665396,
            "node_id": "MDQ6VXNlcjM2NjUzOTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3665396?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chenghm",
            "html_url": "https://github.com/chenghm",
            "followers_url": "https://api.github.com/users/chenghm/followers",
            "following_url": "https://api.github.com/users/chenghm/following{/other_user}",
            "gists_url": "https://api.github.com/users/chenghm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chenghm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chenghm/subscriptions",
            "organizations_url": "https://api.github.com/users/chenghm/orgs",
            "repos_url": "https://api.github.com/users/chenghm/repos",
            "events_url": "https://api.github.com/users/chenghm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chenghm/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2021-10-20T09:59:15Z",
        "updated_at": "2022-03-06T10:07:03Z",
        "closed_at": "2022-03-06T10:07:03Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "When I configure hive.server2.enable.doas as false  in spark/conf/hive-site.xml , spark security does not work\r\n\r\n\r\n",
        "closed_by": {
            "login": "xunliu",
            "id": 3677382,
            "node_id": "MDQ6VXNlcjM2NzczODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3677382?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xunliu",
            "html_url": "https://github.com/xunliu",
            "followers_url": "https://api.github.com/users/xunliu/followers",
            "following_url": "https://api.github.com/users/xunliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/xunliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xunliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xunliu/subscriptions",
            "organizations_url": "https://api.github.com/users/xunliu/orgs",
            "repos_url": "https://api.github.com/users/xunliu/repos",
            "events_url": "https://api.github.com/users/xunliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xunliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/apache/submarine/issues/783/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/submarine/issues/783/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/apache/submarine/issues/774",
        "repository_url": "https://api.github.com/repos/apache/submarine",
        "labels_url": "https://api.github.com/repos/apache/submarine/issues/774/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/submarine/issues/774/comments",
        "events_url": "https://api.github.com/repos/apache/submarine/issues/774/events",
        "html_url": "https://github.com/apache/submarine/issues/774",
        "id": 1023264835,
        "node_id": "I_kwDODHwXyM48_chD",
        "number": 774,
        "title": "[Submarine Spark Security] some error with build support spark-3.1",
        "user": {
            "login": "Junyewu",
            "id": 26737832,
            "node_id": "MDQ6VXNlcjI2NzM3ODMy",
            "avatar_url": "https://avatars.githubusercontent.com/u/26737832?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Junyewu",
            "html_url": "https://github.com/Junyewu",
            "followers_url": "https://api.github.com/users/Junyewu/followers",
            "following_url": "https://api.github.com/users/Junyewu/following{/other_user}",
            "gists_url": "https://api.github.com/users/Junyewu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Junyewu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Junyewu/subscriptions",
            "organizations_url": "https://api.github.com/users/Junyewu/orgs",
            "repos_url": "https://api.github.com/users/Junyewu/repos",
            "events_url": "https://api.github.com/users/Junyewu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Junyewu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2021-10-12T01:33:52Z",
        "updated_at": "2021-12-17T06:38:26Z",
        "closed_at": "2021-12-17T06:38:26Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "edit the pom file of spark-security project\uff1a\r\n```\r\n    <profile>\r\n      <id>spark-3.1</id>\r\n      <properties>\r\n        <spark.version>3.1.1</spark.version>\r\n        <scala.version>2.12.10</scala.version>\r\n        <scala.binary.version>2.12</scala.binary.version>\r\n        <!--<scalatest.version>3.2.0</scalatest.version>-->\r\n        <spark.compatible.version>3</spark.compatible.version>\r\n        <commons-lang3.version>3.10</commons-lang3.version>\r\n        <jackson-databind.version>2.10.5</jackson-databind.version>\r\n        <jackson-annotations.version>2.10.5</jackson-annotations.version>\r\n      </properties>\r\n    </profile>\r\n```\r\n\r\n\r\nbuild command\uff1a\r\n```\r\n mvn clean package -Pspark-3.1 -Pranger-2.1 -DskipTests\r\n```\r\n\r\n\r\nerror message\uff1a\r\n```\r\n[ERROR] /spark-security/spark-3/src/main/scala/org/apache/submarine/spark/security/parser/SubmarineSqlParser.scala:113: value parseRawDataType is not a member of org.apache.spark.sql.catalyst.parser.ParserInterface\r\n[ERROR]     delegate.parseRawDataType(sqlText)\r\n[ERROR]              ^\r\n[ERROR] /spark-security/src/main/scala/org/apache/spark/sql/catalyst/optimizer/SubmarineSparkRangerAuthorizationExtension.scala:60: pattern type is incompatible with expected type;\r\n found   : org.apache.spark.sql.execution.command.ResetCommand.type\r\n required: org.apache.spark.sql.catalyst.plans.logical.LogicalPlan\r\nNote: if you intended to match against the class, try `case ResetCommand(_)`\r\n[ERROR]       case ResetCommand => SubmarineResetCommand\r\n[ERROR]            ^\r\n[ERROR] two errors found\r\n```\r\n\r\n",
        "closed_by": {
            "login": "Junyewu",
            "id": 26737832,
            "node_id": "MDQ6VXNlcjI2NzM3ODMy",
            "avatar_url": "https://avatars.githubusercontent.com/u/26737832?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Junyewu",
            "html_url": "https://github.com/Junyewu",
            "followers_url": "https://api.github.com/users/Junyewu/followers",
            "following_url": "https://api.github.com/users/Junyewu/following{/other_user}",
            "gists_url": "https://api.github.com/users/Junyewu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Junyewu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Junyewu/subscriptions",
            "organizations_url": "https://api.github.com/users/Junyewu/orgs",
            "repos_url": "https://api.github.com/users/Junyewu/repos",
            "events_url": "https://api.github.com/users/Junyewu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Junyewu/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/apache/submarine/issues/774/reactions",
            "total_count": 4,
            "+1": 4,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/submarine/issues/774/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/apache/submarine/issues/755",
        "repository_url": "https://api.github.com/repos/apache/submarine",
        "labels_url": "https://api.github.com/repos/apache/submarine/issues/755/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/submarine/issues/755/comments",
        "events_url": "https://api.github.com/repos/apache/submarine/issues/755/events",
        "html_url": "https://github.com/apache/submarine/issues/755",
        "id": 999989933,
        "node_id": "I_kwDODHwXyM47mqKt",
        "number": 755,
        "title": "Is it proper to deprecate submarine-cloud ?",
        "user": {
            "login": "cxorm",
            "id": 38711101,
            "node_id": "MDQ6VXNlcjM4NzExMTAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/38711101?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cxorm",
            "html_url": "https://github.com/cxorm",
            "followers_url": "https://api.github.com/users/cxorm/followers",
            "following_url": "https://api.github.com/users/cxorm/following{/other_user}",
            "gists_url": "https://api.github.com/users/cxorm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cxorm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cxorm/subscriptions",
            "organizations_url": "https://api.github.com/users/cxorm/orgs",
            "repos_url": "https://api.github.com/users/cxorm/repos",
            "events_url": "https://api.github.com/users/cxorm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cxorm/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1564932574,
                "node_id": "MDU6TGFiZWwxNTY0OTMyNTc0",
                "url": "https://api.github.com/repos/apache/submarine/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2021-09-18T09:49:45Z",
        "updated_at": "2021-09-18T09:53:51Z",
        "closed_at": "2021-09-18T09:53:51Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "There are two `submarine-cloud` in `Submarine` and the introduction of [submarine-cloud-v2](https://github.com/apache/submarine/tree/master/submarine-cloud-v2) is complete.\r\n\r\nCould we deprecate [submarine-cloud](https://github.com/apache/submarine/tree/master/submarine-cloud) ?\r\n\r\nPlease feel free to correct me if I missed something, thanks.",
        "closed_by": {
            "login": "cxorm",
            "id": 38711101,
            "node_id": "MDQ6VXNlcjM4NzExMTAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/38711101?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cxorm",
            "html_url": "https://github.com/cxorm",
            "followers_url": "https://api.github.com/users/cxorm/followers",
            "following_url": "https://api.github.com/users/cxorm/following{/other_user}",
            "gists_url": "https://api.github.com/users/cxorm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cxorm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cxorm/subscriptions",
            "organizations_url": "https://api.github.com/users/cxorm/orgs",
            "repos_url": "https://api.github.com/users/cxorm/repos",
            "events_url": "https://api.github.com/users/cxorm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cxorm/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/apache/submarine/issues/755/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/submarine/issues/755/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/apache/submarine/issues/754",
        "repository_url": "https://api.github.com/repos/apache/submarine",
        "labels_url": "https://api.github.com/repos/apache/submarine/issues/754/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/submarine/issues/754/comments",
        "events_url": "https://api.github.com/repos/apache/submarine/issues/754/events",
        "html_url": "https://github.com/apache/submarine/issues/754",
        "id": 999154634,
        "node_id": "I_kwDODHwXyM47jePK",
        "number": 754,
        "title": "[Submarine Spark Security] ClassCastException",
        "user": {
            "login": "YannngHQ",
            "id": 44726178,
            "node_id": "MDQ6VXNlcjQ0NzI2MTc4",
            "avatar_url": "https://avatars.githubusercontent.com/u/44726178?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/YannngHQ",
            "html_url": "https://github.com/YannngHQ",
            "followers_url": "https://api.github.com/users/YannngHQ/followers",
            "following_url": "https://api.github.com/users/YannngHQ/following{/other_user}",
            "gists_url": "https://api.github.com/users/YannngHQ/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/YannngHQ/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/YannngHQ/subscriptions",
            "organizations_url": "https://api.github.com/users/YannngHQ/orgs",
            "repos_url": "https://api.github.com/users/YannngHQ/repos",
            "events_url": "https://api.github.com/users/YannngHQ/events{/privacy}",
            "received_events_url": "https://api.github.com/users/YannngHQ/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2021-09-17T09:39:13Z",
        "updated_at": "2021-09-18T08:38:17Z",
        "closed_at": "2021-09-18T08:38:16Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "reference : https://submarine.apache.org/docs/userDocs/submarine-security/spark-security/build-submarine-spark-security-plugin/\r\n\r\nspark beeline -> kyuubi -> spark sql \r\nspark 3.1.2\r\nkyuubi 1.2.0\r\nsubmarine 0.6.0\r\n\r\none: \r\n21/09/16 19:07:33 ERROR spark.SparkSQLEngine: Error start SparkSQLEngine\r\njava.lang.ClassCastException: java.util.ArrayList cannot be cast to scala.collection.Seq\r\n\tat org.apache.spark.sql.catalyst.optimizer.SubmarineSparkRangerAuthorizationExtension.apply(SubmarineSparkRangerAuthorizationExtension.scala:63)\r\n\tat org.apache.spark.sql.catalyst.optimizer.SubmarineSparkRangerAuthorizationExtension.apply(SubmarineSparkRangerAuthorizationExtension.scala:40)\r\n\r\ntwo:\r\nError: Error operating EXECUTE_STATEMENT: java.lang.ClassCastException: org.apache.hadoop.hive.ql.security.authorization.plugin.HivePrivilegeObject cannot be cast to org.apache.submarine.spark.security.SparkPrivilegeObject\r\n\tat scala.collection.immutable.Stream.foreach(Stream.scala:533)\r\n\tat org.apache.submarine.spark.security.RangerSparkAuthorizer$.addAccessRequest$1(RangerSparkAuthorizer.scala:74)\r\n\tat org.apache.submarine.spark.security.RangerSparkAuthorizer$.checkPrivileges(RangerSparkAuthorizer.scala:98)",
        "closed_by": {
            "login": "YannngHQ",
            "id": 44726178,
            "node_id": "MDQ6VXNlcjQ0NzI2MTc4",
            "avatar_url": "https://avatars.githubusercontent.com/u/44726178?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/YannngHQ",
            "html_url": "https://github.com/YannngHQ",
            "followers_url": "https://api.github.com/users/YannngHQ/followers",
            "following_url": "https://api.github.com/users/YannngHQ/following{/other_user}",
            "gists_url": "https://api.github.com/users/YannngHQ/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/YannngHQ/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/YannngHQ/subscriptions",
            "organizations_url": "https://api.github.com/users/YannngHQ/orgs",
            "repos_url": "https://api.github.com/users/YannngHQ/repos",
            "events_url": "https://api.github.com/users/YannngHQ/events{/privacy}",
            "received_events_url": "https://api.github.com/users/YannngHQ/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/apache/submarine/issues/754/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/submarine/issues/754/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/apache/submarine/issues/661",
        "repository_url": "https://api.github.com/repos/apache/submarine",
        "labels_url": "https://api.github.com/repos/apache/submarine/issues/661/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/submarine/issues/661/comments",
        "events_url": "https://api.github.com/repos/apache/submarine/issues/661/events",
        "html_url": "https://github.com/apache/submarine/issues/661",
        "id": 941455430,
        "node_id": "MDU6SXNzdWU5NDE0NTU0MzA=",
        "number": 661,
        "title": "Migrate to the next version of Python requests when released",
        "user": {
            "login": "potiuk",
            "id": 595491,
            "node_id": "MDQ6VXNlcjU5NTQ5MQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/595491?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/potiuk",
            "html_url": "https://github.com/potiuk",
            "followers_url": "https://api.github.com/users/potiuk/followers",
            "following_url": "https://api.github.com/users/potiuk/following{/other_user}",
            "gists_url": "https://api.github.com/users/potiuk/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/potiuk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/potiuk/subscriptions",
            "organizations_url": "https://api.github.com/users/potiuk/orgs",
            "repos_url": "https://api.github.com/users/potiuk/repos",
            "events_url": "https://api.github.com/users/potiuk/events{/privacy}",
            "received_events_url": "https://api.github.com/users/potiuk/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2021-07-11T13:40:27Z",
        "updated_at": "2022-10-05T13:39:07Z",
        "closed_at": "2022-10-05T13:39:07Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "Hello Maintainers, \r\n\r\nI am a PMC member of Apache Airflow, and I wanted to give you a bit of heads-up with rather important migration to the upcoming version of requests library in your Python release. \r\n\r\nSince you are using requests library in your project, you are affected.\r\n\r\nAs discussed at length in https://issues.apache.org/jira/browse/LEGAL-572 we found out that the 'chardet` library used by `requests` library was a mandatory dependency to requests and since it has LGPL licence, we should not release any Apache Software with it. \r\n\r\nSince then (and since in Airflow we rely on requests heavily) we have been working with the requests maintainers and \"charset-normalizer\" maintainer to make it possible to replace chardet with MIT-licensed charset-normalizer instead so that requests library can be used in Python releases by Apache projects.\r\n\r\nThis was a bumpy road but finally the PR by @ashb has been merged: https://github.com/psf/requests/pull/5797 and we hope soon a new version of requests library will be released. \r\n\r\nThis is just a heads-up. I will let you know when it is released, but I have a kind requests as well - I might ask the maintainers to release a release candidate of requests and maybe you could help to test it before it is released, that would be some re-assurance for the maintainers of requests who are very concerned about stability of their releases.\r\n\r\nLet me know if you need any more information and whether you would like to help in testing the candidate when it is out.",
        "closed_by": {
            "login": "cdmikechen",
            "id": 12069428,
            "node_id": "MDQ6VXNlcjEyMDY5NDI4",
            "avatar_url": "https://avatars.githubusercontent.com/u/12069428?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cdmikechen",
            "html_url": "https://github.com/cdmikechen",
            "followers_url": "https://api.github.com/users/cdmikechen/followers",
            "following_url": "https://api.github.com/users/cdmikechen/following{/other_user}",
            "gists_url": "https://api.github.com/users/cdmikechen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cdmikechen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cdmikechen/subscriptions",
            "organizations_url": "https://api.github.com/users/cdmikechen/orgs",
            "repos_url": "https://api.github.com/users/cdmikechen/repos",
            "events_url": "https://api.github.com/users/cdmikechen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cdmikechen/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/apache/submarine/issues/661/reactions",
            "total_count": 2,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/submarine/issues/661/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/apache/submarine/issues/587",
        "repository_url": "https://api.github.com/repos/apache/submarine",
        "labels_url": "https://api.github.com/repos/apache/submarine/issues/587/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/submarine/issues/587/comments",
        "events_url": "https://api.github.com/repos/apache/submarine/issues/587/events",
        "html_url": "https://github.com/apache/submarine/issues/587",
        "id": 891025860,
        "node_id": "MDU6SXNzdWU4OTEwMjU4NjA=",
        "number": 587,
        "title": "operation not allowed when using spark-security in my thrift server, maybe lost the table owner? ",
        "user": {
            "login": "shenbinglife",
            "id": 16119667,
            "node_id": "MDQ6VXNlcjE2MTE5NjY3",
            "avatar_url": "https://avatars.githubusercontent.com/u/16119667?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shenbinglife",
            "html_url": "https://github.com/shenbinglife",
            "followers_url": "https://api.github.com/users/shenbinglife/followers",
            "following_url": "https://api.github.com/users/shenbinglife/following{/other_user}",
            "gists_url": "https://api.github.com/users/shenbinglife/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shenbinglife/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shenbinglife/subscriptions",
            "organizations_url": "https://api.github.com/users/shenbinglife/orgs",
            "repos_url": "https://api.github.com/users/shenbinglife/repos",
            "events_url": "https://api.github.com/users/shenbinglife/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shenbinglife/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2021-05-13T13:07:20Z",
        "updated_at": "2022-03-06T10:07:19Z",
        "closed_at": "2022-03-06T10:07:18Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I import  spark-security into my thrift server with ranger 2.0 and spark 2.4.5\u3002\r\nBut I can not insert into a table created by myself even select. \r\n\r\nError Msg: \r\n```\r\n2021-05-13 17:59:08,180 DEBUG [OperationManager-Background-Pool: Thread-164] org.apache.ranger.plugin.policyengine.RangerPolicyEngineImpl:516  - <== RangerPolicyEngineImpl.evaluatePolicies(RangerAccessRequestImpl={resource={RangerResourceImpl={ownerUser={null} elements={database=default; table=t1; } }} accessType={select} user={user1} userGroups={hive hadoop ficommon default_1000 } accessTime={Thu May 13 17:59:08 CST 2021} clientIPAddress={null} forwardedAddresses={} remoteIPAddress={null} clientType={null} action={QUERY} requestData={null} sessionId={null} resourceMatchingScope={SELF} clusterName={} clusterType={} context={token:USER={user1} } }, policyType=0): RangerAccessResult={isAccessDetermined={false} isAllowed={false} isAuditedDetermined={true} isAudited={true} policyType={0} policyId={-1} zoneName={null} auditPolicyId={3} policyVersion={null} evaluatedPoliciesCount={4} reason={null} additionalInfo={}}\r\n\r\n....\r\n\r\norg.apache.ranger.authorization.spark.authorizer.SparkAccessControlException: Permission denied: user [user1] does not have [SELECT] privilege on [default/t1]\r\n        at org.apache.ranger.authorization.spark.authorizer.RangerSparkAuthorizer$$anonfun$checkPrivileges$1.apply(RangerSparkAuthorizer.scala:123)\r\n        at org.apache.ranger.authorization.spark.authorizer.RangerSparkAuthorizer$$anonfun$checkPrivileges$1.apply(RangerSparkAuthorizer.scala:98)\r\n        at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)\r\n        at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)\r\n        at org.apache.ranger.authorization.spark.authorizer.RangerSparkAuthorizer$.checkPrivileges(RangerSparkAuthorizer.scala:98)\r\n        at org.apache.spark.sql.catalyst.optimizer.RangerSparkAuthorizerExtension.apply(RangerSparkAuthorizerExtension.scala:62)\r\n        at org.apache.spark.sql.catalyst.optimizer.RangerSparkAuthorizerExtension.apply(RangerSparkAuthorizerExtension.scala:36)\r\n        at org.apache.spark.sql.catalyst.rules.RuleExecutor$$anonfun$execute$1$$anonfun$apply$1.apply(RuleExecutor.scala:87)\r\n        at org.apache.spark.sql.catalyst.rules.RuleExecutor$$anonfun$execute$1$$anonfun$apply$1.apply(RuleExecutor.scala:84)\r\n        at scala.collection.LinearSeqOptimized$class.foldLeft(LinearSeqOptimized.scala:124)\r\n        at scala.collection.immutable.List.foldLeft(List.scala:84)\r\n        at org.apache.spark.sql.catalyst.rules.RuleExecutor$$anonfun$execute$1.apply(RuleExecutor.scala:84)\r\n        at org.apache.spark.sql.catalyst.rules.RuleExecutor$$anonfun$execute$1.apply(RuleExecutor.scala:76)\r\n        at scala.collection.immutable.List.foreach(List.scala:392)\r\n        at org.apache.spark.sql.catalyst.rules.RuleExecutor.execute(RuleExecutor.scala:76)\r\n        at org.apache.spark.sql.execution.QueryExecution$$anonfun$optimizedPlan$1.apply(QueryExecution.scala:74)\r\n        at org.apache.spark.sql.execution.QueryExecution$$anonfun$optimizedPlan$1.apply(QueryExecution.scala:74)\r\n        at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:789)\r\n\r\n```\r\n\r\n\r\n\r\nI set the table owner into the RangerSparkResource , then the problem disappeard.",
        "closed_by": {
            "login": "xunliu",
            "id": 3677382,
            "node_id": "MDQ6VXNlcjM2NzczODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3677382?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xunliu",
            "html_url": "https://github.com/xunliu",
            "followers_url": "https://api.github.com/users/xunliu/followers",
            "following_url": "https://api.github.com/users/xunliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/xunliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xunliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xunliu/subscriptions",
            "organizations_url": "https://api.github.com/users/xunliu/orgs",
            "repos_url": "https://api.github.com/users/xunliu/repos",
            "events_url": "https://api.github.com/users/xunliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xunliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/apache/submarine/issues/587/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/submarine/issues/587/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/apache/submarine/issues/551",
        "repository_url": "https://api.github.com/repos/apache/submarine",
        "labels_url": "https://api.github.com/repos/apache/submarine/issues/551/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/submarine/issues/551/comments",
        "events_url": "https://api.github.com/repos/apache/submarine/issues/551/events",
        "html_url": "https://github.com/apache/submarine/issues/551",
        "id": 851365152,
        "node_id": "MDU6SXNzdWU4NTEzNjUxNTI=",
        "number": 551,
        "title": "[Submarine Spark Security] Policy Download Performance",
        "user": {
            "login": "jasonkoo",
            "id": 1430914,
            "node_id": "MDQ6VXNlcjE0MzA5MTQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1430914?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasonkoo",
            "html_url": "https://github.com/jasonkoo",
            "followers_url": "https://api.github.com/users/jasonkoo/followers",
            "following_url": "https://api.github.com/users/jasonkoo/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasonkoo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasonkoo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasonkoo/subscriptions",
            "organizations_url": "https://api.github.com/users/jasonkoo/orgs",
            "repos_url": "https://api.github.com/users/jasonkoo/repos",
            "events_url": "https://api.github.com/users/jasonkoo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasonkoo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2021-04-06T12:16:45Z",
        "updated_at": "2022-03-06T10:05:27Z",
        "closed_at": "2022-03-06T10:05:27Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "In a large cluster with hundreds of Spark jobs running simultaneously and tens of thousands of ranger policies created\uff0c when restarting the cluster, these Spark jobs will try to download ranger policies at the same time and Ranger Admin will be under a huge pressure. Can Ranger Admin withstand such a huge load ? Does anyone know how to deal with this special situation?",
        "closed_by": {
            "login": "xunliu",
            "id": 3677382,
            "node_id": "MDQ6VXNlcjM2NzczODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3677382?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xunliu",
            "html_url": "https://github.com/xunliu",
            "followers_url": "https://api.github.com/users/xunliu/followers",
            "following_url": "https://api.github.com/users/xunliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/xunliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xunliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xunliu/subscriptions",
            "organizations_url": "https://api.github.com/users/xunliu/orgs",
            "repos_url": "https://api.github.com/users/xunliu/repos",
            "events_url": "https://api.github.com/users/xunliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xunliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/apache/submarine/issues/551/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/submarine/issues/551/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/apache/submarine/issues/544",
        "repository_url": "https://api.github.com/repos/apache/submarine",
        "labels_url": "https://api.github.com/repos/apache/submarine/issues/544/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/submarine/issues/544/comments",
        "events_url": "https://api.github.com/repos/apache/submarine/issues/544/events",
        "html_url": "https://github.com/apache/submarine/issues/544",
        "id": 839700277,
        "node_id": "MDU6SXNzdWU4Mzk3MDAyNzc=",
        "number": 544,
        "title": "Could not find these documents",
        "user": {
            "login": "YAyaXM",
            "id": 34047194,
            "node_id": "MDQ6VXNlcjM0MDQ3MTk0",
            "avatar_url": "https://avatars.githubusercontent.com/u/34047194?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/YAyaXM",
            "html_url": "https://github.com/YAyaXM",
            "followers_url": "https://api.github.com/users/YAyaXM/followers",
            "following_url": "https://api.github.com/users/YAyaXM/following{/other_user}",
            "gists_url": "https://api.github.com/users/YAyaXM/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/YAyaXM/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/YAyaXM/subscriptions",
            "organizations_url": "https://api.github.com/users/YAyaXM/orgs",
            "repos_url": "https://api.github.com/users/YAyaXM/repos",
            "events_url": "https://api.github.com/users/YAyaXM/events{/privacy}",
            "received_events_url": "https://api.github.com/users/YAyaXM/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2021-03-24T13:02:45Z",
        "updated_at": "2021-03-28T07:33:12Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "![image](https://user-images.githubusercontent.com/34047194/112314690-4439c180-8ce4-11eb-82e7-7b9f4959696a.png)\r\n",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/apache/submarine/issues/544/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/submarine/issues/544/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/apache/submarine/issues/543",
        "repository_url": "https://api.github.com/repos/apache/submarine",
        "labels_url": "https://api.github.com/repos/apache/submarine/issues/543/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/submarine/issues/543/comments",
        "events_url": "https://api.github.com/repos/apache/submarine/issues/543/events",
        "html_url": "https://github.com/apache/submarine/issues/543",
        "id": 839524756,
        "node_id": "MDU6SXNzdWU4Mzk1MjQ3NTY=",
        "number": 543,
        "title": "notebook Can't create",
        "user": {
            "login": "YAyaXM",
            "id": 34047194,
            "node_id": "MDQ6VXNlcjM0MDQ3MTk0",
            "avatar_url": "https://avatars.githubusercontent.com/u/34047194?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/YAyaXM",
            "html_url": "https://github.com/YAyaXM",
            "followers_url": "https://api.github.com/users/YAyaXM/followers",
            "following_url": "https://api.github.com/users/YAyaXM/following{/other_user}",
            "gists_url": "https://api.github.com/users/YAyaXM/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/YAyaXM/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/YAyaXM/subscriptions",
            "organizations_url": "https://api.github.com/users/YAyaXM/orgs",
            "repos_url": "https://api.github.com/users/YAyaXM/repos",
            "events_url": "https://api.github.com/users/YAyaXM/events{/privacy}",
            "received_events_url": "https://api.github.com/users/YAyaXM/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2021-03-24T09:29:06Z",
        "updated_at": "2021-03-24T09:30:28Z",
        "closed_at": "2021-03-24T09:30:13Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "![image](https://user-images.githubusercontent.com/34047194/112286501-599ff300-8cc6-11eb-9c7f-f12c24ca342f.png)\r\n",
        "closed_by": {
            "login": "YAyaXM",
            "id": 34047194,
            "node_id": "MDQ6VXNlcjM0MDQ3MTk0",
            "avatar_url": "https://avatars.githubusercontent.com/u/34047194?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/YAyaXM",
            "html_url": "https://github.com/YAyaXM",
            "followers_url": "https://api.github.com/users/YAyaXM/followers",
            "following_url": "https://api.github.com/users/YAyaXM/following{/other_user}",
            "gists_url": "https://api.github.com/users/YAyaXM/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/YAyaXM/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/YAyaXM/subscriptions",
            "organizations_url": "https://api.github.com/users/YAyaXM/orgs",
            "repos_url": "https://api.github.com/users/YAyaXM/repos",
            "events_url": "https://api.github.com/users/YAyaXM/events{/privacy}",
            "received_events_url": "https://api.github.com/users/YAyaXM/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/apache/submarine/issues/543/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/submarine/issues/543/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/apache/submarine/issues/533",
        "repository_url": "https://api.github.com/repos/apache/submarine",
        "labels_url": "https://api.github.com/repos/apache/submarine/issues/533/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/submarine/issues/533/comments",
        "events_url": "https://api.github.com/repos/apache/submarine/issues/533/events",
        "html_url": "https://github.com/apache/submarine/issues/533",
        "id": 829717772,
        "node_id": "MDU6SXNzdWU4Mjk3MTc3NzI=",
        "number": 533,
        "title": "org.apache.submarine.spark.security.SparkAccessControlException: Permission denied: user [tools] does not have [USE] privilege on [spark_catalog]",
        "user": {
            "login": "XuankuF",
            "id": 28747492,
            "node_id": "MDQ6VXNlcjI4NzQ3NDky",
            "avatar_url": "https://avatars.githubusercontent.com/u/28747492?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/XuankuF",
            "html_url": "https://github.com/XuankuF",
            "followers_url": "https://api.github.com/users/XuankuF/followers",
            "following_url": "https://api.github.com/users/XuankuF/following{/other_user}",
            "gists_url": "https://api.github.com/users/XuankuF/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/XuankuF/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/XuankuF/subscriptions",
            "organizations_url": "https://api.github.com/users/XuankuF/orgs",
            "repos_url": "https://api.github.com/users/XuankuF/repos",
            "events_url": "https://api.github.com/users/XuankuF/events{/privacy}",
            "received_events_url": "https://api.github.com/users/XuankuF/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2021-03-12T03:15:54Z",
        "updated_at": "2022-03-06T10:06:40Z",
        "closed_at": "2022-03-06T10:06:40Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "spark version: 3.0\r\nranger version: 1.2\r\nexecute `./bin/beeline -u jdbc:hive2://ip:50033/tools -n tools`, and error log:\r\n\r\n```\r\n21/03/11 22:08:19 WARN thrift.ThriftCLIService: Error opening session: \r\norg.apache.hive.service.cli.HiveSQLException: Failed to open new session: org.apache.submarine.spark.security.SparkAccessControlException: Permission denied: user [tools] does not have [USE] privilege on [spark_catalog]\r\n        at org.apache.spark.sql.hive.thriftserver.SparkSQLSessionManager.openSession(SparkSQLSessionManager.scala:85)\r\n        at org.apache.hive.service.cli.CLIService.openSession(CLIService.java:196)\r\n        at org.apache.hive.service.cli.thrift.ThriftCLIService.getSessionHandle(ThriftCLIService.java:374)\r\n        at org.apache.hive.service.cli.thrift.ThriftCLIService.OpenSession(ThriftCLIService.java:243)\r\n        at org.apache.hive.service.rpc.thrift.TCLIService$Processor$OpenSession.getResult(TCLIService.java:1497)\r\n        at org.apache.hive.service.rpc.thrift.TCLIService$Processor$OpenSession.getResult(TCLIService.java:1482)\r\n        at org.apache.thrift.ProcessFunction.process(ProcessFunction.java:38)\r\n        at org.apache.thrift.TBaseProcessor.process(TBaseProcessor.java:39)\r\n        at org.apache.hive.service.auth.TSetIpAddressProcessor.process(TSetIpAddressProcessor.java:53)\r\n        at org.apache.thrift.server.TThreadPoolServer$WorkerProcess.run(TThreadPoolServer.java:310)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n        at java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.submarine.spark.security.SparkAccessControlException: Permission denied: user [tools] does not have [USE] privilege on [spark_catalog]\r\n        at org.apache.submarine.spark.security.RangerSparkAuthorizer$.$anonfun$checkPrivileges$3(RangerSparkAuthorizer.scala:126)\r\n        at org.apache.submarine.spark.security.RangerSparkAuthorizer$.$anonfun$checkPrivileges$3$adapted(RangerSparkAuthorizer.scala:100)\r\n        at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)\r\n        at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)\r\n        at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)\r\n        at org.apache.submarine.spark.security.RangerSparkAuthorizer$.checkPrivileges(RangerSparkAuthorizer.scala:100)\r\n        at org.apache.spark.sql.catalyst.optimizer.SubmarineSparkRangerAuthorizationExtension.apply(SubmarineSparkRangerAuthorizationExtension.scala:65)\r\n        at org.apache.spark.sql.catalyst.optimizer.SubmarineSparkRangerAuthorizationExtension.apply(SubmarineSparkRangerAuthorizationExtension.scala:40)\r\n        at org.apache.spark.sql.catalyst.rules.RuleExecutor.$anonfun$execute$2(RuleExecutor.scala:216)\r\n        at scala.collection.LinearSeqOptimized.foldLeft(LinearSeqOptimized.scala:126)\r\n        at scala.collection.LinearSeqOptimized.foldLeft$(LinearSeqOptimized.scala:122)\r\n        at scala.collection.immutable.List.foldLeft(List.scala:89)\r\n        at org.apache.spark.sql.catalyst.rules.RuleExecutor.$anonfun$execute$1(RuleExecutor.scala:213)\r\n        at org.apache.spark.sql.catalyst.rules.RuleExecutor.$anonfun$execute$1$adapted(RuleExecutor.scala:205)\r\n        at scala.collection.immutable.List.foreach(List.scala:392)\r\n        at org.apache.spark.sql.catalyst.rules.RuleExecutor.execute(RuleExecutor.scala:205)\r\n        at org.apache.spark.sql.catalyst.rules.RuleExecutor.$anonfun$executeAndTrack$1(RuleExecutor.scala:183)\r\n        at org.apache.spark.sql.catalyst.QueryPlanningTracker$.withTracker(QueryPlanningTracker.scala:88)\r\n        at org.apache.spark.sql.catalyst.rules.RuleExecutor.executeAndTrack(RuleExecutor.scala:183)\r\n        at org.apache.spark.sql.execution.QueryExecution.$anonfun$optimizedPlan$1(QueryExecution.scala:87)\r\n        at org.apache.spark.sql.catalyst.QueryPlanningTracker.measurePhase(QueryPlanningTracker.scala:111)\r\n        at org.apache.spark.sql.execution.QueryExecution.$anonfun$executePhase$1(QueryExecution.scala:143)\r\n        at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:772)\r\n        at org.apache.spark.sql.execution.QueryExecution.executePhase(QueryExecution.scala:143)\r\n        at org.apache.spark.sql.execution.QueryExecution.optimizedPlan$lzycompute(QueryExecution.scala:84)\r\n        at org.apache.spark.sql.execution.QueryExecution.optimizedPlan(QueryExecution.scala:84)\r\n        at org.apache.spark.sql.execution.QueryExecution.assertOptimized(QueryExecution.scala:95)\r\n        at org.apache.spark.sql.execution.QueryExecution.executedPlan$lzycompute(QueryExecution.scala:113)\r\n        at org.apache.spark.sql.execution.QueryExecution.executedPlan(QueryExecution.scala:110)\r\n        at org.apache.spark.sql.execution.QueryExecution.$anonfun$simpleString$2(QueryExecution.scala:161)\r\n        at org.apache.spark.sql.execution.ExplainUtils$.processPlan(ExplainUtils.scala:115)\r\n        at org.apache.spark.sql.execution.QueryExecution.simpleString(QueryExecution.scala:161)\r\n        at org.apache.spark.sql.execution.QueryExecution.org$apache$spark$sql$execution$QueryExecution$$explainString(QueryExecution.scala:206)\r\n        at org.apache.spark.sql.execution.QueryExecution.explainString(QueryExecution.scala:175)\r\n        at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$5(SQLExecution.scala:98)\r\n        at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:163)\r\n        at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:90)\r\n        at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:772)\r\n        at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:64)\r\n        at org.apache.spark.sql.Dataset.withAction(Dataset.scala:3685)\r\n        at org.apache.spark.sql.Dataset.<init>(Dataset.scala:228)\r\n        at org.apache.spark.sql.Dataset$.$anonfun$ofRows$2(Dataset.scala:99)\r\n        at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:772)\r\n        at org.apache.spark.sql.Dataset$.ofRows(Dataset.scala:96)\r\n        at org.apache.spark.sql.SparkSession.$anonfun$sql$1(SparkSession.scala:615)\r\n        at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:772)\r\n        at org.apache.spark.sql.SparkSession.sql(SparkSession.scala:610)\r\n        at org.apache.spark.sql.SQLContext.sql(SQLContext.scala:650)\r\n        at org.apache.spark.sql.hive.thriftserver.SparkSQLSessionManager.openSession(SparkSQLSessionManager.scala:73)\r\n        ... 12 more\r\n21/03/11 22:08:19 ERROR server.TThreadPoolServer: Thrift error occurred during processing of message.\r\norg.apache.thrift.transport.TTransportException\r\n        at org.apache.thrift.transport.TIOStreamTransport.read(TIOStreamTransport.java:132)\r\n        at org.apache.thrift.transport.TTransport.readAll(TTransport.java:86)\r\n        at org.apache.thrift.transport.TSaslTransport.readLength(TSaslTransport.java:374)\r\n        at org.apache.thrift.transport.TSaslTransport.readFrame(TSaslTransport.java:451)\r\n        at org.apache.thrift.transport.TSaslTransport.read(TSaslTransport.java:433)\r\n        at org.apache.thrift.transport.TSaslServerTransport.read(TSaslServerTransport.java:43)\r\n        at org.apache.thrift.transport.TTransport.readAll(TTransport.java:86)\r\n        at org.apache.thrift.protocol.TBinaryProtocol.readAll(TBinaryProtocol.java:425)\r\n        at org.apache.thrift.protocol.TBinaryProtocol.readI32(TBinaryProtocol.java:321)\r\n        at org.apache.thrift.protocol.TBinaryProtocol.readMessageBegin(TBinaryProtocol.java:225)\r\n        at org.apache.thrift.TBaseProcessor.process(TBaseProcessor.java:27)\r\n        at org.apache.hive.service.auth.TSetIpAddressProcessor.process(TSetIpAddressProcessor.java:53)\r\n        at org.apache.thrift.server.TThreadPoolServer$WorkerProcess.run(TThreadPoolServer.java:310)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n        at java.lang.Thread.run(Thread.java:748)\r\n```",
        "closed_by": {
            "login": "xunliu",
            "id": 3677382,
            "node_id": "MDQ6VXNlcjM2NzczODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3677382?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xunliu",
            "html_url": "https://github.com/xunliu",
            "followers_url": "https://api.github.com/users/xunliu/followers",
            "following_url": "https://api.github.com/users/xunliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/xunliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xunliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xunliu/subscriptions",
            "organizations_url": "https://api.github.com/users/xunliu/orgs",
            "repos_url": "https://api.github.com/users/xunliu/repos",
            "events_url": "https://api.github.com/users/xunliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xunliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/apache/submarine/issues/533/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/submarine/issues/533/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/apache/submarine/issues/528",
        "repository_url": "https://api.github.com/repos/apache/submarine",
        "labels_url": "https://api.github.com/repos/apache/submarine/issues/528/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/submarine/issues/528/comments",
        "events_url": "https://api.github.com/repos/apache/submarine/issues/528/events",
        "html_url": "https://github.com/apache/submarine/issues/528",
        "id": 820638711,
        "node_id": "MDU6SXNzdWU4MjA2Mzg3MTE=",
        "number": 528,
        "title": "URI is not absolute",
        "user": {
            "login": "XuankuF",
            "id": 28747492,
            "node_id": "MDQ6VXNlcjI4NzQ3NDky",
            "avatar_url": "https://avatars.githubusercontent.com/u/28747492?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/XuankuF",
            "html_url": "https://github.com/XuankuF",
            "followers_url": "https://api.github.com/users/XuankuF/followers",
            "following_url": "https://api.github.com/users/XuankuF/following{/other_user}",
            "gists_url": "https://api.github.com/users/XuankuF/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/XuankuF/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/XuankuF/subscriptions",
            "organizations_url": "https://api.github.com/users/XuankuF/orgs",
            "repos_url": "https://api.github.com/users/XuankuF/repos",
            "events_url": "https://api.github.com/users/XuankuF/events{/privacy}",
            "received_events_url": "https://api.github.com/users/XuankuF/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2021-03-03T03:41:05Z",
        "updated_at": "2021-03-12T03:08:57Z",
        "closed_at": "2021-03-12T03:08:57Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I meet two errors.\r\n\r\n- First, `URI is not absolute`\r\n\r\nI use `beeline` to connect and return below error log but does not affect the use but does not affect the use.\r\n```\r\n21/03/02 22:31:22 INFO policyengine.RangerPolicyRepository: This policy engine contains 1 policy evaluators\r\n21/03/02 22:31:23 ERROR contextenricher.RangerTagEnricher$RangerTagRefresher: Encountered unexpected exception. Ignoring\r\nsubmarine_spark_ranger_project.com.sun.jersey.api.client.ClientHandlerException: java.lang.IllegalArgumentException: URI is not absolute\r\n        at submarine_spark_ranger_project.com.sun.jersey.client.urlconnection.URLConnectionClientHandler.handle(URLConnectionClientHandler.java:155)\r\n        at submarine_spark_ranger_project.com.sun.jersey.api.client.Client.handle(Client.java:652)\r\n        at submarine_spark_ranger_project.com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)\r\n        at submarine_spark_ranger_project.com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)\r\n        at submarine_spark_ranger_project.com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)\r\n        at org.apache.ranger.admin.client.RangerAdminRESTClient.getServiceTagsIfUpdated(RangerAdminRESTClient.java:311)\r\n        at org.apache.ranger.plugin.contextenricher.RangerAdminTagRetriever.retrieveTags(RangerAdminTagRetriever.java:57)\r\n        at org.apache.ranger.plugin.contextenricher.RangerTagEnricher$RangerTagRefresher.populateTags(RangerTagEnricher.java:606)\r\n        at org.apache.ranger.plugin.contextenricher.RangerTagEnricher$RangerTagRefresher.access$000(RangerTagEnricher.java:524)\r\n        at org.apache.ranger.plugin.contextenricher.RangerTagEnricher.init(RangerTagEnricher.java:127)\r\n        at org.apache.ranger.plugin.policyengine.RangerPolicyRepository.buildContextEnricher(RangerPolicyRepository.java:783)\r\n        at org.apache.ranger.plugin.policyengine.RangerPolicyRepository.init(RangerPolicyRepository.java:712)\r\n        at org.apache.ranger.plugin.policyengine.RangerPolicyRepository.<init>(RangerPolicyRepository.java:187)\r\n        at org.apache.ranger.plugin.policyengine.RangerPolicyEngineImpl.<init>(RangerPolicyEngineImpl.java:128)\r\n        at org.apache.ranger.plugin.service.RangerBasePlugin.setPolicies(RangerBasePlugin.java:264)\r\n        at org.apache.ranger.plugin.util.PolicyRefresher.loadPolicy(PolicyRefresher.java:222)\r\n        at org.apache.ranger.plugin.util.PolicyRefresher.startRefresher(PolicyRefresher.java:149)\r\n        at org.apache.ranger.plugin.service.RangerBasePlugin.init(RangerBasePlugin.java:222)\r\n        at org.apache.submarine.spark.security.RangerSparkPlugin$.init(RangerSparkPlugin.scala:42)\r\n        at org.apache.submarine.spark.security.RangerSparkPlugin$.<init>(RangerSparkPlugin.scala:57)\r\n        at org.apache.submarine.spark.security.RangerSparkPlugin$.<clinit>(RangerSparkPlugin.scala)\r\n        at org.apache.submarine.spark.security.RangerSparkAuthorizer$.org$apache$submarine$spark$security$RangerSparkAuthorizer$$getSparkResource(RangerSparkAuthorizer.scala:257)\r\n        at org.apache.submarine.spark.security.RangerSparkAuthorizer$$anonfun$addAccessRequest$1$1.apply(RangerSparkAuthorizer.scala:75)\r\n        at org.apache.submarine.spark.security.RangerSparkAuthorizer$$anonfun$addAccessRequest$1$1.apply(RangerSparkAuthorizer.scala:74)\r\n        at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)\r\n        at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)\r\n        at org.apache.submarine.spark.security.RangerSparkAuthorizer$.addAccessRequest$1(RangerSparkAuthorizer.scala:74)\r\n        at org.apache.submarine.spark.security.RangerSparkAuthorizer$.checkPrivileges(RangerSparkAuthorizer.scala:98)\r\n        at org.apache.spark.sql.catalyst.optimizer.SubmarineSparkRangerAuthorizationExtension.apply(SubmarineSparkRangerAuthorizationExtension.scala:65)\r\n        at org.apache.spark.sql.catalyst.optimizer.SubmarineSparkRangerAuthorizationExtension.apply(SubmarineSparkRangerAuthorizationExtension.scala:40)\r\n        at org.apache.spark.sql.catalyst.rules.RuleExecutor$$anonfun$execute$1$$anonfun$apply$1.apply(RuleExecutor.scala:87)\r\n        at org.apache.spark.sql.catalyst.rules.RuleExecutor$$anonfun$execute$1$$anonfun$apply$1.apply(RuleExecutor.scala:84)\r\n        at scala.collection.LinearSeqOptimized$class.foldLeft(LinearSeqOptimized.scala:124)\r\n        at scala.collection.immutable.List.foldLeft(List.scala:84)\r\n        at org.apache.spark.sql.catalyst.rules.RuleExecutor$$anonfun$execute$1.apply(RuleExecutor.scala:84)\r\n        at org.apache.spark.sql.catalyst.rules.RuleExecutor$$anonfun$execute$1.apply(RuleExecutor.scala:76)\r\n        at scala.collection.immutable.List.foreach(List.scala:392)\r\n        at org.apache.spark.sql.catalyst.rules.RuleExecutor.execute(RuleExecutor.scala:76)\r\n        at org.apache.spark.sql.execution.QueryExecution.optimizedPlan$lzycompute(QueryExecution.scala:67)\r\n        at org.apache.spark.sql.execution.QueryExecution.optimizedPlan(QueryExecution.scala:67)\r\n        at org.apache.spark.sql.execution.QueryExecution.sparkPlan$lzycompute(QueryExecution.scala:73)\r\n        at org.apache.spark.sql.execution.QueryExecution.sparkPlan(QueryExecution.scala:69)\r\n        at org.apache.spark.sql.execution.QueryExecution.executedPlan$lzycompute(QueryExecution.scala:78)\r\n        at org.apache.spark.sql.execution.QueryExecution.executedPlan(QueryExecution.scala:78)\r\n        at org.apache.spark.sql.Dataset.org$apache$spark$sql$Dataset$$withAction(Dataset.scala:3365)\r\n        at org.apache.spark.sql.Dataset.<init>(Dataset.scala:194)\r\n        at org.apache.spark.sql.Dataset$.ofRows(Dataset.scala:79)\r\n        at org.apache.spark.sql.SparkSession.sql(SparkSession.scala:643)\r\n        at org.apache.spark.sql.SQLContext.sql(SQLContext.scala:694)\r\n        at org.apache.spark.sql.hive.thriftserver.SparkSQLSessionManager.openSession(SparkSQLSessionManager.scala:68)\r\n        at org.apache.hive.service.cli.CLIService.openSessionWithImpersonation(CLIService.java:202)\r\n        at org.apache.hive.service.cli.thrift.ThriftCLIService.getSessionHandle(ThriftCLIService.java:351)\r\n        at org.apache.hive.service.cli.thrift.ThriftCLIService.OpenSession(ThriftCLIService.java:246)\r\n        at org.apache.hive.service.cli.thrift.TCLIService$Processor$OpenSession.getResult(TCLIService.java:1253)\r\n        at org.apache.hive.service.cli.thrift.TCLIService$Processor$OpenSession.getResult(TCLIService.java:1238)\r\n        at org.apache.thrift.ProcessFunction.process(ProcessFunction.java:39)\r\n        at org.apache.thrift.TBaseProcessor.process(TBaseProcessor.java:39)\r\n        at org.apache.hive.service.auth.TSetIpAddressProcessor.process(TSetIpAddressProcessor.java:53)\r\n        at org.apache.thrift.server.TThreadPoolServer$WorkerProcess.run(TThreadPoolServer.java:286)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n        at java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.lang.IllegalArgumentException: URI is not absolute\r\n        at java.net.URI.toURL(URI.java:1088)\r\n        at submarine_spark_ranger_project.com.sun.jersey.client.urlconnection.URLConnectionClientHandler._invoke(URLConnectionClientHandler.java:163)\r\n        at submarine_spark_ranger_project.com.sun.jersey.client.urlconnection.URLConnectionClientHandler.handle(URLConnectionClientHandler.java:153)\r\n        ... 61 more\r\n21/03/02 22:31:23 INFO util.RangerResourceTrie: builderThreadCount is set to [1]\r\n21/03/02 22:31:23 INFO resourcetrie.init: builderThreadCount is set to [1]\r\n21/03/02 22:31:23 INFO service.RangerBasePlugin: Policies will NOT be reordered based on number of evaluations\r\n21/03/02 22:31:23 INFO security.RangerSparkPlugin$: Policy cache directory successfully set to /opt/spark/spark-2.4.7-bin-hadoop2.6/policycache\r\n```\r\n- Second, `java.lang.ClassNotFoundException: org.apache.ranger.authorization.hive.authorizer.RangerHiveAuthorizerFactory`\r\nI execute sparksql like `select * from table limit 3`, and return an error. But when I did it the second time, it was fine and return the correct result:\r\n\r\n```\r\n21/03/02 22:34:14 ERROR session.SessionState: Error setting up authorization: java.lang.ClassNotFoundException: org.apache.ranger.authorization.hive.authorizer.RangerHiveAuthorizerFactory\r\norg.apache.hadoop.hive.ql.metadata.HiveException: java.lang.ClassNotFoundException: org.apache.ranger.authorization.hive.authorizer.RangerHiveAuthorizerFactory\r\n        at org.apache.hadoop.hive.ql.metadata.HiveUtils.getAuthorizeProviderManager(HiveUtils.java:391)\r\n        at org.apache.hadoop.hive.ql.session.SessionState.setupAuth(SessionState.java:720)\r\n        at org.apache.hadoop.hive.ql.session.SessionState.getAuthenticator(SessionState.java:1391)\r\n        at org.apache.hadoop.hive.ql.session.SessionState.getUserFromAuthenticator(SessionState.java:984)\r\n        at org.apache.hadoop.hive.ql.metadata.Table.getEmptyTable(Table.java:177)\r\n        at org.apache.hadoop.hive.ql.metadata.Table.<init>(Table.java:119)\r\n        at org.apache.spark.sql.hive.client.HiveClientImpl$.toHiveTable(HiveClientImpl.scala:922)\r\n        at org.apache.spark.sql.hive.client.HiveClientImpl$$anonfun$getPartitions$1.apply(HiveClientImpl.scala:665)\r\n        at org.apache.spark.sql.hive.client.HiveClientImpl$$anonfun$getPartitions$1.apply(HiveClientImpl.scala:664)\r\n        at org.apache.spark.sql.hive.client.HiveClientImpl$$anonfun$withHiveState$1.apply(HiveClientImpl.scala:277)\r\n        at org.apache.spark.sql.hive.client.HiveClientImpl.liftedTree1$1(HiveClientImpl.scala:215)\r\n        at org.apache.spark.sql.hive.client.HiveClientImpl.retryLocked(HiveClientImpl.scala:214)\r\n        at org.apache.spark.sql.hive.client.HiveClientImpl.withHiveState(HiveClientImpl.scala:260)\r\n        at org.apache.spark.sql.hive.client.HiveClientImpl.getPartitions(HiveClientImpl.scala:664)\r\n        at org.apache.spark.sql.hive.client.HiveClient$class.getPartitions(HiveClient.scala:210)\r\n        at org.apache.spark.sql.hive.client.HiveClientImpl.getPartitions(HiveClientImpl.scala:84)\r\n        at org.apache.spark.sql.hive.HiveExternalCatalog$$anonfun$listPartitions$1.apply(HiveExternalCatalog.scala:1195)\r\n        at org.apache.spark.sql.hive.HiveExternalCatalog$$anonfun$listPartitions$1.apply(HiveExternalCatalog.scala:1193)\r\n        at org.apache.spark.sql.hive.HiveExternalCatalog.withClient(HiveExternalCatalog.scala:97)\r\n        at org.apache.spark.sql.hive.HiveExternalCatalog.listPartitions(HiveExternalCatalog.scala:1193)\r\n        at org.apache.spark.sql.catalyst.catalog.ExternalCatalogWithListener.listPartitions(ExternalCatalogWithListener.scala:246)\r\n        at org.apache.spark.sql.catalyst.catalog.SessionCatalog.listPartitions(SessionCatalog.scala:948)\r\n        at org.apache.spark.sql.hive.execution.HiveTableScanExec.rawPartitions$lzycompute(HiveTableScanExec.scala:178)\r\n        at org.apache.spark.sql.hive.execution.HiveTableScanExec.rawPartitions(HiveTableScanExec.scala:166)\r\n        at org.apache.spark.sql.hive.execution.HiveTableScanExec$$anonfun$11.apply(HiveTableScanExec.scala:192)\r\n        at org.apache.spark.sql.hive.execution.HiveTableScanExec$$anonfun$11.apply(HiveTableScanExec.scala:192)\r\n        at org.apache.spark.util.Utils$.withDummyCallSite(Utils.scala:2470)\r\n        at org.apache.spark.sql.hive.execution.HiveTableScanExec.doExecute(HiveTableScanExec.scala:191)\r\n        at org.apache.spark.sql.execution.SparkPlan$$anonfun$execute$1.apply(SparkPlan.scala:131)\r\n        at org.apache.spark.sql.execution.SparkPlan$$anonfun$execute$1.apply(SparkPlan.scala:127)\r\n        at org.apache.spark.sql.execution.SparkPlan$$anonfun$executeQuery$1.apply(SparkPlan.scala:155)\r\n        at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)\r\n        at org.apache.spark.sql.execution.SparkPlan.executeQuery(SparkPlan.scala:152)\r\n        at org.apache.spark.sql.execution.SparkPlan.execute(SparkPlan.scala:127)\r\n        at org.apache.spark.sql.execution.SparkPlan.getByteArrayRdd(SparkPlan.scala:247)\r\n        at org.apache.spark.sql.execution.SparkPlan.executeTake(SparkPlan.scala:339)\r\n        at org.apache.spark.sql.execution.CollectLimitExec.executeCollect(limit.scala:38)\r\n        at org.apache.spark.sql.Dataset.org$apache$spark$sql$Dataset$$collectFromPlan(Dataset.scala:3389)\r\n        at org.apache.spark.sql.Dataset$$anonfun$collect$1.apply(Dataset.scala:2788)\r\n        at org.apache.spark.sql.Dataset$$anonfun$collect$1.apply(Dataset.scala:2788)\r\n        at org.apache.spark.sql.Dataset$$anonfun$52.apply(Dataset.scala:3370)\r\n        at org.apache.spark.sql.execution.SQLExecution$$anonfun$withNewExecutionId$1.apply(SQLExecution.scala:80)\r\n        at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:127)\r\n        at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:75)\r\n        at org.apache.spark.sql.Dataset.org$apache$spark$sql$Dataset$$withAction(Dataset.scala:3369)\r\n        at org.apache.spark.sql.Dataset.collect(Dataset.scala:2788)\r\n        at org.apache.spark.sql.hive.thriftserver.SparkExecuteStatementOperation.org$apache$spark$sql$hive$thriftserver$SparkExecuteStatementOperation$$execute(SparkExecuteStatementOperation.scala:246)\r\n        at org.apache.spark.sql.hive.thriftserver.SparkExecuteStatementOperation$$anon$1$$anon$2.run(SparkExecuteStatementOperation.scala:175)\r\n        at org.apache.spark.sql.hive.thriftserver.SparkExecuteStatementOperation$$anon$1$$anon$2.run(SparkExecuteStatementOperation.scala:171)\r\n        at java.security.AccessController.doPrivileged(Native Method)\r\n        at javax.security.auth.Subject.doAs(Subject.java:422)\r\n        at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1692)\r\n        at org.apache.spark.sql.hive.thriftserver.SparkExecuteStatementOperation$$anon$1.run(SparkExecuteStatementOperation.scala:185)\r\n        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n        at java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n        at java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.lang.ClassNotFoundException: org.apache.ranger.authorization.hive.authorizer.RangerHiveAuthorizerFactory\r\n        at java.net.URLClassLoader.findClass(URLClassLoader.java:382)\r\n        at java.lang.ClassLoader.loadClass(ClassLoader.java:418)\r\n        at java.lang.ClassLoader.loadClass(ClassLoader.java:351)\r\n        at java.lang.Class.forName0(Native Method)\r\n        at java.lang.Class.forName(Class.java:348)\r\n        at org.apache.hadoop.hive.ql.metadata.HiveUtils.getAuthorizeProviderManager(HiveUtils.java:381)\r\n        ... 57 more\r\n```\r\n",
        "closed_by": {
            "login": "XuankuF",
            "id": 28747492,
            "node_id": "MDQ6VXNlcjI4NzQ3NDky",
            "avatar_url": "https://avatars.githubusercontent.com/u/28747492?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/XuankuF",
            "html_url": "https://github.com/XuankuF",
            "followers_url": "https://api.github.com/users/XuankuF/followers",
            "following_url": "https://api.github.com/users/XuankuF/following{/other_user}",
            "gists_url": "https://api.github.com/users/XuankuF/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/XuankuF/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/XuankuF/subscriptions",
            "organizations_url": "https://api.github.com/users/XuankuF/orgs",
            "repos_url": "https://api.github.com/users/XuankuF/repos",
            "events_url": "https://api.github.com/users/XuankuF/events{/privacy}",
            "received_events_url": "https://api.github.com/users/XuankuF/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/apache/submarine/issues/528/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/submarine/issues/528/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/apache/submarine/issues/478",
        "repository_url": "https://api.github.com/repos/apache/submarine",
        "labels_url": "https://api.github.com/repos/apache/submarine/issues/478/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/submarine/issues/478/comments",
        "events_url": "https://api.github.com/repos/apache/submarine/issues/478/events",
        "html_url": "https://github.com/apache/submarine/issues/478",
        "id": 760164211,
        "node_id": "MDU6SXNzdWU3NjAxNjQyMTE=",
        "number": 478,
        "title": "There is a vulnerability in  SnakeYAML 1.16,upgrade recommended",
        "user": {
            "login": "QiAnXinCodeSafe",
            "id": 39950310,
            "node_id": "MDQ6VXNlcjM5OTUwMzEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/39950310?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/QiAnXinCodeSafe",
            "html_url": "https://github.com/QiAnXinCodeSafe",
            "followers_url": "https://api.github.com/users/QiAnXinCodeSafe/followers",
            "following_url": "https://api.github.com/users/QiAnXinCodeSafe/following{/other_user}",
            "gists_url": "https://api.github.com/users/QiAnXinCodeSafe/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/QiAnXinCodeSafe/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/QiAnXinCodeSafe/subscriptions",
            "organizations_url": "https://api.github.com/users/QiAnXinCodeSafe/orgs",
            "repos_url": "https://api.github.com/users/QiAnXinCodeSafe/repos",
            "events_url": "https://api.github.com/users/QiAnXinCodeSafe/events{/privacy}",
            "received_events_url": "https://api.github.com/users/QiAnXinCodeSafe/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1644464617,
                "node_id": "MDU6TGFiZWwxNjQ0NDY0NjE3",
                "url": "https://api.github.com/repos/apache/submarine/labels/dependencies",
                "name": "dependencies",
                "color": "0366d6",
                "default": false,
                "description": "Pull requests that update a dependency file"
            }
        ],
        "state": "open",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-12-09T09:33:26Z",
        "updated_at": "2020-12-25T16:21:53Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "https://github.com/apache/submarine/blob/3041ef26ad04c0bddd2257a28694aa4e2b4cc837/pom.xml#L100\r\n\r\nCVE-2017-18640\r\n\r\nRecommended upgrade version\uff1a\r\n\r\n1.26",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/apache/submarine/issues/478/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/submarine/issues/478/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/apache/submarine/issues/477",
        "repository_url": "https://api.github.com/repos/apache/submarine",
        "labels_url": "https://api.github.com/repos/apache/submarine/issues/477/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/submarine/issues/477/comments",
        "events_url": "https://api.github.com/repos/apache/submarine/issues/477/events",
        "html_url": "https://github.com/apache/submarine/issues/477",
        "id": 760162846,
        "node_id": "MDU6SXNzdWU3NjAxNjI4NDY=",
        "number": 477,
        "title": "There is a vulnerability in MySQL Connector/J 5.1.39,upgrade recommended",
        "user": {
            "login": "QiAnXinCodeSafe",
            "id": 39950310,
            "node_id": "MDQ6VXNlcjM5OTUwMzEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/39950310?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/QiAnXinCodeSafe",
            "html_url": "https://github.com/QiAnXinCodeSafe",
            "followers_url": "https://api.github.com/users/QiAnXinCodeSafe/followers",
            "following_url": "https://api.github.com/users/QiAnXinCodeSafe/following{/other_user}",
            "gists_url": "https://api.github.com/users/QiAnXinCodeSafe/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/QiAnXinCodeSafe/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/QiAnXinCodeSafe/subscriptions",
            "organizations_url": "https://api.github.com/users/QiAnXinCodeSafe/orgs",
            "repos_url": "https://api.github.com/users/QiAnXinCodeSafe/repos",
            "events_url": "https://api.github.com/users/QiAnXinCodeSafe/events{/privacy}",
            "received_events_url": "https://api.github.com/users/QiAnXinCodeSafe/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1644464617,
                "node_id": "MDU6TGFiZWwxNjQ0NDY0NjE3",
                "url": "https://api.github.com/repos/apache/submarine/labels/dependencies",
                "name": "dependencies",
                "color": "0366d6",
                "default": false,
                "description": "Pull requests that update a dependency file"
            }
        ],
        "state": "open",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-12-09T09:31:29Z",
        "updated_at": "2020-12-25T16:21:53Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "https://github.com/apache/submarine/blob/3041ef26ad04c0bddd2257a28694aa4e2b4cc837/pom.xml#L85\r\n\r\nCVE-2017-3523 CVE-2018-3258 CVE-2017-3586 \r\n\r\nRecommended upgrade version\uff1a\r\n8.0.20",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/apache/submarine/issues/477/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/submarine/issues/477/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/apache/submarine/issues/476",
        "repository_url": "https://api.github.com/repos/apache/submarine",
        "labels_url": "https://api.github.com/repos/apache/submarine/issues/476/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/submarine/issues/476/comments",
        "events_url": "https://api.github.com/repos/apache/submarine/issues/476/events",
        "html_url": "https://github.com/apache/submarine/issues/476",
        "id": 760161381,
        "node_id": "MDU6SXNzdWU3NjAxNjEzODE=",
        "number": 476,
        "title": "There is a vulnerability in Jetty: Java based HTTP/1.x, HTTP/2, Servlet, WebSocket Server 9.4.18.v20190429,upgrade recommended",
        "user": {
            "login": "QiAnXinCodeSafe",
            "id": 39950310,
            "node_id": "MDQ6VXNlcjM5OTUwMzEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/39950310?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/QiAnXinCodeSafe",
            "html_url": "https://github.com/QiAnXinCodeSafe",
            "followers_url": "https://api.github.com/users/QiAnXinCodeSafe/followers",
            "following_url": "https://api.github.com/users/QiAnXinCodeSafe/following{/other_user}",
            "gists_url": "https://api.github.com/users/QiAnXinCodeSafe/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/QiAnXinCodeSafe/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/QiAnXinCodeSafe/subscriptions",
            "organizations_url": "https://api.github.com/users/QiAnXinCodeSafe/orgs",
            "repos_url": "https://api.github.com/users/QiAnXinCodeSafe/repos",
            "events_url": "https://api.github.com/users/QiAnXinCodeSafe/events{/privacy}",
            "received_events_url": "https://api.github.com/users/QiAnXinCodeSafe/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1644464617,
                "node_id": "MDU6TGFiZWwxNjQ0NDY0NjE3",
                "url": "https://api.github.com/repos/apache/submarine/labels/dependencies",
                "name": "dependencies",
                "color": "0366d6",
                "default": false,
                "description": "Pull requests that update a dependency file"
            }
        ],
        "state": "open",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-12-09T09:29:34Z",
        "updated_at": "2020-12-25T16:21:53Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "https://github.com/apache/submarine/blob/3041ef26ad04c0bddd2257a28694aa4e2b4cc837/pom.xml#L72\r\n\r\nCVE-2020-27216\r\n\r\nRecommended upgrade version\uff1a\r\n9.4.35.v20201120",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/apache/submarine/issues/476/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/submarine/issues/476/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/apache/submarine/issues/475",
        "repository_url": "https://api.github.com/repos/apache/submarine",
        "labels_url": "https://api.github.com/repos/apache/submarine/issues/475/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/submarine/issues/475/comments",
        "events_url": "https://api.github.com/repos/apache/submarine/issues/475/events",
        "html_url": "https://github.com/apache/submarine/issues/475",
        "id": 760159418,
        "node_id": "MDU6SXNzdWU3NjAxNTk0MTg=",
        "number": 475,
        "title": "There is a vulnerability in Apache Spark  2.3.4,upgrade recommended",
        "user": {
            "login": "QiAnXinCodeSafe",
            "id": 39950310,
            "node_id": "MDQ6VXNlcjM5OTUwMzEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/39950310?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/QiAnXinCodeSafe",
            "html_url": "https://github.com/QiAnXinCodeSafe",
            "followers_url": "https://api.github.com/users/QiAnXinCodeSafe/followers",
            "following_url": "https://api.github.com/users/QiAnXinCodeSafe/following{/other_user}",
            "gists_url": "https://api.github.com/users/QiAnXinCodeSafe/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/QiAnXinCodeSafe/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/QiAnXinCodeSafe/subscriptions",
            "organizations_url": "https://api.github.com/users/QiAnXinCodeSafe/orgs",
            "repos_url": "https://api.github.com/users/QiAnXinCodeSafe/repos",
            "events_url": "https://api.github.com/users/QiAnXinCodeSafe/events{/privacy}",
            "received_events_url": "https://api.github.com/users/QiAnXinCodeSafe/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1644464617,
                "node_id": "MDU6TGFiZWwxNjQ0NDY0NjE3",
                "url": "https://api.github.com/repos/apache/submarine/labels/dependencies",
                "name": "dependencies",
                "color": "0366d6",
                "default": false,
                "description": "Pull requests that update a dependency file"
            }
        ],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-12-09T09:26:54Z",
        "updated_at": "2021-02-24T03:10:11Z",
        "closed_at": "2021-02-24T03:10:11Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "https://github.com/apache/submarine/blob/3041ef26ad04c0bddd2257a28694aa4e2b4cc837/submarine-security/spark-security/pom.xml#L54\r\n\r\nCVE-2020-9480\r\n\r\nRecommended upgrade version\uff1a\r\n2.4.0.7.1.1.2007-6\r\n",
        "closed_by": {
            "login": "asfgit",
            "id": 1341245,
            "node_id": "MDQ6VXNlcjEzNDEyNDU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1341245?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/asfgit",
            "html_url": "https://github.com/asfgit",
            "followers_url": "https://api.github.com/users/asfgit/followers",
            "following_url": "https://api.github.com/users/asfgit/following{/other_user}",
            "gists_url": "https://api.github.com/users/asfgit/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/asfgit/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/asfgit/subscriptions",
            "organizations_url": "https://api.github.com/users/asfgit/orgs",
            "repos_url": "https://api.github.com/users/asfgit/repos",
            "events_url": "https://api.github.com/users/asfgit/events{/privacy}",
            "received_events_url": "https://api.github.com/users/asfgit/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/apache/submarine/issues/475/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/submarine/issues/475/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/apache/submarine/issues/474",
        "repository_url": "https://api.github.com/repos/apache/submarine",
        "labels_url": "https://api.github.com/repos/apache/submarine/issues/474/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/submarine/issues/474/comments",
        "events_url": "https://api.github.com/repos/apache/submarine/issues/474/events",
        "html_url": "https://github.com/apache/submarine/issues/474",
        "id": 760155296,
        "node_id": "MDU6SXNzdWU3NjAxNTUyOTY=",
        "number": 474,
        "title": "There is a vulnerability in Apache Solr 5.5.4,upgrade recommended",
        "user": {
            "login": "QiAnXinCodeSafe",
            "id": 39950310,
            "node_id": "MDQ6VXNlcjM5OTUwMzEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/39950310?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/QiAnXinCodeSafe",
            "html_url": "https://github.com/QiAnXinCodeSafe",
            "followers_url": "https://api.github.com/users/QiAnXinCodeSafe/followers",
            "following_url": "https://api.github.com/users/QiAnXinCodeSafe/following{/other_user}",
            "gists_url": "https://api.github.com/users/QiAnXinCodeSafe/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/QiAnXinCodeSafe/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/QiAnXinCodeSafe/subscriptions",
            "organizations_url": "https://api.github.com/users/QiAnXinCodeSafe/orgs",
            "repos_url": "https://api.github.com/users/QiAnXinCodeSafe/repos",
            "events_url": "https://api.github.com/users/QiAnXinCodeSafe/events{/privacy}",
            "received_events_url": "https://api.github.com/users/QiAnXinCodeSafe/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1644464617,
                "node_id": "MDU6TGFiZWwxNjQ0NDY0NjE3",
                "url": "https://api.github.com/repos/apache/submarine/labels/dependencies",
                "name": "dependencies",
                "color": "0366d6",
                "default": false,
                "description": "Pull requests that update a dependency file"
            }
        ],
        "state": "open",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-12-09T09:21:18Z",
        "updated_at": "2020-12-25T16:21:52Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "https://github.com/apache/submarine/blob/3041ef26ad04c0bddd2257a28694aa4e2b4cc837/submarine-security/spark-security/pom.xml#L53\r\n\r\nCVE-2019-0192 CVE-2017-3164 CVE-2019-0193 CVE-2019-17558 CVE-2020-13941\r\nRecommended upgrade version\uff1a\r\n8.4.1.7.1.3.3-3",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/apache/submarine/issues/474/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/submarine/issues/474/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/apache/submarine/issues/473",
        "repository_url": "https://api.github.com/repos/apache/submarine",
        "labels_url": "https://api.github.com/repos/apache/submarine/issues/473/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/submarine/issues/473/comments",
        "events_url": "https://api.github.com/repos/apache/submarine/issues/473/events",
        "html_url": "https://github.com/apache/submarine/issues/473",
        "id": 760152630,
        "node_id": "MDU6SXNzdWU3NjAxNTI2MzA=",
        "number": 473,
        "title": "here is a vulnerability in jackson-databind 1.9.13,upgrade recommended",
        "user": {
            "login": "QiAnXinCodeSafe",
            "id": 39950310,
            "node_id": "MDQ6VXNlcjM5OTUwMzEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/39950310?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/QiAnXinCodeSafe",
            "html_url": "https://github.com/QiAnXinCodeSafe",
            "followers_url": "https://api.github.com/users/QiAnXinCodeSafe/followers",
            "following_url": "https://api.github.com/users/QiAnXinCodeSafe/following{/other_user}",
            "gists_url": "https://api.github.com/users/QiAnXinCodeSafe/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/QiAnXinCodeSafe/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/QiAnXinCodeSafe/subscriptions",
            "organizations_url": "https://api.github.com/users/QiAnXinCodeSafe/orgs",
            "repos_url": "https://api.github.com/users/QiAnXinCodeSafe/repos",
            "events_url": "https://api.github.com/users/QiAnXinCodeSafe/events{/privacy}",
            "received_events_url": "https://api.github.com/users/QiAnXinCodeSafe/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1644464617,
                "node_id": "MDU6TGFiZWwxNjQ0NDY0NjE3",
                "url": "https://api.github.com/repos/apache/submarine/labels/dependencies",
                "name": "dependencies",
                "color": "0366d6",
                "default": false,
                "description": "Pull requests that update a dependency file"
            }
        ],
        "state": "open",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-12-09T09:17:43Z",
        "updated_at": "2020-12-25T16:21:52Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "https://github.com/apache/submarine/blob/3041ef26ad04c0bddd2257a28694aa4e2b4cc837/pom.xml#L120\r\n\r\nCVE-2017-15095 CVE-2018-7489 CVE-2019-14540 CVE-2019-16335 CVE-2019-17267 CVE-2019-14893 CVE-2018-5968 CVE-2019-10172 CVE-2018-1000873\r\nRecommended upgrade version\uff1a\r\n\r\n2.6.7.4\r\n",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/apache/submarine/issues/473/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/submarine/issues/473/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/apache/submarine/issues/472",
        "repository_url": "https://api.github.com/repos/apache/submarine",
        "labels_url": "https://api.github.com/repos/apache/submarine/issues/472/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/submarine/issues/472/comments",
        "events_url": "https://api.github.com/repos/apache/submarine/issues/472/events",
        "html_url": "https://github.com/apache/submarine/issues/472",
        "id": 759397285,
        "node_id": "MDU6SXNzdWU3NTkzOTcyODU=",
        "number": 472,
        "title": "can submarine build on arm64 machine now",
        "user": {
            "login": "hubblezzhu",
            "id": 14011375,
            "node_id": "MDQ6VXNlcjE0MDExMzc1",
            "avatar_url": "https://avatars.githubusercontent.com/u/14011375?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hubblezzhu",
            "html_url": "https://github.com/hubblezzhu",
            "followers_url": "https://api.github.com/users/hubblezzhu/followers",
            "following_url": "https://api.github.com/users/hubblezzhu/following{/other_user}",
            "gists_url": "https://api.github.com/users/hubblezzhu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hubblezzhu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hubblezzhu/subscriptions",
            "organizations_url": "https://api.github.com/users/hubblezzhu/orgs",
            "repos_url": "https://api.github.com/users/hubblezzhu/repos",
            "events_url": "https://api.github.com/users/hubblezzhu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hubblezzhu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1564932574,
                "node_id": "MDU6TGFiZWwxNTY0OTMyNTc0",
                "url": "https://api.github.com/repos/apache/submarine/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2020-12-08T12:15:10Z",
        "updated_at": "2020-12-31T13:38:04Z",
        "closed_at": "2020-12-31T13:38:04Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "hi, everyone\r\ncan submarine build on arm64 machine now?\r\n",
        "closed_by": {
            "login": "jiwq",
            "id": 1187607,
            "node_id": "MDQ6VXNlcjExODc2MDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1187607?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jiwq",
            "html_url": "https://github.com/jiwq",
            "followers_url": "https://api.github.com/users/jiwq/followers",
            "following_url": "https://api.github.com/users/jiwq/following{/other_user}",
            "gists_url": "https://api.github.com/users/jiwq/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jiwq/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jiwq/subscriptions",
            "organizations_url": "https://api.github.com/users/jiwq/orgs",
            "repos_url": "https://api.github.com/users/jiwq/repos",
            "events_url": "https://api.github.com/users/jiwq/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jiwq/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/apache/submarine/issues/472/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/submarine/issues/472/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/apache/submarine/issues/452",
        "repository_url": "https://api.github.com/repos/apache/submarine",
        "labels_url": "https://api.github.com/repos/apache/submarine/issues/452/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/submarine/issues/452/comments",
        "events_url": "https://api.github.com/repos/apache/submarine/issues/452/events",
        "html_url": "https://github.com/apache/submarine/issues/452",
        "id": 744363537,
        "node_id": "MDU6SXNzdWU3NDQzNjM1Mzc=",
        "number": 452,
        "title": "[Submarine Spark Security] if  spark read/write data from/to s3, spark security support ranger-hadoop-aws plugin?",
        "user": {
            "login": "cloudkey",
            "id": 5309285,
            "node_id": "MDQ6VXNlcjUzMDkyODU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5309285?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cloudkey",
            "html_url": "https://github.com/cloudkey",
            "followers_url": "https://api.github.com/users/cloudkey/followers",
            "following_url": "https://api.github.com/users/cloudkey/following{/other_user}",
            "gists_url": "https://api.github.com/users/cloudkey/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cloudkey/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cloudkey/subscriptions",
            "organizations_url": "https://api.github.com/users/cloudkey/orgs",
            "repos_url": "https://api.github.com/users/cloudkey/repos",
            "events_url": "https://api.github.com/users/cloudkey/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cloudkey/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1564932574,
                "node_id": "MDU6TGFiZWwxNTY0OTMyNTc0",
                "url": "https://api.github.com/repos/apache/submarine/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": true,
        "assignee": {
            "login": "yaooqinn",
            "id": 8326978,
            "node_id": "MDQ6VXNlcjgzMjY5Nzg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8326978?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yaooqinn",
            "html_url": "https://github.com/yaooqinn",
            "followers_url": "https://api.github.com/users/yaooqinn/followers",
            "following_url": "https://api.github.com/users/yaooqinn/following{/other_user}",
            "gists_url": "https://api.github.com/users/yaooqinn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yaooqinn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yaooqinn/subscriptions",
            "organizations_url": "https://api.github.com/users/yaooqinn/orgs",
            "repos_url": "https://api.github.com/users/yaooqinn/repos",
            "events_url": "https://api.github.com/users/yaooqinn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yaooqinn/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "yaooqinn",
                "id": 8326978,
                "node_id": "MDQ6VXNlcjgzMjY5Nzg=",
                "avatar_url": "https://avatars.githubusercontent.com/u/8326978?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/yaooqinn",
                "html_url": "https://github.com/yaooqinn",
                "followers_url": "https://api.github.com/users/yaooqinn/followers",
                "following_url": "https://api.github.com/users/yaooqinn/following{/other_user}",
                "gists_url": "https://api.github.com/users/yaooqinn/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/yaooqinn/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/yaooqinn/subscriptions",
                "organizations_url": "https://api.github.com/users/yaooqinn/orgs",
                "repos_url": "https://api.github.com/users/yaooqinn/repos",
                "events_url": "https://api.github.com/users/yaooqinn/events{/privacy}",
                "received_events_url": "https://api.github.com/users/yaooqinn/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2020-11-17T02:52:36Z",
        "updated_at": "2022-03-06T10:03:45Z",
        "closed_at": "2022-03-06T10:03:45Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "",
        "closed_by": {
            "login": "xunliu",
            "id": 3677382,
            "node_id": "MDQ6VXNlcjM2NzczODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3677382?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xunliu",
            "html_url": "https://github.com/xunliu",
            "followers_url": "https://api.github.com/users/xunliu/followers",
            "following_url": "https://api.github.com/users/xunliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/xunliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xunliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xunliu/subscriptions",
            "organizations_url": "https://api.github.com/users/xunliu/orgs",
            "repos_url": "https://api.github.com/users/xunliu/repos",
            "events_url": "https://api.github.com/users/xunliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xunliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/apache/submarine/issues/452/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/submarine/issues/452/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/apache/submarine/issues/442",
        "repository_url": "https://api.github.com/repos/apache/submarine",
        "labels_url": "https://api.github.com/repos/apache/submarine/issues/442/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/submarine/issues/442/comments",
        "events_url": "https://api.github.com/repos/apache/submarine/issues/442/events",
        "html_url": "https://github.com/apache/submarine/issues/442",
        "id": 734147905,
        "node_id": "MDU6SXNzdWU3MzQxNDc5MDU=",
        "number": 442,
        "title": "[Submarine Spark Security] \"Drop Table\" Access Control Bypassed / Ignored",
        "user": {
            "login": "atomeel",
            "id": 50314057,
            "node_id": "MDQ6VXNlcjUwMzE0MDU3",
            "avatar_url": "https://avatars.githubusercontent.com/u/50314057?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/atomeel",
            "html_url": "https://github.com/atomeel",
            "followers_url": "https://api.github.com/users/atomeel/followers",
            "following_url": "https://api.github.com/users/atomeel/following{/other_user}",
            "gists_url": "https://api.github.com/users/atomeel/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/atomeel/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/atomeel/subscriptions",
            "organizations_url": "https://api.github.com/users/atomeel/orgs",
            "repos_url": "https://api.github.com/users/atomeel/repos",
            "events_url": "https://api.github.com/users/atomeel/events{/privacy}",
            "received_events_url": "https://api.github.com/users/atomeel/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1564932574,
                "node_id": "MDU6TGFiZWwxNTY0OTMyNTc0",
                "url": "https://api.github.com/repos/apache/submarine/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": true,
        "assignee": {
            "login": "yaooqinn",
            "id": 8326978,
            "node_id": "MDQ6VXNlcjgzMjY5Nzg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8326978?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yaooqinn",
            "html_url": "https://github.com/yaooqinn",
            "followers_url": "https://api.github.com/users/yaooqinn/followers",
            "following_url": "https://api.github.com/users/yaooqinn/following{/other_user}",
            "gists_url": "https://api.github.com/users/yaooqinn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yaooqinn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yaooqinn/subscriptions",
            "organizations_url": "https://api.github.com/users/yaooqinn/orgs",
            "repos_url": "https://api.github.com/users/yaooqinn/repos",
            "events_url": "https://api.github.com/users/yaooqinn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yaooqinn/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "yaooqinn",
                "id": 8326978,
                "node_id": "MDQ6VXNlcjgzMjY5Nzg=",
                "avatar_url": "https://avatars.githubusercontent.com/u/8326978?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/yaooqinn",
                "html_url": "https://github.com/yaooqinn",
                "followers_url": "https://api.github.com/users/yaooqinn/followers",
                "following_url": "https://api.github.com/users/yaooqinn/following{/other_user}",
                "gists_url": "https://api.github.com/users/yaooqinn/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/yaooqinn/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/yaooqinn/subscriptions",
                "organizations_url": "https://api.github.com/users/yaooqinn/orgs",
                "repos_url": "https://api.github.com/users/yaooqinn/repos",
                "events_url": "https://api.github.com/users/yaooqinn/events{/privacy}",
                "received_events_url": "https://api.github.com/users/yaooqinn/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 9,
        "created_at": "2020-11-02T03:21:34Z",
        "updated_at": "2023-12-20T09:35:50Z",
        "closed_at": "2022-03-06T10:03:55Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hi, I am using Spark 2.4.5 and Ranger 1.2.0, and built the submarine-spark-security plugin on commit 2ff3339 with `mvn clean package -Dmaven.javadoc.skip=true -DskipTests -pl :submarine-spark-security -Pspark-2.4 -Pranger-1.2`.\r\n\r\nUpon creating a user in Ranger with no permissions (or in my case, precisely, I created an user in OpenLDAP, synced it via ranger-usersync, and did not assign any permissions for the new user), it is expected the user will get permission denied error (e.g. SparkAccessControlException) for all SQL operations (e.g. SELECT, INSERT, DROP). \r\n\r\nHowever, the permission denial only works for SELECT & INSERT.\r\n\"DROP TABLE\" was still allowed despite the user having no permissions at all, and the table was dropped as a result.\r\n\r\nI am setting `spark.sql.extensions=org.apache.submarine.spark.security.api.RangerSparkSQLExtension`if it matters. `hive.server2.authentication` is also set to `LDAP` in /spark/conf/hive-site.xml.",
        "closed_by": {
            "login": "xunliu",
            "id": 3677382,
            "node_id": "MDQ6VXNlcjM2NzczODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3677382?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xunliu",
            "html_url": "https://github.com/xunliu",
            "followers_url": "https://api.github.com/users/xunliu/followers",
            "following_url": "https://api.github.com/users/xunliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/xunliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xunliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xunliu/subscriptions",
            "organizations_url": "https://api.github.com/users/xunliu/orgs",
            "repos_url": "https://api.github.com/users/xunliu/repos",
            "events_url": "https://api.github.com/users/xunliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xunliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/apache/submarine/issues/442/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/submarine/issues/442/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/apache/submarine/issues/403",
        "repository_url": "https://api.github.com/repos/apache/submarine",
        "labels_url": "https://api.github.com/repos/apache/submarine/issues/403/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/submarine/issues/403/comments",
        "events_url": "https://api.github.com/repos/apache/submarine/issues/403/events",
        "html_url": "https://github.com/apache/submarine/issues/403",
        "id": 701926459,
        "node_id": "MDU6SXNzdWU3MDE5MjY0NTk=",
        "number": 403,
        "title": "spark-security Ranger plugin is not masking when a function is used around the column",
        "user": {
            "login": "harsha-tenneti",
            "id": 66634826,
            "node_id": "MDQ6VXNlcjY2NjM0ODI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/66634826?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/harsha-tenneti",
            "html_url": "https://github.com/harsha-tenneti",
            "followers_url": "https://api.github.com/users/harsha-tenneti/followers",
            "following_url": "https://api.github.com/users/harsha-tenneti/following{/other_user}",
            "gists_url": "https://api.github.com/users/harsha-tenneti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/harsha-tenneti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/harsha-tenneti/subscriptions",
            "organizations_url": "https://api.github.com/users/harsha-tenneti/orgs",
            "repos_url": "https://api.github.com/users/harsha-tenneti/repos",
            "events_url": "https://api.github.com/users/harsha-tenneti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/harsha-tenneti/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": true,
        "assignee": {
            "login": "yaooqinn",
            "id": 8326978,
            "node_id": "MDQ6VXNlcjgzMjY5Nzg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8326978?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yaooqinn",
            "html_url": "https://github.com/yaooqinn",
            "followers_url": "https://api.github.com/users/yaooqinn/followers",
            "following_url": "https://api.github.com/users/yaooqinn/following{/other_user}",
            "gists_url": "https://api.github.com/users/yaooqinn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yaooqinn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yaooqinn/subscriptions",
            "organizations_url": "https://api.github.com/users/yaooqinn/orgs",
            "repos_url": "https://api.github.com/users/yaooqinn/repos",
            "events_url": "https://api.github.com/users/yaooqinn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yaooqinn/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "yaooqinn",
                "id": 8326978,
                "node_id": "MDQ6VXNlcjgzMjY5Nzg=",
                "avatar_url": "https://avatars.githubusercontent.com/u/8326978?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/yaooqinn",
                "html_url": "https://github.com/yaooqinn",
                "followers_url": "https://api.github.com/users/yaooqinn/followers",
                "following_url": "https://api.github.com/users/yaooqinn/following{/other_user}",
                "gists_url": "https://api.github.com/users/yaooqinn/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/yaooqinn/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/yaooqinn/subscriptions",
                "organizations_url": "https://api.github.com/users/yaooqinn/orgs",
                "repos_url": "https://api.github.com/users/yaooqinn/repos",
                "events_url": "https://api.github.com/users/yaooqinn/events{/privacy}",
                "received_events_url": "https://api.github.com/users/yaooqinn/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-09-15T13:23:28Z",
        "updated_at": "2022-01-08T20:09:51Z",
        "closed_at": "2022-01-08T20:09:51Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "When a column has masking policies configured and the column is called inside a function. The output of the function is not returning masked data.\r\n\r\nFor example, let's say if a column `abc` from table `default_table` has `HASH_MASK` policy configured for a user `XYZ`. Below are a couple of queries where the user might get actual `abc` value instead of masked value.\r\n\r\n```\r\nselect substr(abc, 0, 100000000000)  from default_table\r\nselect concat(abc, '-', 'dummy') from default_table\r\n```",
        "closed_by": {
            "login": "harsha-tenneti",
            "id": 66634826,
            "node_id": "MDQ6VXNlcjY2NjM0ODI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/66634826?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/harsha-tenneti",
            "html_url": "https://github.com/harsha-tenneti",
            "followers_url": "https://api.github.com/users/harsha-tenneti/followers",
            "following_url": "https://api.github.com/users/harsha-tenneti/following{/other_user}",
            "gists_url": "https://api.github.com/users/harsha-tenneti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/harsha-tenneti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/harsha-tenneti/subscriptions",
            "organizations_url": "https://api.github.com/users/harsha-tenneti/orgs",
            "repos_url": "https://api.github.com/users/harsha-tenneti/repos",
            "events_url": "https://api.github.com/users/harsha-tenneti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/harsha-tenneti/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/apache/submarine/issues/403/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/submarine/issues/403/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/apache/submarine/issues/381",
        "repository_url": "https://api.github.com/repos/apache/submarine",
        "labels_url": "https://api.github.com/repos/apache/submarine/issues/381/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/submarine/issues/381/comments",
        "events_url": "https://api.github.com/repos/apache/submarine/issues/381/events",
        "html_url": "https://github.com/apache/submarine/issues/381",
        "id": 680719817,
        "node_id": "MDU6SXNzdWU2ODA3MTk4MTc=",
        "number": 381,
        "title": "Double-Checked Locking",
        "user": {
            "login": "QiAnXinCodeSafe",
            "id": 39950310,
            "node_id": "MDQ6VXNlcjM5OTUwMzEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/39950310?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/QiAnXinCodeSafe",
            "html_url": "https://github.com/QiAnXinCodeSafe",
            "followers_url": "https://api.github.com/users/QiAnXinCodeSafe/followers",
            "following_url": "https://api.github.com/users/QiAnXinCodeSafe/following{/other_user}",
            "gists_url": "https://api.github.com/users/QiAnXinCodeSafe/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/QiAnXinCodeSafe/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/QiAnXinCodeSafe/subscriptions",
            "organizations_url": "https://api.github.com/users/QiAnXinCodeSafe/orgs",
            "repos_url": "https://api.github.com/users/QiAnXinCodeSafe/repos",
            "events_url": "https://api.github.com/users/QiAnXinCodeSafe/events{/privacy}",
            "received_events_url": "https://api.github.com/users/QiAnXinCodeSafe/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-08-18T06:01:13Z",
        "updated_at": "2020-08-26T15:35:30Z",
        "closed_at": "2020-08-26T15:35:30Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "https://github.com/apache/submarine/blob/3060ef754d26b7d1e514cd0e2836cf55ab5e8ab2/submarine-commons/commons-utils/src/main/java/org/apache/submarine/commons/utils/SubmarineConfiguration.java#L89-L92\r\n\r\ndouble-Checked Locking is widely cited and used as an efficient method for implementing lazy initialization in a multithreaded environment.\r\nUnfortunately, it will not work reliably in a platform independent way when implemented in Java, without additional synchronization.",
        "closed_by": {
            "login": "jiwq",
            "id": 1187607,
            "node_id": "MDQ6VXNlcjExODc2MDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1187607?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jiwq",
            "html_url": "https://github.com/jiwq",
            "followers_url": "https://api.github.com/users/jiwq/followers",
            "following_url": "https://api.github.com/users/jiwq/following{/other_user}",
            "gists_url": "https://api.github.com/users/jiwq/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jiwq/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jiwq/subscriptions",
            "organizations_url": "https://api.github.com/users/jiwq/orgs",
            "repos_url": "https://api.github.com/users/jiwq/repos",
            "events_url": "https://api.github.com/users/jiwq/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jiwq/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/apache/submarine/issues/381/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/submarine/issues/381/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/apache/submarine/issues/373",
        "repository_url": "https://api.github.com/repos/apache/submarine",
        "labels_url": "https://api.github.com/repos/apache/submarine/issues/373/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/submarine/issues/373/comments",
        "events_url": "https://api.github.com/repos/apache/submarine/issues/373/events",
        "html_url": "https://github.com/apache/submarine/issues/373",
        "id": 675691264,
        "node_id": "MDU6SXNzdWU2NzU2OTEyNjQ=",
        "number": 373,
        "title": "Username and Password",
        "user": {
            "login": "ghost",
            "id": 10137,
            "node_id": "MDQ6VXNlcjEwMTM3",
            "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ghost",
            "html_url": "https://github.com/ghost",
            "followers_url": "https://api.github.com/users/ghost/followers",
            "following_url": "https://api.github.com/users/ghost/following{/other_user}",
            "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
            "organizations_url": "https://api.github.com/users/ghost/orgs",
            "repos_url": "https://api.github.com/users/ghost/repos",
            "events_url": "https://api.github.com/users/ghost/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ghost/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2020-08-09T12:25:27Z",
        "updated_at": "2020-08-26T09:26:20Z",
        "closed_at": "2020-08-26T09:26:20Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I perform a `./submarine.sh` and pointed my browser to the URL, however I'm having issues with logging on. \r\nI try to create an account, however after I enter my username and password, it never lets me log on. ",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/apache/submarine/issues/373/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/submarine/issues/373/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/apache/submarine/issues/336",
        "repository_url": "https://api.github.com/repos/apache/submarine",
        "labels_url": "https://api.github.com/repos/apache/submarine/issues/336/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/submarine/issues/336/comments",
        "events_url": "https://api.github.com/repos/apache/submarine/issues/336/events",
        "html_url": "https://github.com/apache/submarine/issues/336",
        "id": 648715830,
        "node_id": "MDU6SXNzdWU2NDg3MTU4MzA=",
        "number": 336,
        "title": "when I do association query\uff0cthrow an error",
        "user": {
            "login": "liu372943162",
            "id": 37950645,
            "node_id": "MDQ6VXNlcjM3OTUwNjQ1",
            "avatar_url": "https://avatars.githubusercontent.com/u/37950645?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/liu372943162",
            "html_url": "https://github.com/liu372943162",
            "followers_url": "https://api.github.com/users/liu372943162/followers",
            "following_url": "https://api.github.com/users/liu372943162/following{/other_user}",
            "gists_url": "https://api.github.com/users/liu372943162/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/liu372943162/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/liu372943162/subscriptions",
            "organizations_url": "https://api.github.com/users/liu372943162/orgs",
            "repos_url": "https://api.github.com/users/liu372943162/repos",
            "events_url": "https://api.github.com/users/liu372943162/events{/privacy}",
            "received_events_url": "https://api.github.com/users/liu372943162/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-07-01T06:37:17Z",
        "updated_at": "2020-07-08T06:05:25Z",
        "closed_at": "2020-07-08T06:05:25Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "@yaooqinn @liuxunorg\r\n\r\nFirst of all, thank you for your help\uff0cbut There is also a small problem:\r\n\r\nWhen I do single table query, it works well, but when I do association query, such as \u201cselect a.name, a.idno from test.table_user a join table_user B on a.idno = b.idno\u201d, the throw an error\uff1a\u201cError:org.apache.spark.sql.AnalysisException :Reference name is ambiguous,could be: a.name,b.name.;line 1 pos 0 (state=,code=0)\u201d\r\n[https://github.com/apache/submarine/issues/313#issue-639673105](url)",
        "closed_by": {
            "login": "liu372943162",
            "id": 37950645,
            "node_id": "MDQ6VXNlcjM3OTUwNjQ1",
            "avatar_url": "https://avatars.githubusercontent.com/u/37950645?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/liu372943162",
            "html_url": "https://github.com/liu372943162",
            "followers_url": "https://api.github.com/users/liu372943162/followers",
            "following_url": "https://api.github.com/users/liu372943162/following{/other_user}",
            "gists_url": "https://api.github.com/users/liu372943162/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/liu372943162/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/liu372943162/subscriptions",
            "organizations_url": "https://api.github.com/users/liu372943162/orgs",
            "repos_url": "https://api.github.com/users/liu372943162/repos",
            "events_url": "https://api.github.com/users/liu372943162/events{/privacy}",
            "received_events_url": "https://api.github.com/users/liu372943162/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/apache/submarine/issues/336/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/submarine/issues/336/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/apache/submarine/issues/333",
        "repository_url": "https://api.github.com/repos/apache/submarine",
        "labels_url": "https://api.github.com/repos/apache/submarine/issues/333/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/submarine/issues/333/comments",
        "events_url": "https://api.github.com/repos/apache/submarine/issues/333/events",
        "html_url": "https://github.com/apache/submarine/issues/333",
        "id": 647650393,
        "node_id": "MDU6SXNzdWU2NDc2NTAzOTM=",
        "number": 333,
        "title": "Ranger admin returning 401 when trying to pull policy in kerberized cluster using livy and yarn",
        "user": {
            "login": "morristm",
            "id": 25938492,
            "node_id": "MDQ6VXNlcjI1OTM4NDky",
            "avatar_url": "https://avatars.githubusercontent.com/u/25938492?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/morristm",
            "html_url": "https://github.com/morristm",
            "followers_url": "https://api.github.com/users/morristm/followers",
            "following_url": "https://api.github.com/users/morristm/following{/other_user}",
            "gists_url": "https://api.github.com/users/morristm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/morristm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/morristm/subscriptions",
            "organizations_url": "https://api.github.com/users/morristm/orgs",
            "repos_url": "https://api.github.com/users/morristm/repos",
            "events_url": "https://api.github.com/users/morristm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/morristm/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": true,
        "assignee": {
            "login": "yaooqinn",
            "id": 8326978,
            "node_id": "MDQ6VXNlcjgzMjY5Nzg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8326978?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yaooqinn",
            "html_url": "https://github.com/yaooqinn",
            "followers_url": "https://api.github.com/users/yaooqinn/followers",
            "following_url": "https://api.github.com/users/yaooqinn/following{/other_user}",
            "gists_url": "https://api.github.com/users/yaooqinn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yaooqinn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yaooqinn/subscriptions",
            "organizations_url": "https://api.github.com/users/yaooqinn/orgs",
            "repos_url": "https://api.github.com/users/yaooqinn/repos",
            "events_url": "https://api.github.com/users/yaooqinn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yaooqinn/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "yaooqinn",
                "id": 8326978,
                "node_id": "MDQ6VXNlcjgzMjY5Nzg=",
                "avatar_url": "https://avatars.githubusercontent.com/u/8326978?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/yaooqinn",
                "html_url": "https://github.com/yaooqinn",
                "followers_url": "https://api.github.com/users/yaooqinn/followers",
                "following_url": "https://api.github.com/users/yaooqinn/following{/other_user}",
                "gists_url": "https://api.github.com/users/yaooqinn/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/yaooqinn/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/yaooqinn/subscriptions",
                "organizations_url": "https://api.github.com/users/yaooqinn/orgs",
                "repos_url": "https://api.github.com/users/yaooqinn/repos",
                "events_url": "https://api.github.com/users/yaooqinn/events{/privacy}",
                "received_events_url": "https://api.github.com/users/yaooqinn/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 4,
        "created_at": "2020-06-29T20:37:01Z",
        "updated_at": "2022-03-06T10:07:48Z",
        "closed_at": "2022-03-06T10:07:48Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I built the submarine security plugin for ranger 1.2 and spark 2.3.  When I'm using pyspark and spark-submit it is able to retrieve the hive policy file from ranger and store it to the file system.  However, when I'm using Jupyter and livy to connect to an HDP 3.1.5 cluster it does not succeed in getting the policy file.  Instead I get this error\r\n\r\nWARN RangerAdminRESTClient: Error getting policies. secureMode=true, user=xxxxxxx (auth:SIMPLE), response={\"httpStatusCode\":401,\"statusCode\":0}, serviceName=XXXX_hive\r\n\r\nMy cluster is kerberized and when livy starts a yarn application it uses a proxy id to do it.  So I believe there is some level of impersonation occurring.  In the yarn application there is no tgt created for the userid that is running the application.  Incidentally when I run in the scenario above, where I'm using a pyspark shell or spark-submit I do have a tgt for the userid.  I believe that because I have a tgt in the scenario that works, I am then able to authenticate to ranger and successfully pull the policy.  However in the scenario where the tgt does not exist I'm not able to authenticate to Ranger and it gives a 401.  So my question is, how is ranger admin called to pull the policy, and what credentials are used to log in?  Can you point me to the code that does the authentication?  Have any ideas on how to fix this?",
        "closed_by": {
            "login": "xunliu",
            "id": 3677382,
            "node_id": "MDQ6VXNlcjM2NzczODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3677382?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xunliu",
            "html_url": "https://github.com/xunliu",
            "followers_url": "https://api.github.com/users/xunliu/followers",
            "following_url": "https://api.github.com/users/xunliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/xunliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xunliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xunliu/subscriptions",
            "organizations_url": "https://api.github.com/users/xunliu/orgs",
            "repos_url": "https://api.github.com/users/xunliu/repos",
            "events_url": "https://api.github.com/users/xunliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xunliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/apache/submarine/issues/333/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/submarine/issues/333/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/apache/submarine/issues/321",
        "repository_url": "https://api.github.com/repos/apache/submarine",
        "labels_url": "https://api.github.com/repos/apache/submarine/issues/321/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/submarine/issues/321/comments",
        "events_url": "https://api.github.com/repos/apache/submarine/issues/321/events",
        "html_url": "https://github.com/apache/submarine/issues/321",
        "id": 643150835,
        "node_id": "MDU6SXNzdWU2NDMxNTA4MzU=",
        "number": 321,
        "title": "Error getting ranger policies",
        "user": {
            "login": "morristm",
            "id": 25938492,
            "node_id": "MDQ6VXNlcjI1OTM4NDky",
            "avatar_url": "https://avatars.githubusercontent.com/u/25938492?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/morristm",
            "html_url": "https://github.com/morristm",
            "followers_url": "https://api.github.com/users/morristm/followers",
            "following_url": "https://api.github.com/users/morristm/following{/other_user}",
            "gists_url": "https://api.github.com/users/morristm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/morristm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/morristm/subscriptions",
            "organizations_url": "https://api.github.com/users/morristm/orgs",
            "repos_url": "https://api.github.com/users/morristm/repos",
            "events_url": "https://api.github.com/users/morristm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/morristm/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2020-06-22T15:11:02Z",
        "updated_at": "2021-11-19T10:09:34Z",
        "closed_at": "2020-06-24T18:12:00Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I built the submarine security plugin for ranger 1.2 and spark 2.3.  When I'm using pyspark and spark-submit it is able to retrieve the hive policy file from ranger and store it to the file system.  However, when I'm using Jupyter and livy to connect to an HDP 3.1.5 cluster it does not succeed in getting the policy file.  Instead I get this error\r\n\r\nWARN RangerAdminRESTClient: Error getting policies. secureMode=true, user=xxxxxxx (auth:SIMPLE), response={\"httpStatusCode\":401,\"statusCode\":0}, serviceName=XXXX_hive\r\n\r\nThe user id that is being used is the id that owns the spark application in yarn.  If its trying to pass a password for this user to ranger admin, I don't know where it would be getting it. What concerns me is that my cluster is kerberized and the error above shows auth:SIMPLE and not auth:KERBEROS.  I would expect it to authenticate to ranger with kerberos.  Can you offer any advice on why I'm not able to retrieve the policy in this situation but I am in others?  Is there a configuration I can add to set the userid/password that is used to pull the policy from ranger?",
        "closed_by": {
            "login": "morristm",
            "id": 25938492,
            "node_id": "MDQ6VXNlcjI1OTM4NDky",
            "avatar_url": "https://avatars.githubusercontent.com/u/25938492?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/morristm",
            "html_url": "https://github.com/morristm",
            "followers_url": "https://api.github.com/users/morristm/followers",
            "following_url": "https://api.github.com/users/morristm/following{/other_user}",
            "gists_url": "https://api.github.com/users/morristm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/morristm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/morristm/subscriptions",
            "organizations_url": "https://api.github.com/users/morristm/orgs",
            "repos_url": "https://api.github.com/users/morristm/repos",
            "events_url": "https://api.github.com/users/morristm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/morristm/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/apache/submarine/issues/321/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/submarine/issues/321/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/apache/submarine/issues/313",
        "repository_url": "https://api.github.com/repos/apache/submarine",
        "labels_url": "https://api.github.com/repos/apache/submarine/issues/313/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/submarine/issues/313/comments",
        "events_url": "https://api.github.com/repos/apache/submarine/issues/313/events",
        "html_url": "https://github.com/apache/submarine/issues/313",
        "id": 639673105,
        "node_id": "MDU6SXNzdWU2Mzk2NzMxMDU=",
        "number": 313,
        "title": "Submarine Spark Security Plugin \u5bf9\u8131\u654f\u5b57\u6bb5\u4f7f\u7528\u51fd\u6570\u65f6\uff0c\u8131\u654f\u89c4\u5219\u4e0d\u8d77\u4f5c\u7528",
        "user": {
            "login": "liu372943162",
            "id": 37950645,
            "node_id": "MDQ6VXNlcjM3OTUwNjQ1",
            "avatar_url": "https://avatars.githubusercontent.com/u/37950645?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/liu372943162",
            "html_url": "https://github.com/liu372943162",
            "followers_url": "https://api.github.com/users/liu372943162/followers",
            "following_url": "https://api.github.com/users/liu372943162/following{/other_user}",
            "gists_url": "https://api.github.com/users/liu372943162/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/liu372943162/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/liu372943162/subscriptions",
            "organizations_url": "https://api.github.com/users/liu372943162/orgs",
            "repos_url": "https://api.github.com/users/liu372943162/repos",
            "events_url": "https://api.github.com/users/liu372943162/events{/privacy}",
            "received_events_url": "https://api.github.com/users/liu372943162/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2020-06-16T13:38:23Z",
        "updated_at": "2020-07-01T01:09:49Z",
        "closed_at": "2020-06-30T00:31:40Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "@yaooqinn \r\n\u5f53\u6211\u8fdb\u884c\u8131\u654f\u5b57\u6bb5\u76f4\u63a5\u67e5\u8be2\u65f6\uff0c\u53ef\u4ee5\u6b63\u5e38\u8d77\u4f5c\u7528\uff0c\u4f46\u662f\u5f53\u6211\u4eec\u5bf9\u8131\u654f\u5b57\u6bb5\u4f7f\u7528\u51fd\u6570\u65f6\uff0c\u4f8b\u5982 substring(id_no,0,18) ,\u6b64\u65f6\u8131\u654f\u5c06\u4e0d\u8d77\u4f5c\u7528\uff0c\u5c06\u5c55\u793a\u539f\u6587\u3002\r",
        "closed_by": {
            "login": "asfgit",
            "id": 1341245,
            "node_id": "MDQ6VXNlcjEzNDEyNDU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1341245?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/asfgit",
            "html_url": "https://github.com/asfgit",
            "followers_url": "https://api.github.com/users/asfgit/followers",
            "following_url": "https://api.github.com/users/asfgit/following{/other_user}",
            "gists_url": "https://api.github.com/users/asfgit/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/asfgit/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/asfgit/subscriptions",
            "organizations_url": "https://api.github.com/users/asfgit/orgs",
            "repos_url": "https://api.github.com/users/asfgit/repos",
            "events_url": "https://api.github.com/users/asfgit/events{/privacy}",
            "received_events_url": "https://api.github.com/users/asfgit/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/apache/submarine/issues/313/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/submarine/issues/313/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/apache/submarine/issues/278",
        "repository_url": "https://api.github.com/repos/apache/submarine",
        "labels_url": "https://api.github.com/repos/apache/submarine/issues/278/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/submarine/issues/278/comments",
        "events_url": "https://api.github.com/repos/apache/submarine/issues/278/events",
        "html_url": "https://github.com/apache/submarine/issues/278",
        "id": 612827173,
        "node_id": "MDU6SXNzdWU2MTI4MjcxNzM=",
        "number": 278,
        "title": "Support to run submarine over Apache Ignite",
        "user": {
            "login": "john77eipe",
            "id": 1938453,
            "node_id": "MDQ6VXNlcjE5Mzg0NTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1938453?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/john77eipe",
            "html_url": "https://github.com/john77eipe",
            "followers_url": "https://api.github.com/users/john77eipe/followers",
            "following_url": "https://api.github.com/users/john77eipe/following{/other_user}",
            "gists_url": "https://api.github.com/users/john77eipe/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/john77eipe/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/john77eipe/subscriptions",
            "organizations_url": "https://api.github.com/users/john77eipe/orgs",
            "repos_url": "https://api.github.com/users/john77eipe/repos",
            "events_url": "https://api.github.com/users/john77eipe/events{/privacy}",
            "received_events_url": "https://api.github.com/users/john77eipe/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2020-05-05T19:04:46Z",
        "updated_at": "2020-08-27T06:01:13Z",
        "closed_at": "2020-08-27T06:01:13Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Any plans to support Apache Ignite as a data platform along with HDFS/Yarn and Kubernetes.",
        "closed_by": {
            "login": "jiwq",
            "id": 1187607,
            "node_id": "MDQ6VXNlcjExODc2MDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1187607?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jiwq",
            "html_url": "https://github.com/jiwq",
            "followers_url": "https://api.github.com/users/jiwq/followers",
            "following_url": "https://api.github.com/users/jiwq/following{/other_user}",
            "gists_url": "https://api.github.com/users/jiwq/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jiwq/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jiwq/subscriptions",
            "organizations_url": "https://api.github.com/users/jiwq/orgs",
            "repos_url": "https://api.github.com/users/jiwq/repos",
            "events_url": "https://api.github.com/users/jiwq/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jiwq/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/apache/submarine/issues/278/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/submarine/issues/278/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/apache/submarine/issues/202",
        "repository_url": "https://api.github.com/repos/apache/submarine",
        "labels_url": "https://api.github.com/repos/apache/submarine/issues/202/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/submarine/issues/202/comments",
        "events_url": "https://api.github.com/repos/apache/submarine/issues/202/events",
        "html_url": "https://github.com/apache/submarine/issues/202",
        "id": 575092529,
        "node_id": "MDU6SXNzdWU1NzUwOTI1Mjk=",
        "number": 202,
        "title": "Failed to import project Maven dependency",
        "user": {
            "login": "Languomao",
            "id": 30653241,
            "node_id": "MDQ6VXNlcjMwNjUzMjQx",
            "avatar_url": "https://avatars.githubusercontent.com/u/30653241?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Languomao",
            "html_url": "https://github.com/Languomao",
            "followers_url": "https://api.github.com/users/Languomao/followers",
            "following_url": "https://api.github.com/users/Languomao/following{/other_user}",
            "gists_url": "https://api.github.com/users/Languomao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Languomao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Languomao/subscriptions",
            "organizations_url": "https://api.github.com/users/Languomao/orgs",
            "repos_url": "https://api.github.com/users/Languomao/repos",
            "events_url": "https://api.github.com/users/Languomao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Languomao/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2020-03-04T02:30:35Z",
        "updated_at": "2020-08-27T06:07:42Z",
        "closed_at": "2020-08-27T06:07:42Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "When I introduced Maven dependencies for a project, the following error occurred:\r\n\r\n`[INFO] ------------------------------------------------------------------------\r\n[INFO] BUILD FAILURE\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Total time:  08:56 min\r\n[INFO] Finished at: 2020-03-04T01:34:24Z\r\n[INFO] ------------------------------------------------------------------------\r\n[ERROR] Failed to execute goal on project submarine-client: Could not resolve dependencies for project org.apache.submarine:submarine-client:jar:0.4.0-SNAPSHOT: Failed to collect dependencies at org.apache.submarine:commons-runtime:jar:0.4.0-SNAPSHOT: Failed to read artifact descriptor for org.apache.submarine:commons-runtime:jar:0.4.0-SNAPSHOT: Could not transfer artifact org.apache.submarine:commons-runtime:pom:0.4.0-SNAPSHOT from/to apache.snapshots (http://repository.apache.org/snapshots): Connect to repository.apache.org:80 [repository.apache.org/207.244.88.140] failed: Connection timed out (Connection timed out) -> [Help 1]\r\n[ERROR]\r\n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\r\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\r\n[ERROR]\r\n[ERROR] For more information about the errors and possible solutions, please read the following articles:\r\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/DependencyResolutionException\r\n`\r\n\r\nHow can we introduce the necessary dependency correctly? Or which online warehouse to use?\r\nLooking forward to your answer\uff0cThanks a lot!",
        "closed_by": {
            "login": "jiwq",
            "id": 1187607,
            "node_id": "MDQ6VXNlcjExODc2MDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1187607?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jiwq",
            "html_url": "https://github.com/jiwq",
            "followers_url": "https://api.github.com/users/jiwq/followers",
            "following_url": "https://api.github.com/users/jiwq/following{/other_user}",
            "gists_url": "https://api.github.com/users/jiwq/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jiwq/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jiwq/subscriptions",
            "organizations_url": "https://api.github.com/users/jiwq/orgs",
            "repos_url": "https://api.github.com/users/jiwq/repos",
            "events_url": "https://api.github.com/users/jiwq/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jiwq/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/apache/submarine/issues/202/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/submarine/issues/202/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/apache/submarine/issues/198",
        "repository_url": "https://api.github.com/repos/apache/submarine",
        "labels_url": "https://api.github.com/repos/apache/submarine/issues/198/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/submarine/issues/198/comments",
        "events_url": "https://api.github.com/repos/apache/submarine/issues/198/events",
        "html_url": "https://github.com/apache/submarine/issues/198",
        "id": 573520038,
        "node_id": "MDU6SXNzdWU1NzM1MjAwMzg=",
        "number": 198,
        "title": "restart hadoop services occurred an error when I finished the GPU setting for RM\u3001NM  and container-executor.cfg",
        "user": {
            "login": "ChanaLii",
            "id": 20842481,
            "node_id": "MDQ6VXNlcjIwODQyNDgx",
            "avatar_url": "https://avatars.githubusercontent.com/u/20842481?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ChanaLii",
            "html_url": "https://github.com/ChanaLii",
            "followers_url": "https://api.github.com/users/ChanaLii/followers",
            "following_url": "https://api.github.com/users/ChanaLii/following{/other_user}",
            "gists_url": "https://api.github.com/users/ChanaLii/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ChanaLii/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ChanaLii/subscriptions",
            "organizations_url": "https://api.github.com/users/ChanaLii/orgs",
            "repos_url": "https://api.github.com/users/ChanaLii/repos",
            "events_url": "https://api.github.com/users/ChanaLii/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ChanaLii/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2020-03-01T10:14:13Z",
        "updated_at": "2020-03-23T02:12:14Z",
        "closed_at": "2020-03-23T02:12:14Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "version:\r\nsubmarine-v0.3.0\r\nhadoop-v3.2.1\r\n\r\nI am following the documentation to set up GPU for ResourceManager, NodeManager and container-executor.cfg in my environment.\r\nThen I turned to restart hadoop with the following code:\r\n`\r\nARN_LOGFILE=resourcemanager.log ./sbin/yarn-daemon.sh start resourcemanager\r\n`\r\n`\r\nYARN_LOGFILE=nodemanager.log ./sbin/yarn-daemon.sh start nodemanager\r\n`\r\n`\r\nYARN_LOGFILE=timeline.log ./sbin/yarn-daemon.sh start timelineserver\r\n`\r\n`\r\nYARN_LOGFILE=mr-historyserver.log ./sbin/mr-jobhistory-daemon.sh start historyserver\r\n`\r\n\r\nI used the ** jps ** command to see if the service was running. Unfortunately, I found that the nodemanager service was not started. Then I found some errors in hadoop-root-nodemanager-71192c388b55.log\r\n\r\n`2020-03-01 09:52:38,744 ERROR org.apache.hadoop.yarn.server.nodemanager.containermanager.scheduler.ContainerScheduler: Failed to bootstrap configured resource subsystems! \r\norg.apache.hadoop.yarn.server.nodemanager.containermanager.linux.resources.ResourceHandlerException: Controller devices not mounted. You either need to mount it with yarn.nodemanager.linux-container-executor.cgroups.mount or mount cgroups before launching Yarn\r\n\tat org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.resources.CGroupsHandlerImpl.initializePreMountedCGroupController(CGroupsHandlerImpl.java:392)\r\n\tat org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.resources.CGroupsHandlerImpl.initializeCGroupController(CGroupsHandlerImpl.java:370)\r\n\tat org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.resources.gpu.GpuResourceHandlerImpl.bootstrap(GpuResourceHandlerImpl.java:93)\r\n\tat org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.resources.ResourceHandlerChain.bootstrap(ResourceHandlerChain.java:58)\r\n\tat org.apache.hadoop.yarn.server.nodemanager.containermanager.scheduler.ContainerScheduler.serviceInit(ContainerScheduler.java:146)\r\n\tat org.apache.hadoop.service.AbstractService.init(AbstractService.java:164)\r\n\tat org.apache.hadoop.service.CompositeService.serviceInit(CompositeService.java:108)\r\n\tat org.apache.hadoop.yarn.server.nodemanager.containermanager.ContainerManagerImpl.serviceInit(ContainerManagerImpl.java:323)\r\n\tat org.apache.hadoop.service.AbstractService.init(AbstractService.java:164)\r\n\tat org.apache.hadoop.service.CompositeService.serviceInit(CompositeService.java:108)\r\n\tat org.apache.hadoop.yarn.server.nodemanager.NodeManager.serviceInit(NodeManager.java:516)\r\n\tat org.apache.hadoop.service.AbstractService.init(AbstractService.java:164)\r\n\tat org.apache.hadoop.yarn.server.nodemanager.NodeManager.initAndStartNodeManager(NodeManager.java:974)\r\n\tat org.apache.hadoop.yarn.server.nodemanager.NodeManager.main(NodeManager.java:1054)\r\n2020-03-01 09:52:38,744 INFO org.apache.hadoop.service.AbstractService: Service org.apache.hadoop.yarn.server.nodemanager.containermanager.scheduler.ContainerScheduler failed in state INITED\r\njava.io.IOException: Failed to bootstrap configured resource subsystems!\r\n\tat org.apache.hadoop.yarn.server.nodemanager.containermanager.scheduler.ContainerScheduler.serviceInit(ContainerScheduler.java:150)\r\n\tat org.apache.hadoop.service.AbstractService.init(AbstractService.java:164)\r\n\tat org.apache.hadoop.service.CompositeService.serviceInit(CompositeService.java:108)\r\n\tat org.apache.hadoop.yarn.server.nodemanager.containermanager.ContainerManagerImpl.serviceInit(ContainerManagerImpl.java:323)\r\n\tat org.apache.hadoop.service.AbstractService.init(AbstractService.java:164)\r\n\tat org.apache.hadoop.service.CompositeService.serviceInit(CompositeService.java:108)\r\n\tat org.apache.hadoop.yarn.server.nodemanager.NodeManager.serviceInit(NodeManager.java:516)\r\n\tat org.apache.hadoop.service.AbstractService.init(AbstractService.java:164)\r\n\tat org.apache.hadoop.yarn.server.nodemanager.NodeManager.initAndStartNodeManager(NodeManager.java:974)\r\n\tat org.apache.hadoop.yarn.server.nodemanager.NodeManager.main(NodeManager.java:1054)\r\n2020-03-01 09:52:38,745 INFO org.apache.hadoop.service.AbstractService: Service org.apache.hadoop.yarn.server.nodemanager.containermanager.ContainerManagerImpl failed in state INITED\r\norg.apache.hadoop.service.ServiceStateException: java.io.IOException: Failed to bootstrap configured resource subsystems!\r\n\tat org.apache.hadoop.service.ServiceStateException.convert(ServiceStateException.java:105)\r\n\tat org.apache.hadoop.service.AbstractService.init(AbstractService.java:173)\r\n\tat org.apache.hadoop.service.CompositeService.serviceInit(CompositeService.java:108)\r\n\tat org.apache.hadoop.yarn.server.nodemanager.containermanager.ContainerManagerImpl.serviceInit(ContainerManagerImpl.java:323)\r\n\tat org.apache.hadoop.service.AbstractService.init(AbstractService.java:164)\r\n\tat org.apache.hadoop.service.CompositeService.serviceInit(CompositeService.java:108)\r\n\tat org.apache.hadoop.yarn.server.nodemanager.NodeManager.serviceInit(NodeManager.java:516)\r\n\tat org.apache.hadoop.service.AbstractService.init(AbstractService.java:164)\r\n\tat org.apache.hadoop.yarn.server.nodemanager.NodeManager.initAndStartNodeManager(NodeManager.java:974)\r\n\tat org.apache.hadoop.yarn.server.nodemanager.NodeManager.main(NodeManager.java:1054)\r\nCaused by: java.io.IOException: Failed to bootstrap configured resource subsystems!\r\n\tat org.apache.hadoop.yarn.server.nodemanager.containermanager.scheduler.ContainerScheduler.serviceInit(ContainerScheduler.java:150)\r\n\tat org.apache.hadoop.service.AbstractService.init(AbstractService.java:164)\r\n\t... 8 more\r\n`\r\n\r\nIt seems the env didn't mount \"/sys/fs/cgroup\",here's my docker started command:\r\n`\r\n\u279c  Downloads docker run -it -v /data/docker-images/:/sys/fs/cgroup -m 10G 968d612886ee bash\r\n`\r\nsomebody can help me ?",
        "closed_by": {
            "login": "ChanaLii",
            "id": 20842481,
            "node_id": "MDQ6VXNlcjIwODQyNDgx",
            "avatar_url": "https://avatars.githubusercontent.com/u/20842481?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ChanaLii",
            "html_url": "https://github.com/ChanaLii",
            "followers_url": "https://api.github.com/users/ChanaLii/followers",
            "following_url": "https://api.github.com/users/ChanaLii/following{/other_user}",
            "gists_url": "https://api.github.com/users/ChanaLii/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ChanaLii/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ChanaLii/subscriptions",
            "organizations_url": "https://api.github.com/users/ChanaLii/orgs",
            "repos_url": "https://api.github.com/users/ChanaLii/repos",
            "events_url": "https://api.github.com/users/ChanaLii/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ChanaLii/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/apache/submarine/issues/198/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/submarine/issues/198/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/apache/submarine/issues/196",
        "repository_url": "https://api.github.com/repos/apache/submarine",
        "labels_url": "https://api.github.com/repos/apache/submarine/issues/196/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/submarine/issues/196/comments",
        "events_url": "https://api.github.com/repos/apache/submarine/issues/196/events",
        "html_url": "https://github.com/apache/submarine/issues/196",
        "id": 573328244,
        "node_id": "MDU6SXNzdWU1NzMzMjgyNDQ=",
        "number": 196,
        "title": "occurred an error when I execute \"build_python_virtual_env.sh\"",
        "user": {
            "login": "ChanaLii",
            "id": 20842481,
            "node_id": "MDQ6VXNlcjIwODQyNDgx",
            "avatar_url": "https://avatars.githubusercontent.com/u/20842481?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ChanaLii",
            "html_url": "https://github.com/ChanaLii",
            "followers_url": "https://api.github.com/users/ChanaLii/followers",
            "following_url": "https://api.github.com/users/ChanaLii/following{/other_user}",
            "gists_url": "https://api.github.com/users/ChanaLii/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ChanaLii/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ChanaLii/subscriptions",
            "organizations_url": "https://api.github.com/users/ChanaLii/orgs",
            "repos_url": "https://api.github.com/users/ChanaLii/repos",
            "events_url": "https://api.github.com/users/ChanaLii/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ChanaLii/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-02-29T16:30:56Z",
        "updated_at": "2020-03-01T04:08:32Z",
        "closed_at": "2020-03-01T04:08:32Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "\r\nCan u tell me how to fix the error?\r\n`Invalid requirement: '/opt/pysubmarine/.' It looks like a path. File '/opt/pysubmarine/.' does not exist.`\r\n",
        "closed_by": {
            "login": "ChanaLii",
            "id": 20842481,
            "node_id": "MDQ6VXNlcjIwODQyNDgx",
            "avatar_url": "https://avatars.githubusercontent.com/u/20842481?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ChanaLii",
            "html_url": "https://github.com/ChanaLii",
            "followers_url": "https://api.github.com/users/ChanaLii/followers",
            "following_url": "https://api.github.com/users/ChanaLii/following{/other_user}",
            "gists_url": "https://api.github.com/users/ChanaLii/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ChanaLii/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ChanaLii/subscriptions",
            "organizations_url": "https://api.github.com/users/ChanaLii/orgs",
            "repos_url": "https://api.github.com/users/ChanaLii/repos",
            "events_url": "https://api.github.com/users/ChanaLii/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ChanaLii/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/apache/submarine/issues/196/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/submarine/issues/196/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/apache/submarine/issues/159",
        "repository_url": "https://api.github.com/repos/apache/submarine",
        "labels_url": "https://api.github.com/repos/apache/submarine/issues/159/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/submarine/issues/159/comments",
        "events_url": "https://api.github.com/repos/apache/submarine/issues/159/events",
        "html_url": "https://github.com/apache/submarine/issues/159",
        "id": 552311899,
        "node_id": "MDU6SXNzdWU1NTIzMTE4OTk=",
        "number": 159,
        "title": "horovod support",
        "user": {
            "login": "jasstionzyf",
            "id": 5241459,
            "node_id": "MDQ6VXNlcjUyNDE0NTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5241459?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasstionzyf",
            "html_url": "https://github.com/jasstionzyf",
            "followers_url": "https://api.github.com/users/jasstionzyf/followers",
            "following_url": "https://api.github.com/users/jasstionzyf/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasstionzyf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasstionzyf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasstionzyf/subscriptions",
            "organizations_url": "https://api.github.com/users/jasstionzyf/orgs",
            "repos_url": "https://api.github.com/users/jasstionzyf/repos",
            "events_url": "https://api.github.com/users/jasstionzyf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasstionzyf/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2020-01-20T13:49:57Z",
        "updated_at": "2020-08-27T06:11:11Z",
        "closed_at": "2020-08-27T06:11:10Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "horovod: https://github.com/horovod/horovod\r\n",
        "closed_by": {
            "login": "jiwq",
            "id": 1187607,
            "node_id": "MDQ6VXNlcjExODc2MDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1187607?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jiwq",
            "html_url": "https://github.com/jiwq",
            "followers_url": "https://api.github.com/users/jiwq/followers",
            "following_url": "https://api.github.com/users/jiwq/following{/other_user}",
            "gists_url": "https://api.github.com/users/jiwq/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jiwq/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jiwq/subscriptions",
            "organizations_url": "https://api.github.com/users/jiwq/orgs",
            "repos_url": "https://api.github.com/users/jiwq/repos",
            "events_url": "https://api.github.com/users/jiwq/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jiwq/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/apache/submarine/issues/159/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/submarine/issues/159/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/apache/submarine/issues/121",
        "repository_url": "https://api.github.com/repos/apache/submarine",
        "labels_url": "https://api.github.com/repos/apache/submarine/issues/121/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/submarine/issues/121/comments",
        "events_url": "https://api.github.com/repos/apache/submarine/issues/121/events",
        "html_url": "https://github.com/apache/submarine/issues/121",
        "id": 534408557,
        "node_id": "MDU6SXNzdWU1MzQ0MDg1NTc=",
        "number": 121,
        "title": "Tracking ticket for folks to be added to slack group",
        "user": {
            "login": "xunliu",
            "id": 3677382,
            "node_id": "MDQ6VXNlcjM2NzczODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3677382?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xunliu",
            "html_url": "https://github.com/xunliu",
            "followers_url": "https://api.github.com/users/xunliu/followers",
            "following_url": "https://api.github.com/users/xunliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/xunliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xunliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xunliu/subscriptions",
            "organizations_url": "https://api.github.com/users/xunliu/orgs",
            "repos_url": "https://api.github.com/users/xunliu/repos",
            "events_url": "https://api.github.com/users/xunliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xunliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1564932574,
                "node_id": "MDU6TGFiZWwxNTY0OTMyNTc0",
                "url": "https://api.github.com/repos/apache/submarine/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "open",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2019-12-07T14:30:50Z",
        "updated_at": "2022-04-30T03:11:08Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "hi, folks\r\n\r\nClick on the [Submarine invitation link](https://join.slack.com/t/asf-submarine/shared_invite/zt-18614cyqs-UhspdUOneiyg~ZPiVomDqw) to login the slack channel in the apache submarine community.\r\n\r\n",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/apache/submarine/issues/121/reactions",
            "total_count": 12,
            "+1": 2,
            "-1": 1,
            "laugh": 2,
            "hooray": 2,
            "confused": 0,
            "heart": 2,
            "rocket": 2,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/apache/submarine/issues/121/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    }
]